{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from\"react\";import*as Device from\"expo-device\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Image from\"react-native-web/dist/exports/Image\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Chats from\"./screens/profile1\";import*as Font from\"expo-font\";import{Block}from\"./components\";import*as theme from\"./theme\";import*as mocks from\"./mocks\";var App=function(_React$Component){_inherits(App,_React$Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={fontsLoaded:false,device:\"\"};return _this;}_createClass(App,[{key:\"loadFonts\",value:function loadFonts(){return Font.loadAsync({\"Montserrat-Regular\":require(\"./assets/fonts/Montserrat-Regular.ttf\"),\"Montserrat-Bold\":require(\"./assets/fonts/Montserrat-Bold.ttf\"),\"Montserrat-SemiBold\":require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\"Montserrat-Medium\":require(\"./assets/fonts/Montserrat-Medium.ttf\"),\"Montserrat-Light\":require(\"./assets/fonts/Montserrat-Light.ttf\")});}},{key:\"componentDidMount\",value:function componentDidMount(){return _regeneratorRuntime.async(function componentDidMount$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"sldnfsdf\"+Device.supportedCpuArchitectures);this.setState({device:Device.brand});_context.next=4;return _regeneratorRuntime.awrap(this.loadFonts());case 4:this.setState({fontsLoaded:true});case 5:case\"end\":return _context.stop();}}},null,this);}},{key:\"renderRequest\",value:function renderRequest(request){return React.createElement(Chats,null);}},{key:\"renderRequests\",value:function renderRequests(){var _this2=this;var requests=this.props.requests;return React.createElement(Block,{flex:0.8,column:true,color:\"gray2\",style:styles.requests},React.createElement(ScrollView,{showsVerticalScrollIndicator:false},requests.map(function(request){return React.createElement(TouchableOpacity,{activeOpacity:0.8,key:\"request-\"+request.id},_this2.renderRequest(request));})));}},{key:\"render\",value:function render(){if(!this.state.fontsLoaded&&!this.state.device){return React.createElement(Block,{center:true,middle:true},React.createElement(Image,{style:{width:140,height:140},source:require(\"./assets/icon.png\")}));}if(true){return React.createElement(View,null,React.createElement(Text,{style:{fontSize:32}},this.state.device));}if(this.state.device==10){return React.createElement(View,null,React.createElement(Text,{style:{fontSize:32}},\"Het phone\"));}if(this.state.device==6.0){return React.createElement(View,null,React.createElement(Text,{style:{fontSize:32}},\"Pc\"));}return React.createElement(SafeAreaView,{style:styles.safe},this.renderRequests());}}]);return App;}(React.Component);App.defaultProps={user:mocks.user,requests:mocks.requests,chart:mocks.chart};export default App;var styles=StyleSheet.create({safe:{flex:1,backgroundColor:theme.colors.primary},headerChart:{paddingTop:30,paddingBottom:30,zIndex:1},avatar:{width:25,height:25,borderRadius:25/2,marginRight:5},requests:{marginTop:-55,paddingTop:55+20,paddingHorizontal:15,zIndex:-1}});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/blood.js"],"names":["React","Device","Chats","Font","Block","theme","mocks","App","state","fontsLoaded","device","loadAsync","require","console","log","supportedCpuArchitectures","setState","brand","loadFonts","request","requests","props","styles","map","id","renderRequest","width","height","fontSize","safe","renderRequests","Component","defaultProps","user","chart","StyleSheet","create","flex","backgroundColor","colors","primary","headerChart","paddingTop","paddingBottom","zIndex","avatar","borderRadius","marginRight","marginTop","paddingHorizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport * as Device from \"expo-device\";\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport Chats from \"./screens/profile1\";\r\nimport * as Font from \"expo-font\";\r\nimport { Block } from \"./components\";\r\nimport * as theme from \"./theme\";\r\nimport * as mocks from \"./mocks\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fontsLoaded: false,\r\n    device: \"\",\r\n  };\r\n\r\n  loadFonts() {\r\n    return Font.loadAsync({\r\n      \"Montserrat-Regular\": require(\"./assets/fonts/Montserrat-Regular.ttf\"),\r\n      \"Montserrat-Bold\": require(\"./assets/fonts/Montserrat-Bold.ttf\"),\r\n      \"Montserrat-SemiBold\": require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\r\n      \"Montserrat-Medium\": require(\"./assets/fonts/Montserrat-Medium.ttf\"),\r\n      \"Montserrat-Light\": require(\"./assets/fonts/Montserrat-Light.ttf\"),\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    console.log(\"sldnfsdf\" + Device.supportedCpuArchitectures);\r\n    this.setState({ device: Device.brand });\r\n    await this.loadFonts();\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  renderRequest(request) {\r\n    return <Chats />;\r\n  }\r\n\r\n  renderRequests() {\r\n    const { requests } = this.props;\r\n\r\n    return (\r\n      <Block flex={0.8} column color=\"gray2\" style={styles.requests}>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          {requests.map((request) => (\r\n            <TouchableOpacity activeOpacity={0.8} key={`request-${request.id}`}>\r\n              {this.renderRequest(request)}\r\n            </TouchableOpacity>\r\n          ))}\r\n        </ScrollView>\r\n      </Block>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.fontsLoaded && !this.state.device) {\r\n      return (\r\n        <Block center middle>\r\n          <Image\r\n            style={{ width: 140, height: 140 }}\r\n            source={require(\"./assets/icon.png\")}\r\n          />\r\n        </Block>\r\n      );\r\n    }\r\n    if (true) {\r\n      return (\r\n        <View>\r\n          <Text style={{ fontSize: 32 }}>{this.state.device}</Text>\r\n        </View>\r\n      );\r\n    }\r\n    if (this.state.device == 10) {\r\n      return (\r\n        <View>\r\n          <Text style={{ fontSize: 32 }}>Het phone</Text>\r\n        </View>\r\n      );\r\n    }\r\n    if (this.state.device == 6.0) {\r\n      return (\r\n        <View>\r\n          <Text style={{ fontSize: 32 }}>Pc</Text>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <SafeAreaView style={styles.safe}>{this.renderRequests()}</SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nApp.defaultProps = {\r\n  user: mocks.user,\r\n  requests: mocks.requests,\r\n  chart: mocks.chart,\r\n};\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  safe: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.primary,\r\n  },\r\n  headerChart: {\r\n    paddingTop: 30,\r\n    paddingBottom: 30,\r\n    zIndex: 1,\r\n  },\r\n  avatar: {\r\n    width: 25,\r\n    height: 25,\r\n    borderRadius: 25 / 2,\r\n    marginRight: 5,\r\n  },\r\n  requests: {\r\n    marginTop: -55,\r\n    paddingTop: 55 + 20,\r\n    paddingHorizontal: 15,\r\n    zIndex: -1,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}