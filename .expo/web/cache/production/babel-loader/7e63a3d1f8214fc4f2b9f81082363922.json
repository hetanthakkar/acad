{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import color from'color';import FAB from\"./FAB\";import Text from\"../Typography/Text\";import Card from\"../Card/Card\";import{withTheme}from\"../../core/theming\";var FABGroup=function(_React$Component){_inherits(FABGroup,_React$Component);var _super=_createSuper(FABGroup);function FABGroup(){var _this;_classCallCheck(this,FABGroup);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"state\",{backdrop:new Animated.Value(0),animations:[]});_defineProperty(_assertThisInitialized(_this),\"close\",function(){return _this.props.onStateChange({open:false});});_defineProperty(_assertThisInitialized(_this),\"toggle\",function(){return _this.props.onStateChange({open:!_this.props.open});});return _this;}_createClass(FABGroup,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.open===prevProps.open){return;}var scale=this.props.theme.animation.scale;if(this.props.open){Animated.parallel([Animated.timing(this.state.backdrop,{toValue:1,duration:250*scale,useNativeDriver:true}),Animated.stagger(50*scale,this.state.animations.map(function(animation){return Animated.timing(animation,{toValue:1,duration:150*scale,useNativeDriver:true});}).reverse())]).start();}else{Animated.parallel([Animated.timing(this.state.backdrop,{toValue:0,duration:200*scale,useNativeDriver:true})].concat(_toConsumableArray(this.state.animations.map(function(animation){return Animated.timing(animation,{toValue:0,duration:150*scale,useNativeDriver:true});})))).start();}}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,actions=_this$props.actions,icon=_this$props.icon,open=_this$props.open,_onPress=_this$props.onPress,accessibilityLabel=_this$props.accessibilityLabel,theme=_this$props.theme,style=_this$props.style,fabStyle=_this$props.fabStyle,visible=_this$props.visible,testID=_this$props.testID;var colors=theme.colors;var labelColor=theme.dark?colors.text:color(colors.text).fade(0.54).rgb().string();var backdropOpacity=open?this.state.backdrop.interpolate({inputRange:[0,0.5,1],outputRange:[0,1,1]}):this.state.backdrop;var opacities=this.state.animations;var scales=opacities.map(function(opacity){return open?opacity.interpolate({inputRange:[0,1],outputRange:[0.8,1]}):1;});return React.createElement(View,{pointerEvents:\"box-none\",style:[styles.container,style]},React.createElement(TouchableWithoutFeedback,{onPress:this.close},React.createElement(Animated.View,{pointerEvents:open?'auto':'none',style:[styles.backdrop,{opacity:backdropOpacity,backgroundColor:colors.backdrop}]})),React.createElement(SafeAreaView,{pointerEvents:\"box-none\",style:styles.safeArea},React.createElement(View,{pointerEvents:open?'box-none':'none'},actions.map(function(it,i){return React.createElement(View,{key:i,style:styles.item,pointerEvents:open?'box-none':'none'},it.label&&React.createElement(Card,{style:[styles.label,{transform:[{scale:scales[i]}],opacity:opacities[i]}],onPress:function onPress(){it.onPress();_this2.close();},accessibilityLabel:it.accessibilityLabel!=='undefined'?it.accessibilityLabel:it.label,accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\"},React.createElement(Text,{style:{color:labelColor}},it.label)),React.createElement(FAB,{small:true,icon:it.icon,color:it.color,style:[{transform:[{scale:scales[i]}],opacity:opacities[i],backgroundColor:theme.colors.surface},it.style],onPress:function onPress(){it.onPress();_this2.close();},accessibilityLabel:typeof it.accessibilityLabel!=='undefined'?it.accessibilityLabel:it.label,accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\",testID:it.testID,visible:open}));})),React.createElement(FAB,{onPress:function onPress(){_onPress===null||_onPress===void 0?void 0:_onPress();_this2.toggle();},icon:icon,color:this.props.color,accessibilityLabel:accessibilityLabel,accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\",style:[styles.fab,fabStyle],visible:visible,testID:testID})));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){return{animations:nextProps.actions.map(function(_,i){return prevState.animations[i]||new Animated.Value(nextProps.open?1:0);})};}}]);return FABGroup;}(React.Component);_defineProperty(FABGroup,\"displayName\",'FAB.Group');export default withTheme(FABGroup);export{FABGroup};var styles=StyleSheet.create({safeArea:{alignItems:'flex-end'},container:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{justifyContent:'flex-end'}),fab:{marginHorizontal:16,marginBottom:16,marginTop:0},backdrop:_objectSpread({},StyleSheet.absoluteFillObject),label:{borderRadius:5,paddingHorizontal:12,paddingVertical:6,marginVertical:8,marginHorizontal:16,elevation:2},item:{marginHorizontal:24,marginBottom:16,flexDirection:'row',justifyContent:'flex-end',alignItems:'center'}});","map":{"version":3,"sources":["FABGroup.tsx"],"names":["FABGroup","React","animations","nextProps","prevState","Animated","backdrop","prevProps","scale","toValue","duration","useNativeDriver","animation","open","onPress","testID","colors","labelColor","theme","color","backdropOpacity","inputRange","outputRange","opacities","scales","opacity","styles","close","backgroundColor","safeArea","actions","it","transform","surface","withTheme","alignItems","container","StyleSheet","justifyContent","fab","marginHorizontal","marginBottom","marginTop","label","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","item","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport type { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `color`: custom icon color of the action item\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    onPress: () => void;\n    testID?: string;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\ntype State = {\n  backdrop: Animated.Value;\n  animations: Animated.Value[];\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass FABGroup extends React.Component<Props, State> {\n  static displayName = 'FAB.Group';\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    return {\n      animations: nextProps.actions.map(\n        (_, i) =>\n          prevState.animations[i] || new Animated.Value(nextProps.open ? 1 : 0)\n      ),\n    };\n  }\n\n  state: State = {\n    backdrop: new Animated.Value(0),\n    animations: [],\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.open === prevProps.open) {\n      return;\n    }\n\n    const { scale } = this.props.theme.animation;\n    if (this.props.open) {\n      Animated.parallel([\n        Animated.timing(this.state.backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          50 * scale,\n          this.state.animations\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(this.state.backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...this.state.animations.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }\n\n  private close = () => this.props.onStateChange({ open: false });\n\n  private toggle = () => this.props.onStateChange({ open: !this.props.open });\n\n  render() {\n    const {\n      actions,\n      icon,\n      open,\n      onPress,\n      accessibilityLabel,\n      theme,\n      style,\n      fabStyle,\n      visible,\n      testID,\n    } = this.props;\n    const { colors } = theme;\n\n    const labelColor = theme.dark\n      ? colors.text\n      : color(colors.text).fade(0.54).rgb().string();\n    const backdropOpacity = open\n      ? this.state.backdrop.interpolate({\n          inputRange: [0, 0.5, 1],\n          outputRange: [0, 1, 1],\n        })\n      : this.state.backdrop;\n\n    const opacities = this.state.animations;\n    const scales = opacities.map((opacity) =>\n      open\n        ? opacity.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0.8, 1],\n          })\n        : 1\n    );\n\n    return (\n      <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n        <TouchableWithoutFeedback onPress={this.close}>\n          <Animated.View\n            pointerEvents={open ? 'auto' : 'none'}\n            style={[\n              styles.backdrop,\n              {\n                opacity: backdropOpacity,\n                backgroundColor: colors.backdrop,\n              },\n            ]}\n          />\n        </TouchableWithoutFeedback>\n        <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n          <View pointerEvents={open ? 'box-none' : 'none'}>\n            {actions.map((it, i) => (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={styles.item}\n                pointerEvents={open ? 'box-none' : 'none'}\n              >\n                {it.label && (\n                  <Card\n                    style={\n                      [\n                        styles.label,\n                        {\n                          transform: [{ scale: scales[i] }],\n                          opacity: opacities[i],\n                        },\n                      ] as StyleProp<ViewStyle>\n                    }\n                    onPress={() => {\n                      it.onPress();\n                      this.close();\n                    }}\n                    accessibilityLabel={\n                      it.accessibilityLabel !== 'undefined'\n                        ? it.accessibilityLabel\n                        : it.label\n                    }\n                    accessibilityTraits=\"button\"\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                  >\n                    <Text style={{ color: labelColor }}>{it.label}</Text>\n                  </Card>\n                )}\n                <FAB\n                  small\n                  icon={it.icon}\n                  color={it.color}\n                  style={\n                    [\n                      {\n                        transform: [{ scale: scales[i] }],\n                        opacity: opacities[i],\n                        backgroundColor: theme.colors.surface,\n                      },\n                      it.style,\n                    ] as StyleProp<ViewStyle>\n                  }\n                  onPress={() => {\n                    it.onPress();\n                    this.close();\n                  }}\n                  accessibilityLabel={\n                    typeof it.accessibilityLabel !== 'undefined'\n                      ? it.accessibilityLabel\n                      : it.label\n                  }\n                  accessibilityTraits=\"button\"\n                  accessibilityComponentType=\"button\"\n                  accessibilityRole=\"button\"\n                  testID={it.testID}\n                  visible={open}\n                />\n              </View>\n            ))}\n          </View>\n          <FAB\n            onPress={() => {\n              onPress?.();\n              this.toggle();\n            }}\n            icon={icon}\n            color={this.props.color}\n            accessibilityLabel={accessibilityLabel}\n            accessibilityTraits=\"button\"\n            accessibilityComponentType=\"button\"\n            accessibilityRole=\"button\"\n            style={[styles.fab, fabStyle]}\n            visible={visible}\n            testID={testID}\n          />\n        </SafeAreaView>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(FABGroup);\n\n// @component-docs ignore-next-line\nexport { FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginHorizontal: 24,\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}