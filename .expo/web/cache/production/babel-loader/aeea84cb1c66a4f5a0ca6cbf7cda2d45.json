{"ast":null,"code":"import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import NativeTextInput from\"react-native-web/dist/exports/TextInput\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import color from'color';import TextInputAdornment,{getAdornmentConfig,getAdornmentStyleAdjustmentForNativeInput}from\"./Adornment/TextInputAdornment\";import InputLabel from\"./Label/InputLabel\";import LabelBackground from\"./Label/LabelBackground\";import{MAXIMIZED_LABEL_FONT_SIZE,MINIMIZED_LABEL_FONT_SIZE,LABEL_WIGGLE_X_OFFSET,ADORNMENT_SIZE,ADORNMENT_OFFSET}from\"./constants\";import{calculateLabelTopPosition,calculateInputHeight,calculatePadding,adjustPaddingOut,interpolatePlaceholder,calculateOutlinedIconAndAffixTopPosition}from\"./helpers\";import{AdornmentType,AdornmentSide}from\"./Adornment/enums\";var OUTLINE_MINIMIZED_LABEL_Y_OFFSET=-6;var LABEL_PADDING_TOP=8;var MIN_HEIGHT=64;var MIN_DENSE_HEIGHT=48;var INPUT_PADDING_HORIZONTAL=14;var TextInputOutlined=function(_React$Component){_inherits(TextInputOutlined,_React$Component);var _super=_createSuper(TextInputOutlined);function TextInputOutlined(){_classCallCheck(this,TextInputOutlined);return _super.apply(this,arguments);}_createClass(TextInputOutlined,[{key:\"render\",value:function render(){var _affixTopPosition,_onAffixChange,_topPosition;var _this$props=this.props,disabled=_this$props.disabled,editable=_this$props.editable,label=_this$props.label,error=_this$props.error,selectionColor=_this$props.selectionColor,underlineColor=_this$props.underlineColor,dense=_this$props.dense,style=_this$props.style,theme=_this$props.theme,render=_this$props.render,multiline=_this$props.multiline,parentState=_this$props.parentState,innerRef=_this$props.innerRef,onFocus=_this$props.onFocus,forceFocus=_this$props.forceFocus,onBlur=_this$props.onBlur,onChangeText=_this$props.onChangeText,onLayoutAnimatedText=_this$props.onLayoutAnimatedText,onLeftAffixLayoutChange=_this$props.onLeftAffixLayoutChange,onRightAffixLayoutChange=_this$props.onRightAffixLayoutChange,left=_this$props.left,right=_this$props.right,rest=_objectWithoutProperties(_this$props,[\"disabled\",\"editable\",\"label\",\"error\",\"selectionColor\",\"underlineColor\",\"dense\",\"style\",\"theme\",\"render\",\"multiline\",\"parentState\",\"innerRef\",\"onFocus\",\"forceFocus\",\"onBlur\",\"onChangeText\",\"onLayoutAnimatedText\",\"onLeftAffixLayoutChange\",\"onRightAffixLayoutChange\",\"left\",\"right\"]);var adornmentConfig=getAdornmentConfig({left:left,right:right});var colors=theme.colors,fonts=theme.fonts;var font=fonts.regular;var hasActiveOutline=parentState.focused||error;var _ref=StyleSheet.flatten(style)||{},fontSizeStyle=_ref.fontSize,fontWeight=_ref.fontWeight,height=_ref.height,_ref$backgroundColor=_ref.backgroundColor,backgroundColor=_ref$backgroundColor===void 0?colors.background:_ref$backgroundColor,viewStyle=_objectWithoutProperties(_ref,[\"fontSize\",\"fontWeight\",\"height\",\"backgroundColor\"]);var fontSize=fontSizeStyle||MAXIMIZED_LABEL_FONT_SIZE;var inputTextColor,activeColor,outlineColor,placeholderColor,errorColor;if(disabled){inputTextColor=activeColor=color(colors.text).alpha(0.54).rgb().string();placeholderColor=outlineColor=colors.disabled;}else{inputTextColor=colors.text;activeColor=error?colors.error:colors.primary;placeholderColor=outlineColor=colors.placeholder;errorColor=colors.error;}var labelScale=MINIMIZED_LABEL_FONT_SIZE/fontSize;var fontScale=MAXIMIZED_LABEL_FONT_SIZE/fontSize;var labelWidth=parentState.labelLayout.width;var labelHeight=parentState.labelLayout.height;var labelHalfWidth=labelWidth/2;var labelHalfHeight=labelHeight/2;var baseLabelTranslateX=(I18nManager.isRTL?1:-1)*(labelHalfWidth-labelScale*labelWidth/2-(fontSize-MINIMIZED_LABEL_FONT_SIZE)*labelScale);var labelTranslationXOffset=0;var isAdornmentLeftIcon=adornmentConfig.some(function(_ref2){var side=_ref2.side,type=_ref2.type;return side===AdornmentSide.Left&&type===AdornmentType.Icon;});if(isAdornmentLeftIcon){labelTranslationXOffset=(I18nManager.isRTL?-1:1)*(ADORNMENT_SIZE+ADORNMENT_OFFSET-8);}var minInputHeight=(dense?MIN_DENSE_HEIGHT:MIN_HEIGHT)-LABEL_PADDING_TOP;var inputHeight=calculateInputHeight(labelHeight,height,minInputHeight);var topPosition=calculateLabelTopPosition(labelHeight,inputHeight,LABEL_PADDING_TOP);if(height&&typeof height!=='number'){console.warn('Currently we support only numbers in height prop');}var paddingSettings={height:height?+height:null,labelHalfHeight:labelHalfHeight,offset:LABEL_PADDING_TOP,multiline:multiline?multiline:null,dense:dense?dense:null,topPosition:topPosition,fontSize:fontSize,label:label,scale:fontScale,isAndroid:Platform.OS==='android',styles:StyleSheet.flatten(dense?styles.inputOutlinedDense:styles.inputOutlined)};var pad=calculatePadding(paddingSettings);var paddingOut=adjustPaddingOut(_objectSpread(_objectSpread({},paddingSettings),{},{pad:pad}));var baseLabelTranslateY=-labelHalfHeight-(topPosition+OUTLINE_MINIMIZED_LABEL_Y_OFFSET);var placeholderOpacity=interpolatePlaceholder(parentState.labeled,hasActiveOutline);var labelProps={label:label,onLayoutAnimatedText:onLayoutAnimatedText,placeholderOpacity:placeholderOpacity,error:error,placeholderStyle:styles.placeholder,baseLabelTranslateY:baseLabelTranslateY,baseLabelTranslateX:baseLabelTranslateX,font:font,fontSize:fontSize,fontWeight:fontWeight,labelScale:labelScale,wiggleOffsetX:LABEL_WIGGLE_X_OFFSET,topPosition:topPosition,hasActiveOutline:hasActiveOutline,activeColor:activeColor,placeholderColor:placeholderColor,backgroundColor:backgroundColor,errorColor:errorColor,labelTranslationXOffset:labelTranslationXOffset};var minHeight=height||(dense?MIN_DENSE_HEIGHT:MIN_HEIGHT);var leftLayout=parentState.leftLayout,rightLayout=parentState.rightLayout;var leftAffixTopPosition=calculateOutlinedIconAndAffixTopPosition({height:minHeight,affixHeight:leftLayout.height||0,labelYOffset:-OUTLINE_MINIMIZED_LABEL_Y_OFFSET});var rightAffixTopPosition=calculateOutlinedIconAndAffixTopPosition({height:minHeight,affixHeight:rightLayout.height||0,labelYOffset:-OUTLINE_MINIMIZED_LABEL_Y_OFFSET});var iconTopPosition=calculateOutlinedIconAndAffixTopPosition({height:minHeight,affixHeight:ADORNMENT_SIZE,labelYOffset:-OUTLINE_MINIMIZED_LABEL_Y_OFFSET});var rightAffixWidth=right?rightLayout.width||ADORNMENT_SIZE:ADORNMENT_SIZE;var leftAffixWidth=left?leftLayout.width||ADORNMENT_SIZE:ADORNMENT_SIZE;var adornmentStyleAdjustmentForNativeInput=getAdornmentStyleAdjustmentForNativeInput({adornmentConfig:adornmentConfig,rightAffixWidth:rightAffixWidth,leftAffixWidth:leftAffixWidth});var affixTopPosition=(_affixTopPosition={},_defineProperty2(_affixTopPosition,AdornmentSide.Left,leftAffixTopPosition),_defineProperty2(_affixTopPosition,AdornmentSide.Right,rightAffixTopPosition),_affixTopPosition);var onAffixChange=(_onAffixChange={},_defineProperty2(_onAffixChange,AdornmentSide.Left,onLeftAffixLayoutChange),_defineProperty2(_onAffixChange,AdornmentSide.Right,onRightAffixLayoutChange),_onAffixChange);var adornmentProps={adornmentConfig:adornmentConfig,forceFocus:forceFocus,topPosition:(_topPosition={},_defineProperty2(_topPosition,AdornmentType.Icon,iconTopPosition),_defineProperty2(_topPosition,AdornmentType.Affix,affixTopPosition),_topPosition),onAffixChange:onAffixChange,isTextInputFocused:parentState.focused};if(adornmentConfig.length){adornmentProps=_objectSpread(_objectSpread({},adornmentProps),{},{left:left,right:right,textStyle:_objectSpread(_objectSpread({},font),{},{fontSize:fontSize,fontWeight:fontWeight}),visible:this.props.parentState.labeled});}return React.createElement(View,{style:viewStyle},React.createElement(View,null,React.createElement(Outline,{theme:theme,hasActiveOutline:hasActiveOutline,activeColor:activeColor,outlineColor:outlineColor,backgroundColor:backgroundColor}),React.createElement(View,{style:{paddingTop:LABEL_PADDING_TOP,paddingBottom:0,minHeight:minHeight}},React.createElement(InputLabel,{parentState:parentState,labelProps:labelProps,labelBackground:LabelBackground}),render===null||render===void 0?void 0:render(_objectSpread(_objectSpread({},rest),{},{ref:innerRef,onChangeText:onChangeText,placeholder:label?parentState.placeholder:this.props.placeholder,placeholderTextColor:placeholderColor,editable:!disabled&&editable,selectionColor:typeof selectionColor==='undefined'?activeColor:selectionColor,onFocus:onFocus,onBlur:onBlur,underlineColorAndroid:'transparent',multiline:multiline,style:[styles.input,!multiline||multiline&&height?{height:inputHeight}:{},paddingOut,_objectSpread(_objectSpread({},font),{},{fontSize:fontSize,fontWeight:fontWeight,color:inputTextColor,textAlignVertical:multiline?'top':'center'}),adornmentStyleAdjustmentForNativeInput]}))),React.createElement(TextInputAdornment,adornmentProps)));}}]);return TextInputOutlined;}(React.Component);_defineProperty(TextInputOutlined,\"defaultProps\",{disabled:false,error:false,multiline:false,editable:true,render:function render(props){return React.createElement(NativeTextInput,props);}});export default TextInputOutlined;var Outline=function Outline(_ref3){var theme=_ref3.theme,hasActiveOutline=_ref3.hasActiveOutline,activeColor=_ref3.activeColor,outlineColor=_ref3.outlineColor,backgroundColor=_ref3.backgroundColor;return React.createElement(View,{pointerEvents:\"none\",style:[styles.outline,{backgroundColor:backgroundColor,borderRadius:theme.roundness,borderWidth:hasActiveOutline?2:1,borderColor:hasActiveOutline?activeColor:outlineColor}]});};var styles=StyleSheet.create({placeholder:{position:'absolute',left:0,paddingHorizontal:INPUT_PADDING_HORIZONTAL},outline:{position:'absolute',left:0,right:0,top:6,bottom:0},input:{flexGrow:1,paddingHorizontal:INPUT_PADDING_HORIZONTAL,margin:0,textAlign:I18nManager.isRTL?'right':'left',zIndex:1},inputOutlined:{paddingTop:8,paddingBottom:8},inputOutlinedDense:{paddingTop:4,paddingBottom:4}});","map":{"version":3,"sources":["TextInputOutlined.tsx"],"names":["OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","React","disabled","error","multiline","editable","render","props","right","adornmentConfig","getAdornmentConfig","left","fonts","font","hasActiveOutline","parentState","fontSize","backgroundColor","colors","background","StyleSheet","fontSizeStyle","inputTextColor","activeColor","color","placeholderColor","outlineColor","errorColor","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","MAXIMIZED_LABEL_FONT_SIZE","labelWidth","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","labelTranslationXOffset","isAdornmentLeftIcon","type","side","AdornmentSide","AdornmentType","ADORNMENT_SIZE","minInputHeight","dense","inputHeight","calculateInputHeight","topPosition","calculateLabelTopPosition","height","console","paddingSettings","offset","label","scale","isAndroid","Platform","styles","pad","calculatePadding","paddingOut","adjustPaddingOut","baseLabelTranslateY","placeholderOpacity","interpolatePlaceholder","labelProps","onLayoutAnimatedText","placeholderStyle","fontWeight","wiggleOffsetX","minHeight","rightLayout","leftAffixTopPosition","calculateOutlinedIconAndAffixTopPosition","affixHeight","leftLayout","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","getAdornmentStyleAdjustmentForNativeInput","affixTopPosition","onAffixChange","onRightAffixLayoutChange","adornmentProps","forceFocus","isTextInputFocused","focused","textStyle","visible","labeled","viewStyle","paddingTop","paddingBottom","LabelBackground","ref","onChangeText","placeholder","placeholderTextColor","selectionColor","onFocus","onBlur","underlineColorAndroid","style","textAlignVertical","Outline","borderRadius","theme","borderWidth","borderColor","position","paddingHorizontal","outline","top","bottom","input","flexGrow","margin","textAlign","zIndex","inputOutlined","inputOutlinedDense"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  ADORNMENT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n} from './helpers';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\n\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nclass TextInputOutlined extends React.Component<ChildTextInputProps> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      underlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      forceFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      onLeftAffixLayoutChange,\n      onRightAffixLayoutChange,\n      left,\n      right,\n      ...rest\n    } = this.props;\n\n    const adornmentConfig = getAdornmentConfig({ left, right });\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      backgroundColor = colors.background,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = outlineColor = colors.disabled;\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = outlineColor = colors.placeholder;\n      errorColor = colors.error;\n    }\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth -\n        (labelScale * labelWidth) / 2 -\n        (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n    let labelTranslationXOffset = 0;\n    const isAdornmentLeftIcon = adornmentConfig.some(\n      ({ side, type }) =>\n        side === AdornmentSide.Left && type === AdornmentType.Icon\n    );\n    if (isAdornmentLeftIcon) {\n      labelTranslationXOffset =\n        (I18nManager.isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - 8);\n    }\n\n    const minInputHeight =\n      (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      LABEL_PADDING_TOP\n    );\n\n    if (height && typeof height !== 'number') {\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n    }\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: LABEL_PADDING_TOP,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputOutlinedDense : styles.inputOutlined\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = interpolatePlaceholder(\n      parentState.labeled,\n      hasActiveOutline\n    );\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      backgroundColor,\n      errorColor,\n      labelTranslationXOffset,\n    };\n\n    const minHeight = (height ||\n      (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT)) as number;\n\n    const { leftLayout, rightLayout } = parentState;\n\n    const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: leftLayout.height || 0,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n    });\n\n    const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: rightLayout.height || 0,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n    });\n    const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: ADORNMENT_SIZE,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n    });\n\n    const rightAffixWidth = right\n      ? rightLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const leftAffixWidth = left\n      ? leftLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput(\n      {\n        adornmentConfig,\n        rightAffixWidth,\n        leftAffixWidth,\n      }\n    );\n    const affixTopPosition = {\n      [AdornmentSide.Left]: leftAffixTopPosition,\n      [AdornmentSide.Right]: rightAffixTopPosition,\n    };\n    const onAffixChange = {\n      [AdornmentSide.Left]: onLeftAffixLayoutChange,\n      [AdornmentSide.Right]: onRightAffixLayoutChange,\n    };\n\n    let adornmentProps: TextInputAdornmentProps = {\n      adornmentConfig,\n      forceFocus,\n      topPosition: {\n        [AdornmentType.Icon]: iconTopPosition,\n        [AdornmentType.Affix]: affixTopPosition,\n      },\n      onAffixChange,\n      isTextInputFocused: parentState.focused,\n    };\n    if (adornmentConfig.length) {\n      adornmentProps = {\n        ...adornmentProps,\n        left,\n        right,\n        textStyle: { ...font, fontSize, fontWeight },\n        visible: this.props.parentState.labeled,\n      };\n    }\n\n    return (\n      <View style={viewStyle}>\n        {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n        <View>\n          <Outline\n            theme={theme}\n            hasActiveOutline={hasActiveOutline}\n            activeColor={activeColor}\n            outlineColor={outlineColor}\n            backgroundColor={backgroundColor}\n          />\n          <View\n            style={{\n              paddingTop: LABEL_PADDING_TOP,\n              paddingBottom: 0,\n              minHeight,\n            }}\n          >\n            <InputLabel\n              parentState={parentState}\n              labelProps={labelProps}\n              labelBackground={LabelBackground}\n            />\n            {render?.({\n              ...rest,\n              ref: innerRef,\n              onChangeText,\n              placeholder: label\n                ? parentState.placeholder\n                : this.props.placeholder,\n              placeholderTextColor: placeholderColor,\n              editable: !disabled && editable,\n              selectionColor:\n                typeof selectionColor === 'undefined'\n                  ? activeColor\n                  : selectionColor,\n              onFocus,\n              onBlur,\n              underlineColorAndroid: 'transparent',\n              multiline,\n              style: [\n                styles.input,\n                !multiline || (multiline && height)\n                  ? { height: inputHeight }\n                  : {},\n                paddingOut,\n                {\n                  ...font,\n                  fontSize,\n                  fontWeight,\n                  color: inputTextColor,\n                  textAlignVertical: multiline ? 'top' : 'center',\n                },\n                adornmentStyleAdjustmentForNativeInput,\n              ],\n            } as RenderProps)}\n          </View>\n          <TextInputAdornment {...adornmentProps} />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default TextInputOutlined;\n\ntype OutlineType = {\n  activeColor: string;\n  hasActiveOutline: boolean | undefined;\n  outlineColor: string | undefined;\n  backgroundColor: string | undefined;\n  theme: ReactNativePaper.Theme;\n};\n\nconst Outline = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  backgroundColor,\n}: OutlineType) => (\n  <View\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: theme.roundness,\n        borderWidth: hasActiveOutline ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}