{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import MaterialCommunityIcon from\"../MaterialCommunityIcon\";import TouchableRipple from\"../TouchableRipple\";import{withTheme}from\"../../core/theming\";var ANIMATION_DURATION=100;var CheckboxAndroid=function(_React$Component){_inherits(CheckboxAndroid,_React$Component);var _super=_createSuper(CheckboxAndroid);function CheckboxAndroid(){var _this;_classCallCheck(this,CheckboxAndroid);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"state\",{scaleAnim:new Animated.Value(1)});return _this;}_createClass(CheckboxAndroid,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.status===this.props.status){return;}var checked=this.props.status==='checked';var animation=this.props.theme.animation;Animated.sequence([Animated.timing(this.state.scaleAnim,{toValue:0.85,duration:checked?ANIMATION_DURATION*animation.scale:0,useNativeDriver:false}),Animated.timing(this.state.scaleAnim,{toValue:1,duration:checked?ANIMATION_DURATION*animation.scale:ANIMATION_DURATION*animation.scale*1.75,useNativeDriver:false})]).start();}},{key:\"render\",value:function render(){var _this$props=this.props,status=_this$props.status,disabled=_this$props.disabled,onPress=_this$props.onPress,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,[\"status\",\"disabled\",\"onPress\",\"theme\"]);var checked=status==='checked';var indeterminate=status==='indeterminate';var checkedColor=this.props.color||theme.colors.accent;var uncheckedColor=this.props.uncheckedColor||color(theme.colors.text).alpha(theme.dark?0.7:0.54).rgb().string();var rippleColor,checkboxColor;if(disabled){rippleColor=color(theme.colors.text).alpha(0.16).rgb().string();checkboxColor=theme.colors.disabled;}else{rippleColor=color(checkedColor).fade(0.32).rgb().string();checkboxColor=checked?checkedColor:uncheckedColor;}var borderWidth=this.state.scaleAnim.interpolate({inputRange:[0.8,1],outputRange:[7,0]});var icon=indeterminate?'minus-box':checked?'checkbox-marked':'checkbox-blank-outline';return React.createElement(TouchableRipple,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:onPress,disabled:disabled,accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:{disabled:disabled},accessibilityLiveRegion:\"polite\",style:styles.container}),React.createElement(Animated.View,{style:{transform:[{scale:this.state.scaleAnim}]}},React.createElement(MaterialCommunityIcon,{allowFontScaling:false,name:icon,size:24,color:checkboxColor,direction:\"ltr\"}),React.createElement(View,{style:[StyleSheet.absoluteFill,styles.fillContainer]},React.createElement(Animated.View,{style:[styles.fill,{borderColor:checkboxColor},{borderWidth:borderWidth}]}))));}}]);return CheckboxAndroid;}(React.Component);_defineProperty(CheckboxAndroid,\"displayName\",'Checkbox.Android');var styles=StyleSheet.create({container:{borderRadius:18,width:36,height:36,padding:6},fillContainer:{alignItems:'center',justifyContent:'center'},fill:{height:14,width:14}});export default withTheme(CheckboxAndroid);export{CheckboxAndroid};","map":{"version":3,"sources":["CheckboxAndroid.tsx"],"names":["ANIMATION_DURATION","CheckboxAndroid","React","scaleAnim","Animated","prevProps","checked","animation","toValue","duration","useNativeDriver","theme","status","indeterminate","checkedColor","uncheckedColor","color","rippleColor","checkboxColor","borderWidth","inputRange","outputRange","icon","disabled","styles","container","transform","scale","StyleSheet","borderColor","borderRadius","width","height","padding","fillContainer","alignItems","justifyContent","fill","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype State = {\n  scaleAnim: Animated.Value;\n};\n\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 100;\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for Android.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nclass CheckboxAndroid extends React.Component<Props, State> {\n  static displayName = 'Checkbox.Android';\n\n  state = {\n    scaleAnim: new Animated.Value(1),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.status === this.props.status) {\n      return;\n    }\n\n    const checked = this.props.status === 'checked';\n    const { animation } = this.props.theme;\n\n    Animated.sequence([\n      Animated.timing(this.state.scaleAnim, {\n        toValue: 0.85,\n        duration: checked ? ANIMATION_DURATION * animation.scale : 0,\n        useNativeDriver: false,\n      }),\n      Animated.timing(this.state.scaleAnim, {\n        toValue: 1,\n        duration: checked\n          ? ANIMATION_DURATION * animation.scale\n          : ANIMATION_DURATION * animation.scale * 1.75,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  }\n\n  render() {\n    const { status, disabled, onPress, theme, ...rest } = this.props;\n    const checked = status === 'checked';\n    const indeterminate = status === 'indeterminate';\n    const checkedColor = this.props.color || theme.colors.accent;\n    const uncheckedColor =\n      this.props.uncheckedColor ||\n      color(theme.colors.text)\n        .alpha(theme.dark ? 0.7 : 0.54)\n        .rgb()\n        .string();\n\n    let rippleColor, checkboxColor;\n\n    if (disabled) {\n      rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n      checkboxColor = theme.colors.disabled;\n    } else {\n      rippleColor = color(checkedColor).fade(0.32).rgb().string();\n      checkboxColor = checked ? checkedColor : uncheckedColor;\n    }\n\n    const borderWidth = this.state.scaleAnim.interpolate({\n      inputRange: [0.8, 1],\n      outputRange: [7, 0],\n    });\n\n    const icon = indeterminate\n      ? 'minus-box'\n      : checked\n      ? 'checkbox-marked'\n      : 'checkbox-blank-outline';\n\n    return (\n      <TouchableRipple\n        {...rest}\n        borderless\n        rippleColor={rippleColor}\n        onPress={onPress}\n        disabled={disabled}\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ disabled }}\n        accessibilityLiveRegion=\"polite\"\n        style={styles.container}\n      >\n        <Animated.View style={{ transform: [{ scale: this.state.scaleAnim }] }}>\n          <MaterialCommunityIcon\n            allowFontScaling={false}\n            name={icon}\n            size={24}\n            color={checkboxColor}\n            direction=\"ltr\"\n          />\n          <View style={[StyleSheet.absoluteFill, styles.fillContainer]}>\n            <Animated.View\n              style={[\n                styles.fill,\n                { borderColor: checkboxColor },\n                { borderWidth },\n              ]}\n            />\n          </View>\n        </Animated.View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6,\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fill: {\n    height: 14,\n    width: 14,\n  },\n});\n\nexport default withTheme(CheckboxAndroid);\n\n// @component-docs ignore-next-line\nexport { CheckboxAndroid };\n"]},"metadata":{},"sourceType":"module"}