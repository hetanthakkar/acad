{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import Text from\"../Typography/Text\";import{withTheme}from\"../../core/theming\";var ListSubheader=function(_React$Component){_inherits(ListSubheader,_React$Component);var _super=_createSuper(ListSubheader);function ListSubheader(){_classCallCheck(this,ListSubheader);return _super.apply(this,arguments);}_createClass(ListSubheader,[{key:\"render\",value:function render(){var _this$props=this.props,style=_this$props.style,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,[\"style\",\"theme\"]);var colors=theme.colors,fonts=theme.fonts;var font=fonts.medium;var textColor=color(colors.text).alpha(0.54).rgb().string();return React.createElement(Text,_extends({numberOfLines:1},rest,{style:[styles.container,_objectSpread({color:textColor},font),style]}));}}]);return ListSubheader;}(React.Component);_defineProperty(ListSubheader,\"displayName\",'List.Subheader');var styles=StyleSheet.create({container:{paddingHorizontal:16,paddingVertical:13}});export default withTheme(ListSubheader);","map":{"version":3,"sources":["ListSubheader.tsx"],"names":["ListSubheader","React","theme","fonts","font","textColor","color","colors","styles","container","paddingHorizontal","paddingVertical","withTheme"],"mappings":"i7FAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,iEAEA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,IAAA,0BACA,OAAA,SAAA,0B,GA0BA,CAAA,a,gRAGW,CACP,GAAA,CAAA,WAAA,CAAkC,KAAlC,KAAA,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAAeE,KAAf,CAAA,WAAA,CAAeA,KAAf,CAAA,IAAA,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CADO,GAED,CAAA,MAFC,CAEP,KAFO,CAED,MAFC,CAESC,KAFT,CAEP,KAFO,CAESA,KAFT,CAGP,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAAlB,MAAA,CACA,GAAME,CAAAA,SAAS,CAAGC,KAAK,CAACC,MAAM,CAAZD,IAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAlB,MAAkBA,EAAlB,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACE,aAAa,CAAE,CADjB,CAAA,CAAA,IAAA,CAAA,CAGE,KAAK,CAAE,CAACE,MAAM,CAAP,SAAA,CAAA,aAAA,CAAA,CAAqBF,KAAK,CAAED,SAA5B,CAAA,CAAA,IAAA,CAAA,CAAA,KAAA,CAHT,CAAA,CAAA,CADF,CAOD,C,2BAhByBJ,KAAK,CAAjC,S,kBAAMD,a,eACiB,gB,EAkBvB,GAAMQ,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,iBAAiB,CADR,EAAA,CAETC,eAAe,CAAE,EAFR,CADoB,CAAlB,CAAf,CAOA,cAAeC,CAAAA,SAAS,CAAxB,aAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: StyleProp<TextStyle>;\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => <List.Subheader>My List Title</List.Subheader>;\n *\n * export default MyComponent;\n * ```\n */\nclass ListSubheader extends React.Component<Props> {\n  static displayName = 'List.Subheader';\n\n  render() {\n    const { style, theme, ...rest } = this.props;\n    const { colors, fonts } = theme;\n    const font = fonts.medium;\n    const textColor = color(colors.text).alpha(0.54).rgb().string();\n\n    return (\n      <Text\n        numberOfLines={1}\n        {...rest}\n        style={[styles.container, { color: textColor, ...font }, style]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default withTheme(ListSubheader);\n"]},"metadata":{},"sourceType":"module"}