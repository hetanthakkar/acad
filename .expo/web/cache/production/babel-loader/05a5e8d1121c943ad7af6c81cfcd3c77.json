{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import CheckBox from\"./Checkbox\";import Text from\"../Typography/Text\";import TouchableRipple from\"../TouchableRipple\";import{withTheme}from\"../../core/theming\";var CheckboxItem=function(_React$Component){_inherits(CheckboxItem,_React$Component);var _super=_createSuper(CheckboxItem);function CheckboxItem(){_classCallCheck(this,CheckboxItem);return _super.apply(this,arguments);}_createClass(CheckboxItem,[{key:\"render\",value:function render(){var _this$props=this.props,style=_this$props.style,status=_this$props.status,label=_this$props.label,onPress=_this$props.onPress,labelStyle=_this$props.labelStyle,colors=_this$props.theme.colors,props=_objectWithoutProperties(_this$props,[\"style\",\"status\",\"label\",\"onPress\",\"labelStyle\",\"theme\"]);return React.createElement(TouchableRipple,{onPress:onPress},React.createElement(View,{style:[styles.container,style],pointerEvents:\"none\"},React.createElement(Text,{style:[styles.label,labelStyle,{color:colors.primary}]},label),React.createElement(CheckBox,_extends({status:status},props))));}}]);return CheckboxItem;}(React.Component);_defineProperty(CheckboxItem,\"displayName\",'Checkbox.Item');export default withTheme(CheckboxItem);export{CheckboxItem};var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',paddingVertical:8,paddingHorizontal:16},label:{fontSize:16}});","map":{"version":3,"sources":["CheckboxItem.tsx"],"names":["CheckboxItem","React","theme","colors","onPress","styles","color","primary","status","withTheme","container","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","label","fontSize"],"mappings":"qpEAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,sHAUA,MAAA,CAAA,QAAA,kBACA,MAAA,CAAA,IAAA,0BACA,MAAA,CAAA,eAAA,0BACA,OAAA,SAAA,0B,GA4DA,CAAA,Y,2QAGW,CACP,GAAA,CAAA,WAAA,CAQI,KARJ,KAAA,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAAM,MAAN,CAAA,WAAA,CAAM,MAAN,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAAM,OAAN,CAAA,WAAA,CAAM,OAAN,CAAM,UAAN,CAAA,WAAA,CAAM,UAAN,CAMWG,MANX,CAAA,WAAA,CAMED,KANF,CAMWC,MANX,CAAA,KAAA,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,SAAA,CAAA,YAAA,CAAA,OAAA,CAAA,CAAA,CAUA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,CAAiB,OAAO,CAAEC,OAA1B,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAE,CAACC,MAAM,CAAP,SAAA,CAAb,KAAa,CAAb,CAAwC,aAAa,CAAC,MAAtD,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAE,CAACA,MAAM,CAAP,KAAA,CAAA,UAAA,CAA2B,CAAEC,KAAK,CAAEH,MAAM,CAACI,OAAhB,CAA3B,CAAb,CAAA,CADF,KACE,CADF,CAIE,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAU,MAAM,CAAEC,MAAlB,CAAA,CANN,KAMM,CAAA,CAJF,CADF,CADF,CAUD,C,0BAxBwBP,KAAK,CAAhC,S,kBAAMD,Y,eACiB,e,EA0BvB,cAAeS,CAAAA,SAAS,CAAxB,YAAwB,CAAxB,CAGA,OAAA,YAAA,EAEA,GAAMJ,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BK,SAAS,CAAE,CACTC,aAAa,CADJ,KAAA,CAETC,UAAU,CAFD,QAAA,CAGTC,cAAc,CAHL,eAAA,CAITC,eAAe,CAJN,CAAA,CAKTC,iBAAiB,CAAE,EALV,CADoB,CAQ/BC,KAAK,CAAE,CACLC,QAAQ,CAAE,EADL,CARwB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\n\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport CheckBox from './Checkbox';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple';\nimport { withTheme } from '../../core/theming';\n\ntype Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * Additional styles for container View.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Checkbox.Item label=\"Item\" status=\"checked\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n *```\n */\n\nclass CheckboxItem extends React.Component<Props> {\n  static displayName = 'Checkbox.Item';\n\n  render() {\n    const {\n      style,\n      status,\n      label,\n      onPress,\n      labelStyle,\n      theme: { colors },\n      ...props\n    } = this.props;\n\n    return (\n      <TouchableRipple onPress={onPress}>\n        <View style={[styles.container, style]} pointerEvents=\"none\">\n          <Text style={[styles.label, labelStyle, { color: colors.primary }]}>\n            {label}\n          </Text>\n          <CheckBox status={status} {...props}></CheckBox>\n        </View>\n      </TouchableRipple>\n    );\n  }\n}\n\nexport default withTheme(CheckboxItem);\n\n// @component-docs ignore-next-line\nexport { CheckboxItem };\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  label: {\n    fontSize: 16,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}