{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.DefaultTabBar=undefined;var _jsxFileName='src/basic/Tabs/DefaultTabBar.js';var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);var _createReactClass=require('create-react-class');var _createReactClass2=_interopRequireDefault(_createReactClass);var _lodash=require('lodash');var _lodash2=_interopRequireDefault(_lodash);var _nativeBaseShoutemTheme=require('native-base-shoutem-theme');var _mapPropsToStyleNames=require(\"../../utils/mapPropsToStyleNames\");var _mapPropsToStyleNames2=_interopRequireDefault(_mapPropsToStyleNames);var _platform=require(\"./../../theme/variables/platform\");var _platform2=_interopRequireDefault(_platform);var _TabHeading=require(\"../TabHeading\");var _Text=require(\"../Text\");var _TabContainer=require(\"../TabContainer\");var _utils=require(\"../../utils\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var ReactNative=require(\"react-native-web/dist/index\");var StyleSheet=ReactNative.StyleSheet,View=ReactNative.View,Animated=ReactNative.Animated,Platform=ReactNative.Platform;var Button=require(\"./Button\");var DefaultTabBar=(0,_createReactClass2.default)({displayName:'DefaultTabBar',propTypes:{goToPage:_propTypes2.default.func,activeTab:_propTypes2.default.number,tabs:_propTypes2.default.array,backgroundColor:_propTypes2.default.string,activeTextColor:_propTypes2.default.string,inactiveTextColor:_propTypes2.default.string,disabledTextColor:_propTypes2.default.string,tabStyle:_utils.ViewPropTypes.style,renderTab:_propTypes2.default.func,underlineStyle:_utils.ViewPropTypes.style,tabContainerStyle:_utils.ViewPropTypes.style,accessible:_propTypes2.default.array,accessibilityLabel:_propTypes2.default.array},contextTypes:{theme:_propTypes2.default.object},getDefaultProps:function getDefaultProps(){return{activeTextColor:_platform2.default.topTabBarActiveTextColor,inactiveTextColor:_platform2.default.topTabBarTextColor,disabledTextColor:_platform2.default.tabBarDisabledTextColor,backgroundColor:'transparent',tabFontSize:_platform2.default.tabFontSize};},renderTabOption:function renderTabOption(name,page){},renderTab:function renderTab(name,page,isTabActive,onPressHandler,tabStyle,activeTabStyle,textStyle,activeTextStyle,tabHeaderStyle,tabFontSize,disabled,disabledTextColor,accessible,accessibilityLabel){var headerContent=typeof name!=='string'?name.props.children:undefined;var _props=this.props,activeTextColor=_props.activeTextColor,inactiveTextColor=_props.inactiveTextColor;var fontWeight=isTabActive?'bold':'normal';var isDisabled=disabled!==undefined;var textColor=void 0;if(isDisabled){textColor=disabledTextColor;}else if(isTabActive){textColor=activeTextStyle?activeTextStyle.color:activeTextColor;}else{textColor=textStyle?textStyle.color:inactiveTextColor;}var accessibilityState={disabled:isDisabled?true:false,selected:isTabActive?true:false};if(typeof name==='string'){return _react2.default.createElement(Button,{style:{flex:1},disabled:isDisabled,key:name,accessible:accessible,accessibilityRole:'tab',accessibilityLabel:accessibilityLabel,accessibilityState:accessibilityState,onPress:function onPress(){return onPressHandler(page);},__source:{fileName:_jsxFileName,lineNumber:84}},_react2.default.createElement(_TabHeading.TabHeading,{style:isTabActive?activeTabStyle:tabStyle,active:isTabActive,__source:{fileName:_jsxFileName,lineNumber:94}},_react2.default.createElement(_Text.Text,{style:[{fontSize:tabFontSize},isTabActive?activeTextStyle:textStyle,{color:textColor}],__source:{fileName:_jsxFileName,lineNumber:98}},name)));}return _react2.default.createElement(Button,{style:{flex:1},disabled:isDisabled,key:_lodash2.default.random(1.2,5.2),accessible:accessible,accessibilityRole:'tab',accessibilityLabel:accessibilityLabel,accessibilityState:accessibilityState,onPress:function onPress(){return onPressHandler(page);},__source:{fileName:_jsxFileName,lineNumber:112}},_react2.default.createElement(_TabHeading.TabHeading,{style:tabHeaderStyle,active:isTabActive,__source:{fileName:_jsxFileName,lineNumber:122}},headerContent));},render:function render(){var _this=this;var variables=this.context.theme?this.context.theme['@@shoutem.theme/themeStyle'].variables:_platform2.default;var platformStyle=variables.platformStyle;var containerWidth=this.props.containerWidth;var numberOfTabs=this.props.tabs.length;var tabUnderlineStyle={position:'absolute',width:containerWidth/numberOfTabs,height:4,backgroundColor:variables.topTabBarActiveBorderColor,bottom:0};var left=this.props.scrollValue.interpolate({inputRange:[0,1],outputRange:[0,containerWidth/numberOfTabs]});return _react2.default.createElement(_TabContainer.TabContainer,{style:[{backgroundColor:variables.tabDefaultBg},this.props.tabContainerStyle?this.props.tabContainerStyle:{}],__source:{fileName:_jsxFileName,lineNumber:149}},this.props.tabs.map(function(name,page){var isTabActive=_this.props.activeTab===page;var renderTab=_this.props.renderTab||_this.renderTab;return renderTab(name,page,isTabActive,_this.props.goToPage,_this.props.tabStyle[page],_this.props.activeTabStyle[page],_this.props.textStyle[page],_this.props.activeTextStyle[page],_this.props.tabHeaderStyle[page],variables.tabFontSize,_this.props.disabled[page],_this.props.disabledTextColor,_this.props.accessible[page],_this.props.accessibilityLabel[page]);}),_react2.default.createElement(Animated.View,{style:[tabUnderlineStyle,{left:left},this.props.underlineStyle],__source:{fileName:_jsxFileName,lineNumber:175}}));}});var StyledTab=(0,_nativeBaseShoutemTheme.connectStyle)('NativeBase.DefaultTabBar',{},_mapPropsToStyleNames2.default)(DefaultTabBar);exports.DefaultTabBar=StyledTab;","map":{"version":3,"sources":["../../../../src/basic/Tabs/DefaultTabBar.js"],"names":["StyleSheet","View","Animated","Platform","ReactNative","Button","require","DefaultTabBar","propTypes","goToPage","PropTypes","activeTab","tabs","backgroundColor","activeTextColor","inactiveTextColor","disabledTextColor","tabStyle","ViewPropTypes","renderTab","underlineStyle","tabContainerStyle","accessible","accessibilityLabel","contextTypes","theme","getDefaultProps","variable","tabFontSize","renderTabOption","headerContent","name","fontWeight","isTabActive","isDisabled","disabled","textColor","activeTextStyle","textStyle","accessibilityState","selected","flex","onPressHandler","fontSize","color","_","render","variables","platformStyle","containerWidth","numberOfTabs","tabUnderlineStyle","position","width","height","bottom","left","inputRange","outputRange","StyledTab","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport _ from 'lodash';\nimport { connectStyle, StyleProvider } from 'native-base-shoutem-theme';\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\nimport variable from './../../theme/variables/platform';\nimport { TabHeading } from '../TabHeading';\nimport { Text } from '../Text';\nimport { TabContainer } from '../TabContainer';\nimport { ViewPropTypes } from '../../utils';\nconst ReactNative = require('react-native');\n\nconst { StyleSheet, View, Animated, Platform } = ReactNative;\nconst Button = require('./Button');\n\nconst DefaultTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    disabledTextColor: PropTypes.string,\n    tabStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    tabContainerStyle: ViewPropTypes.style,\n    accessible: PropTypes.array,\n    accessibilityLabel: PropTypes.array\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      activeTextColor: variable.topTabBarActiveTextColor,\n      inactiveTextColor: variable.topTabBarTextColor,\n      disabledTextColor: variable.tabBarDisabledTextColor,\n      backgroundColor: 'transparent',\n      tabFontSize: variable.tabFontSize\n    };\n  },\n\n  renderTabOption(name, page) {},\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle,\n    tabFontSize,\n    disabled,\n    disabledTextColor,\n    accessible,\n    accessibilityLabel\n  ) {\n    const headerContent =\n      typeof name !== 'string' ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n    const isDisabled = disabled !== undefined;\n    let textColor;\n    if (isDisabled) {\n      textColor = disabledTextColor;\n    } else if (isTabActive) {\n      textColor = activeTextStyle ? activeTextStyle.color : activeTextColor; // activeTextColor: default color for active Tab\n    } else {\n      textColor = textStyle ? textStyle.color : inactiveTextColor; // inactiveTextColor: default color for inactive Tab\n    }\n    const accessibilityState = {\n      disabled: isDisabled ? true : false,\n      selected: isTabActive ? true : false,\n    };\n    if (typeof name === 'string') {\n      return (\n        <Button\n          style={{ flex: 1 }}\n          disabled={isDisabled}\n          key={name}\n          accessible={accessible}\n          accessibilityRole='tab'\n          accessibilityLabel={accessibilityLabel}\n          accessibilityState={accessibilityState}\n          onPress={() => onPressHandler(page)}\n        >\n          <TabHeading\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text\n              style={[\n                { fontSize: tabFontSize },\n                isTabActive ? activeTextStyle : textStyle,\n                { color: textColor }\n              ]}\n            >\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    }\n    return (\n      <Button\n        style={{ flex: 1 }}\n        disabled={isDisabled}\n        key={_.random(1.2, 5.2)}\n        accessible={accessible}\n        accessibilityRole='tab'\n        accessibilityLabel={accessibilityLabel}\n        accessibilityState={accessibilityState}\n        onPress={() => onPressHandler(page)}\n      >\n        <TabHeading style={tabHeaderStyle} active={isTabActive}>\n          {headerContent}\n        </TabHeading>\n      </Button>\n    );\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const containerWidth = this.props.containerWidth;\n    const numberOfTabs = this.props.tabs.length;\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      width: containerWidth / numberOfTabs,\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const left = this.props.scrollValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, containerWidth / numberOfTabs]\n    });\n    return (\n      <TabContainer\n        style={[\n          { backgroundColor: variables.tabDefaultBg },\n          this.props.tabContainerStyle ? this.props.tabContainerStyle : {}\n        ]}\n      >\n        {this.props.tabs.map((name, page) => {\n          const isTabActive = this.props.activeTab === page;\n          const renderTab = this.props.renderTab || this.renderTab;\n          return renderTab(\n            name,\n            page,\n            isTabActive,\n            this.props.goToPage,\n            this.props.tabStyle[page],\n            this.props.activeTabStyle[page],\n            this.props.textStyle[page],\n            this.props.activeTextStyle[page],\n            this.props.tabHeaderStyle[page],\n            variables.tabFontSize,\n            this.props.disabled[page],\n            this.props.disabledTextColor,\n            this.props.accessible[page],\n            this.props.accessibilityLabel[page]\n          );\n        })}\n        <Animated.View\n          style={[tabUnderlineStyle, { left }, this.props.underlineStyle]}\n        />\n      </TabContainer>\n    );\n  }\n});\n\n// module.exports = DefaultTabBar;\nconst StyledTab = connectStyle(\n  'NativeBase.DefaultTabBar',\n  {},\n  mapPropsToStyleNames\n)(DefaultTabBar);\nexport { StyledTab as DefaultTabBar };\n"]},"metadata":{},"sourceType":"script"}