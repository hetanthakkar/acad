{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import Image from\"react-native-web/dist/exports/Image\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import{Consumer as SettingsConsumer}from\"../core/settings\";import{accessibilityProps}from\"./MaterialCommunityIcon\";import{withTheme}from\"../core/theming\";var isImageSource=function isImageSource(source){return typeof source==='object'&&source!==null&&Object.prototype.hasOwnProperty.call(source,'uri')&&typeof source.uri==='string'||typeof source==='number'||Platform.OS==='web'&&typeof source==='string'&&(source.startsWith('data:image')||/\\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source));};var getIconId=function getIconId(source){if(typeof source==='object'&&source!==null&&Object.prototype.hasOwnProperty.call(source,'uri')&&typeof source.uri==='string'){return source.uri;}return source;};export var isValidIcon=function isValidIcon(source){return typeof source==='string'||typeof source==='function'||isImageSource(source);};export var isEqualIcon=function isEqualIcon(a,b){return a===b||getIconId(a)===getIconId(b);};var Icon=function Icon(_ref){var source=_ref.source,color=_ref.color,size=_ref.size,theme=_ref.theme,rest=_objectWithoutProperties(_ref,[\"source\",\"color\",\"size\",\"theme\"]);var direction=typeof source==='object'&&source.direction&&source.source?source.direction==='auto'?I18nManager.isRTL?'rtl':'ltr':source.direction:null;var s=typeof source==='object'&&source.direction&&source.source?source.source:source;var iconColor=color||theme.colors.text;if(isImageSource(s)){return React.createElement(Image,_extends({},rest,{source:s,style:[{transform:[{scaleX:direction==='rtl'?-1:1}]},{width:size,height:size,tintColor:color,resizeMode:'contain'}]},accessibilityProps));}else if(typeof s==='string'){return React.createElement(SettingsConsumer,null,function(_ref2){var icon=_ref2.icon;return icon({name:s,color:iconColor,size:size,direction:direction});});}else if(typeof s==='function'){return s({color:iconColor,size:size,direction:direction});}return null;};export default withTheme(Icon);","map":{"version":3,"sources":["Icon.tsx"],"names":["Consumer","isImageSource","source","Object","Platform","getIconId","isValidIcon","isEqualIcon","a","Icon","theme","rest","direction","I18nManager","s","iconColor","color","transform","scaleX","width","height","tintColor","resizeMode","icon","name","size","withTheme"],"mappings":"+9BAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,uLAOA,OAASA,QAAQ,GAAjB,CAAA,gBAAA,wBACA,OAAA,kBAAA,+BACA,OAAA,SAAA,uBAuBA,GAAMC,CAAAA,aAAa,CAAIC,QAAjBD,CAAAA,aAAiBC,CAAAA,MAAD,QAEnB,OAAA,CAAA,MAAA,GAAA,QAAA,EACCA,MAAM,GADP,IAAA,EAECC,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAFD,KAECA,CAFD,EAGC,MAAOD,CAAAA,MAAM,CAAb,GAAA,GAHF,QAAC,EAKD,MAAA,CAAA,MAAA,GALA,QAAC,EAOAE,QAAQ,CAARA,EAAAA,GAAAA,KAAAA,EACC,MAAA,CAAA,MAAA,GADDA,QAAAA,GAEEF,MAAM,CAANA,UAAAA,CAAAA,YAAAA,GACC,gCAAA,IAAA,CAZN,MAYM,CAHHE,CATmB,EAAtB,CAcA,GAAMC,CAAAA,SAAS,CAAIH,QAAbG,CAAAA,SAAaH,CAAAA,MAAD,CAAiB,CACjC,GACE,MAAA,CAAA,MAAA,GAAA,QAAA,EACAA,MAAM,GADN,IAAA,EAEAC,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,MAAAA,CAFA,KAEAA,CAFA,EAGA,MAAOD,CAAAA,MAAM,CAAb,GAAA,GAJF,QAAA,CAKE,CACA,MAAOA,CAAAA,MAAM,CAAb,GAAA,CACD,CAED,MAAA,CAAA,MAAA,CAVF,CAAA,CAaA,MAAO,IAAMI,CAAAA,WAAW,CAAIJ,QAAfI,CAAAA,WAAeJ,CAAAA,MAAD,QACzB,OAAA,CAAA,MAAA,GAAA,QAAA,EACA,MAAA,CAAA,MAAA,GADA,UAAA,EAEAD,aAAa,CAHR,MAGQ,CAHY,EAApB,CAKP,MAAO,IAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAA,CAAA,CAAA,CAAA,QACzBC,CAAAA,CAAC,GAADA,CAAAA,EAAWH,SAAS,CAATA,CAAS,CAATA,GAAiBA,SAAS,CADhC,CACgC,CADZ,EAApB,CAGP,GAAMI,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAAA,IAAA,CAAoD,IAAnD,CAAA,MAAmD,CAAA,IAAA,CAAnD,MAAmD,CAAnD,KAAmD,CAAA,IAAA,CAAnD,KAAmD,CAAnD,IAAmD,CAAA,IAAA,CAAnD,IAAmD,CAA5BC,KAA4B,CAAA,IAAA,CAA5BA,KAA4B,CAAlBC,IAAkB,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA,CAC/D,GAAMC,CAAAA,SAAS,CAEb,MAAA,CAAA,MAAA,GAAA,QAAA,EAA8BV,MAAM,CAApC,SAAA,EAAkDA,MAAM,CAAxD,MAAA,CACIA,MAAM,CAANA,SAAAA,GAAAA,MAAAA,CACEW,WAAW,CAAXA,KAAAA,CAAAA,KAAAA,CADFX,KAAAA,CAIEA,MAAM,CALZ,SAAA,CAFF,IAAA,CASA,GAAMY,CAAAA,CAAC,CAEL,MAAA,CAAA,MAAA,GAAA,QAAA,EAA8BZ,MAAM,CAApC,SAAA,EAAkDA,MAAM,CAAxD,MAAA,CACIA,MAAM,CADV,MAAA,CAFF,MAAA,CAKA,GAAMa,CAAAA,SAAS,CAAGC,KAAK,EAAIN,KAAK,CAALA,MAAAA,CAA3B,IAAA,CAEA,GAAIT,aAAa,CAAjB,CAAiB,CAAjB,CAAsB,CACpB,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,MAAM,CAFR,CAAA,CAGE,KAAK,CAAE,CACL,CACEgB,SAAS,CAAE,CAAC,CAAEC,MAAM,CAAEN,SAAS,GAATA,KAAAA,CAAsB,CAAtBA,CAAAA,CAA2B,CAArC,CAAD,CADb,CADK,CAKL,CACEO,KAAK,CADP,IAAA,CAEEC,MAAM,CAFR,IAAA,CAGEC,SAAS,CAHX,KAAA,CAIEC,UAAU,CAAE,SAJd,CALK,CAHT,CAAA,CADF,kBACE,CAAA,CADF,CADF,CAAA,IAoBO,IAAI,MAAA,CAAA,CAAA,GAAJ,QAAA,CAA2B,CAChC,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,IAAA,CACG,eAAc,IAAXC,CAAAA,IAAW,OAAXA,IAAW,CACb,MAAOA,CAAAA,IAAI,CAAC,CACVC,IAAI,CADM,CAAA,CAEVR,KAAK,CAFK,SAAA,CAGVS,IAHU,CAGVA,IAHU,CAIVb,SAAAA,CAAAA,SAJU,CAAD,CAAX,CAHN,CACE,CADF,CADK,CAAA,IAaA,IAAI,MAAA,CAAA,CAAA,GAAJ,UAAA,CAA6B,CAClC,MAAOE,CAAAA,CAAC,CAAC,CAAEE,KAAK,CAAP,SAAA,CAAoBS,IAApB,CAAoBA,IAApB,CAA0Bb,SAAAA,CAAAA,SAA1B,CAAD,CAAR,CACD,CAED,MAAA,KAAA,CAtDF,CAAA,CAyDA,cAAec,CAAAA,SAAS,CAAxB,IAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  I18nManager,\n  Platform,\n  ImageSourcePropType,\n} from 'react-native';\nimport { Consumer as SettingsConsumer } from '../core/settings';\nimport { accessibilityProps } from './MaterialCommunityIcon';\nimport { withTheme } from '../core/theming';\n\ntype IconSourceBase = string | ImageSourcePropType;\n\nexport type IconSource =\n  | IconSourceBase\n  | Readonly<{ source: IconSourceBase; direction: 'rtl' | 'ltr' | 'auto' }>\n  | ((props: IconProps & { color: string }) => React.ReactNode);\n\ntype IconProps = {\n  size: number;\n  allowFontScaling?: boolean;\n};\n\ntype Props = IconProps & {\n  color?: string;\n  source: any;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst isImageSource = (source: any) =>\n  // source is an object with uri\n  (typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string') ||\n  // source is a module, e.g. - require('image')\n  typeof source === 'number' ||\n  // image url on web\n  (Platform.OS === 'web' &&\n    typeof source === 'string' &&\n    (source.startsWith('data:image') ||\n      /\\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source)));\n\nconst getIconId = (source: any) => {\n  if (\n    typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string'\n  ) {\n    return source.uri;\n  }\n\n  return source;\n};\n\nexport const isValidIcon = (source: any) =>\n  typeof source === 'string' ||\n  typeof source === 'function' ||\n  isImageSource(source);\n\nexport const isEqualIcon = (a: any, b: any) =>\n  a === b || getIconId(a) === getIconId(b);\n\nconst Icon = ({ source, color, size, theme, ...rest }: Props) => {\n  const direction =\n    // @ts-ignore\n    typeof source === 'object' && source.direction && source.source\n      ? source.direction === 'auto'\n        ? I18nManager.isRTL\n          ? 'rtl'\n          : 'ltr'\n        : source.direction\n      : null;\n  const s =\n    // @ts-ignore\n    typeof source === 'object' && source.direction && source.source\n      ? source.source\n      : source;\n  const iconColor = color || theme.colors.text;\n\n  if (isImageSource(s)) {\n    return (\n      <Image\n        {...rest}\n        source={s}\n        style={[\n          {\n            transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n          },\n          // eslint-disable-next-line react-native/no-inline-styles\n          {\n            width: size,\n            height: size,\n            tintColor: color,\n            resizeMode: 'contain',\n          },\n        ]}\n        {...accessibilityProps}\n      />\n    );\n  } else if (typeof s === 'string') {\n    return (\n      <SettingsConsumer>\n        {({ icon }) => {\n          return icon({\n            name: s,\n            color: iconColor,\n            size,\n            direction,\n          });\n        }}\n      </SettingsConsumer>\n    );\n  } else if (typeof s === 'function') {\n    return s({ color: iconColor, size, direction });\n  }\n\n  return null;\n};\n\nexport default withTheme(Icon);\n"]},"metadata":{},"sourceType":"module"}