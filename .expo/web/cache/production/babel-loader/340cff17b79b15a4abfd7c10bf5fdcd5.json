{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component,Children,cloneElement}from'react';import PropTypes from'prop-types';import Animated from\"react-native-web/dist/exports/Animated\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import View from\"react-native-web/dist/exports/View\";import LightboxOverlay from\"./LightboxOverlay\";var Lightbox=function(_Component){_inherits(Lightbox,_Component);var _super=_createSuper(Lightbox);function Lightbox(){var _this;_classCallCheck(this,Lightbox);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isOpen:false,origin:{x:0,y:0,width:0,height:0},layoutOpacity:new Animated.Value(1)};_this.getContent=function(){if(_this.props.renderContent){return _this.props.renderContent();}else if(_this.props.activeProps){return cloneElement(Children.only(_this.props.children),_this.props.activeProps);}return _this.props.children;};_this.getOverlayProps=function(){return{isOpen:_this.state.isOpen,origin:_this.state.origin,renderHeader:_this.props.renderHeader,swipeToDismiss:_this.props.swipeToDismiss,springConfig:_this.props.springConfig,backgroundColor:_this.props.backgroundColor,children:_this.getContent(),didOpen:_this.props.didOpen,willClose:_this.props.willClose,onClose:_this.onClose};};_this.open=function(){_this._root.measure(function(ox,oy,width,height,px,py){_this.props.onOpen();_this.setState({isOpen:_this.props.navigator?true:false,isAnimating:true,origin:{width:width,height:height,x:px,y:py}},function(){_this.props.didOpen();if(_this.props.navigator){var route={component:LightboxOverlay,passProps:_this.getOverlayProps()};var routes=_this.props.navigator.getCurrentRoutes();routes.push(route);_this.props.navigator.immediatelyResetRouteStack(routes);}else{_this.setState({isOpen:true});}setTimeout(function(){_this._root&&_this.state.layoutOpacity.setValue(0);});});});};_this.close=function(){throw new Error('Lightbox.close method is deprecated. Use renderHeader(close) prop instead.');};_this.onClose=function(){_this.state.layoutOpacity.setValue(1);_this.setState({isOpen:false},_this.props.onClose);if(_this.props.navigator){var routes=_this.props.navigator.getCurrentRoutes();routes.pop();_this.props.navigator.immediatelyResetRouteStack(routes);}};return _this;}_createClass(Lightbox,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(View,{ref:function ref(component){return _this2._root=component;},style:this.props.style,onLayout:function onLayout(){}},React.createElement(Animated.View,{style:{opacity:this.state.layoutOpacity}},React.createElement(TouchableHighlight,{underlayColor:this.props.underlayColor,onPress:this.open,onLongPress:this.props.onLongPress},this.props.children)),this.props.navigator?false:React.createElement(LightboxOverlay,this.getOverlayProps()));}}]);return Lightbox;}(Component);Lightbox.propTypes={activeProps:PropTypes.object,renderHeader:PropTypes.func,renderContent:PropTypes.func,underlayColor:PropTypes.string,backgroundColor:PropTypes.string,didOpen:PropTypes.func,onOpen:PropTypes.func,willClose:PropTypes.func,onClose:PropTypes.func,springConfig:PropTypes.shape({tension:PropTypes.number,friction:PropTypes.number}),swipeToDismiss:PropTypes.bool};Lightbox.defaultProps={swipeToDismiss:true,onOpen:function onOpen(){},didOpen:function didOpen(){},willClose:function willClose(){},onClose:function onClose(){},onLongPress:function onLongPress(){}};export{Lightbox as default};","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/node_modules/react-native-lightbox/Lightbox.js"],"names":["React","Component","Children","cloneElement","PropTypes","LightboxOverlay","Lightbox","state","isOpen","origin","x","y","width","height","layoutOpacity","Animated","Value","getContent","props","renderContent","activeProps","only","children","getOverlayProps","renderHeader","swipeToDismiss","springConfig","backgroundColor","didOpen","willClose","onClose","open","_root","measure","ox","oy","px","py","onOpen","setState","navigator","isAnimating","route","component","passProps","routes","getCurrentRoutes","push","immediatelyResetRouteStack","setTimeout","setValue","close","Error","pop","style","opacity","underlayColor","onLongPress","propTypes","object","func","string","shape","tension","number","friction","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component,  Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, TouchableHighlight, View } from 'react-native';\n\nimport LightboxOverlay from './LightboxOverlay';\n\nexport default class Lightbox extends Component {\n  static propTypes = {\n    activeProps:     PropTypes.object,\n    renderHeader:    PropTypes.func,\n    renderContent:   PropTypes.func,\n    underlayColor:   PropTypes.string,\n    backgroundColor: PropTypes.string,\n    didOpen:         PropTypes.func,\n    onOpen:          PropTypes.func,\n    willClose:       PropTypes.func,\n    onClose:         PropTypes.func,\n    springConfig:    PropTypes.shape({\n      tension:       PropTypes.number,\n      friction:      PropTypes.number,\n    }),\n    swipeToDismiss:  PropTypes.bool,\n  };\n\n  static defaultProps = {\n    swipeToDismiss: true,\n    onOpen: () => {},\n    didOpen: () => {},\n    willClose: () => {},\n    onClose: () => {},\n    onLongPress: () => {},\n  };\n\n  state = {\n    isOpen: false,\n    origin: {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n    },\n    layoutOpacity: new Animated.Value(1),\n  };\n\n  getContent = () => {\n    if(this.props.renderContent) {\n      return this.props.renderContent();\n    } else if(this.props.activeProps) {\n      return cloneElement(\n        Children.only(this.props.children),\n        this.props.activeProps\n      );\n    }\n    return this.props.children;\n  }\n\n  getOverlayProps = () => ({\n    isOpen: this.state.isOpen,\n    origin: this.state.origin,\n    renderHeader: this.props.renderHeader,\n    swipeToDismiss: this.props.swipeToDismiss,\n    springConfig: this.props.springConfig,\n    backgroundColor: this.props.backgroundColor,\n    children: this.getContent(),\n    didOpen: this.props.didOpen,\n    willClose: this.props.willClose,\n    onClose: this.onClose,\n  })\n\n  open = () => {\n    this._root.measure((ox, oy, width, height, px, py) => {\n      this.props.onOpen();\n\n      this.setState({\n        isOpen: (this.props.navigator ? true : false),\n        isAnimating: true,\n        origin: {\n          width,\n          height,\n          x: px,\n          y: py,\n        },\n      }, () => {\n        this.props.didOpen();\n        if(this.props.navigator) {\n          const route = {\n            component: LightboxOverlay,\n            passProps: this.getOverlayProps(),\n          };\n          const routes = this.props.navigator.getCurrentRoutes();\n          routes.push(route);\n          this.props.navigator.immediatelyResetRouteStack(routes);\n        } else {\n          this.setState({\n            isOpen: true,\n          });\n        }\n        setTimeout(() => {\n          this._root && this.state.layoutOpacity.setValue(0);\n        });\n      });\n    });\n  }\n\n  close = () => {\n    throw new Error('Lightbox.close method is deprecated. Use renderHeader(close) prop instead.')\n  }\n\n  onClose = () => {\n    this.state.layoutOpacity.setValue(1);\n    this.setState({\n      isOpen: false,\n    }, this.props.onClose);\n    if(this.props.navigator) {\n      const routes = this.props.navigator.getCurrentRoutes();\n      routes.pop();\n      this.props.navigator.immediatelyResetRouteStack(routes);\n    }\n  }\n\n  render() {\n    // measure will not return anything useful if we dont attach a onLayout handler on android\n    return (\n      <View\n        ref={component => this._root = component}\n        style={this.props.style}\n        onLayout={() => {}}\n      >\n        <Animated.View style={{opacity: this.state.layoutOpacity}}>\n          <TouchableHighlight\n            underlayColor={this.props.underlayColor}\n            onPress={this.open}\n            onLongPress={this.props.onLongPress}\n          >\n            {this.props.children}\n          </TouchableHighlight>\n        </Animated.View>\n        {this.props.navigator ? false : <LightboxOverlay {...this.getOverlayProps()} />}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}