{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import color from'color';import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import TouchableRipple from\"../TouchableRipple\";import MaterialCommunityIcon from\"../MaterialCommunityIcon\";import Text from\"../Typography/Text\";import{withTheme}from\"../../core/theming\";import{ListAccordionGroupContext}from\"./ListAccordionGroup\";var ListAccordion=function(_React$Component){_inherits(ListAccordion,_React$Component);var _super=_createSuper(ListAccordion);function ListAccordion(){var _this;_classCallCheck(this,ListAccordion);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"state\",{expanded:_this.props.expanded||false});_defineProperty(_assertThisInitialized(_this),\"handlePress\",function(){_this.props.onPress&&_this.props.onPress();if(_this.props.expanded===undefined){_this.setState(function(state){return{expanded:!state.expanded};});}});return _this;}_createClass(ListAccordion,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,left=_this$props.left,title=_this$props.title,description=_this$props.description,children=_this$props.children,theme=_this$props.theme,titleStyle=_this$props.titleStyle,descriptionStyle=_this$props.descriptionStyle,titleNumberOfLines=_this$props.titleNumberOfLines,descriptionNumberOfLines=_this$props.descriptionNumberOfLines,style=_this$props.style,id=_this$props.id,testID=_this$props.testID;var titleColor=color(theme.colors.text).alpha(0.87).rgb().string();var descriptionColor=color(theme.colors.text).alpha(0.54).rgb().string();var expandedInternal=this.props.expanded!==undefined?this.props.expanded:this.state.expanded;return React.createElement(ListAccordionGroupContext.Consumer,null,function(groupContext){if(groupContext!==null&&!id){throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');}var expanded=groupContext?groupContext.expandedId===id:expandedInternal;var handlePress=groupContext&&id!==undefined?function(){return groupContext.onAccordionPress(id);}:_this2.handlePress;return React.createElement(View,null,React.createElement(TouchableRipple,{style:[styles.container,style],onPress:handlePress,accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\",testID:testID},React.createElement(View,{style:styles.row,pointerEvents:\"none\"},left?left({color:expanded?theme.colors.primary:descriptionColor}):null,React.createElement(View,{style:[styles.item,styles.content]},React.createElement(Text,{numberOfLines:titleNumberOfLines,style:[styles.title,{color:expanded?theme.colors.primary:titleColor},titleStyle]},title),description&&React.createElement(Text,{numberOfLines:descriptionNumberOfLines,style:[styles.description,{color:descriptionColor},descriptionStyle]},description)),React.createElement(View,{style:[styles.item,description?styles.multiline:undefined]},React.createElement(MaterialCommunityIcon,{name:expanded?'chevron-up':'chevron-down',color:titleColor,size:24,direction:I18nManager.isRTL?'rtl':'ltr'})))),expanded?React.Children.map(children,function(child){if(left&&React.isValidElement(child)&&!child.props.left&&!child.props.right){return React.cloneElement(child,{style:[styles.child,child.props.style]});}return child;}):null);});}}]);return ListAccordion;}(React.Component);_defineProperty(ListAccordion,\"displayName\",'List.Accordion');_defineProperty(ListAccordion,\"defaultProps\",{titleNumberOfLines:1,descriptionNumberOfLines:2});var styles=StyleSheet.create({container:{padding:8},row:{flexDirection:'row',alignItems:'center'},multiline:{height:40,alignItems:'center',justifyContent:'center'},title:{fontSize:16},description:{fontSize:14},item:{margin:8},child:{paddingLeft:64},content:{flex:1,justifyContent:'center'}});export default withTheme(ListAccordion);","map":{"version":3,"sources":["ListAccordion.tsx"],"names":["ListAccordion","React","titleNumberOfLines","descriptionNumberOfLines","expanded","state","testID","titleColor","color","theme","descriptionColor","expandedInternal","groupContext","handlePress","id","styles","left","description","I18nManager","child","style","container","padding","row","flexDirection","alignItems","multiline","height","justifyContent","title","fontSize","item","margin","paddingLeft","content","flex","withTheme"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n  I18nManager,\n} from 'react-native';\nimport TouchableRipple from '../TouchableRipple';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\nimport {\n  ListAccordionGroupContext,\n  ListAccordionGroupContextType,\n} from './ListAccordionGroup';\n\ntype Props = {\n  /**\n   * Title text for the list accordion.\n   */\n  title: React.ReactNode;\n  /**\n   * Description text for the list accordion.\n   */\n  description?: React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { color: string }) => React.ReactNode;\n  /**\n   * Whether the accordion is expanded\n   * If this prop is provided, the accordion will behave as a \"controlled component\".\n   * You'll need to update this prop when you want to toggle the component or on `onPress`.\n   */\n  expanded?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Content of the section.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Style that is passed to the wrapping TouchableRipple element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Id is used for distinguishing specific accordion when using List.AccordionGroup. Property is required when using List.AccordionGroup and has no impact on behavior when using standalone List.Accordion.\n   */\n  id?: string | number;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\ntype State = {\n  expanded: boolean;\n};\n\n/**\n * A component used to display an expandable list item.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-accordion-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [expanded, setExpanded] = React.useState(true);\n *\n *   const handlePress = () => setExpanded(!expanded);\n *\n *   return (\n *     <List.Section title=\"Accordions\">\n *       <List.Accordion\n *         title=\"Uncontrolled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *\n *       <List.Accordion\n *         title=\"Controlled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}\n *         expanded={expanded}\n *         onPress={handlePress}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *     </List.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass ListAccordion extends React.Component<Props, State> {\n  static displayName = 'List.Accordion';\n\n  static defaultProps: Partial<Props> = {\n    titleNumberOfLines: 1,\n    descriptionNumberOfLines: 2,\n  };\n\n  state = {\n    expanded: this.props.expanded || false,\n  };\n\n  private handlePress = () => {\n    this.props.onPress && this.props.onPress();\n\n    if (this.props.expanded === undefined) {\n      // Only update state of the `expanded` prop was not passed\n      // If it was passed, the component will act as a controlled component\n      this.setState((state) => ({\n        expanded: !state.expanded,\n      }));\n    }\n  };\n\n  render() {\n    const {\n      left,\n      title,\n      description,\n      children,\n      theme,\n      titleStyle,\n      descriptionStyle,\n      titleNumberOfLines,\n      descriptionNumberOfLines,\n      style,\n      id,\n      testID,\n    } = this.props;\n    const titleColor = color(theme.colors.text).alpha(0.87).rgb().string();\n    const descriptionColor = color(theme.colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n\n    const expandedInternal =\n      this.props.expanded !== undefined\n        ? this.props.expanded\n        : this.state.expanded;\n\n    return (\n      <ListAccordionGroupContext.Consumer>\n        {(groupContext: ListAccordionGroupContextType) => {\n          if (groupContext !== null && !id) {\n            throw new Error(\n              'List.Accordion is used inside a List.AccordionGroup without specifying an id prop.'\n            );\n          }\n          const expanded = groupContext\n            ? groupContext.expandedId === id\n            : expandedInternal;\n          const handlePress =\n            groupContext && id !== undefined\n              ? () => groupContext.onAccordionPress(id)\n              : this.handlePress;\n          return (\n            <View>\n              <TouchableRipple\n                style={[styles.container, style]}\n                onPress={handlePress}\n                accessibilityTraits=\"button\"\n                accessibilityComponentType=\"button\"\n                accessibilityRole=\"button\"\n                testID={testID}\n              >\n                <View style={styles.row} pointerEvents=\"none\">\n                  {left\n                    ? left({\n                        color: expanded\n                          ? theme.colors.primary\n                          : descriptionColor,\n                      })\n                    : null}\n                  <View style={[styles.item, styles.content]}>\n                    <Text\n                      numberOfLines={titleNumberOfLines}\n                      style={[\n                        styles.title,\n                        {\n                          color: expanded ? theme.colors.primary : titleColor,\n                        },\n                        titleStyle,\n                      ]}\n                    >\n                      {title}\n                    </Text>\n                    {description && (\n                      <Text\n                        numberOfLines={descriptionNumberOfLines}\n                        style={[\n                          styles.description,\n                          {\n                            color: descriptionColor,\n                          },\n                          descriptionStyle,\n                        ]}\n                      >\n                        {description}\n                      </Text>\n                    )}\n                  </View>\n                  <View\n                    style={[\n                      styles.item,\n                      description ? styles.multiline : undefined,\n                    ]}\n                  >\n                    <MaterialCommunityIcon\n                      name={expanded ? 'chevron-up' : 'chevron-down'}\n                      color={titleColor}\n                      size={24}\n                      direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n                    />\n                  </View>\n                </View>\n              </TouchableRipple>\n              {expanded\n                ? React.Children.map(children, (child) => {\n                    if (\n                      left &&\n                      React.isValidElement(child) &&\n                      !child.props.left &&\n                      !child.props.right\n                    ) {\n                      return React.cloneElement(child, {\n                        style: [styles.child, child.props.style],\n                      });\n                    }\n\n                    return child;\n                  })\n                : null}\n            </View>\n          );\n        }}\n      </ListAccordionGroupContext.Consumer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  item: {\n    margin: 8,\n  },\n  child: {\n    paddingLeft: 64,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(ListAccordion);\n"]},"metadata":{},"sourceType":"module"}