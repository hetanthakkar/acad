{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import PropTypes from'prop-types';import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import Color from\"./Color\";import{StylePropType}from\"./utils\";var Actions=function(_React$Component){_inherits(Actions,_React$Component);var _super=_createSuper(Actions);function Actions(){var _this;_classCallCheck(this,Actions);_this=_super.apply(this,arguments);_this.onActionsPress=function(){var options=_this.props.options;var optionKeys=Object.keys(options);var cancelButtonIndex=optionKeys.indexOf('Cancel');_this.context.actionSheet().showActionSheetWithOptions({options:optionKeys,cancelButtonIndex:cancelButtonIndex,tintColor:_this.props.optionTintColor},function(buttonIndex){var key=optionKeys[buttonIndex];if(key){options[key](_this.props);}});};return _this;}_createClass(Actions,[{key:\"renderIcon\",value:function renderIcon(){if(this.props.icon){return this.props.icon();}return React.createElement(View,{style:[styles.wrapper,this.props.wrapperStyle]},React.createElement(Text,{style:[styles.iconText,this.props.iconTextStyle]},\"+\"));}},{key:\"render\",value:function render(){return React.createElement(TouchableOpacity,{style:[styles.container,this.props.containerStyle],onPress:this.props.onPressActionButton||this.onActionsPress},this.renderIcon());}}]);return Actions;}(React.Component);export{Actions as default};Actions.defaultProps={options:{},optionTintColor:Color.optionTintColor,icon:undefined,containerStyle:{},iconTextStyle:{},wrapperStyle:{}};Actions.propTypes={onSend:PropTypes.func,options:PropTypes.object,optionTintColor:PropTypes.string,icon:PropTypes.func,onPressActionButton:PropTypes.func,wrapperStyle:StylePropType,containerStyle:StylePropType};Actions.contextTypes={actionSheet:PropTypes.func};var styles=StyleSheet.create({container:{width:26,height:26,marginLeft:10,marginBottom:10},wrapper:{borderRadius:13,borderColor:Color.defaultColor,borderWidth:2,flex:1},iconText:{color:Color.defaultColor,fontWeight:'bold',fontSize:16,backgroundColor:Color.backgroundTransparent,textAlign:'center'}});","map":{"version":3,"sources":["../src/Actions.tsx"],"names":[],"mappings":"ggCAAA,MAAO,CAAA,SAAP,KAAsB,YAAtB,CACA,MAAO,CAAA,KAAP,KAAiC,OAAjC,C,wPAUA,MAAO,CAAA,KAAP,eACA,OAAS,aAAT,e,GAYqB,CAAA,O,iGAArB,kBAAA,yC,mCAwBE,MAAA,cAAA,CAAiB,UAAK,IACZ,CAAA,OADY,CACA,MAAK,KADL,CACZ,OADY,CAEpB,GAAM,CAAA,UAAU,CAAG,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAnB,CACA,GAAM,CAAA,iBAAiB,CAAG,UAAU,CAAC,OAAX,CAAmB,QAAnB,CAA1B,CACA,MAAK,OAAL,CAAa,WAAb,GAA2B,0BAA3B,CACE,CACE,OAAO,CAAE,UADX,CAEE,iBAAiB,CAAjB,iBAFF,CAGE,SAAS,CAAE,MAAK,KAAL,CAAW,eAHxB,CADF,CAME,SAAC,WAAD,CAAwB,CACtB,GAAM,CAAA,GAAG,CAAG,UAAU,CAAC,WAAD,CAAtB,CACA,GAAI,GAAJ,CAAS,CACP,OAAQ,CAAC,GAAD,CAAR,CAAc,MAAK,KAAnB,EACD,CACF,CAXH,EAaD,CAjBD,CAxBF,aAgEC,C,mEArBW,CACR,GAAI,KAAK,KAAL,CAAW,IAAf,CAAqB,CACnB,MAAO,MAAK,KAAL,CAAW,IAAX,EAAP,CACD,CACD,MACE,qBAAC,IAAD,EAAM,KAAK,CAAE,CAAC,MAAM,CAAC,OAAR,CAAiB,KAAK,KAAL,CAAW,YAA5B,CAAb,EACE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAC,MAAM,CAAC,QAAR,CAAkB,KAAK,KAAL,CAAW,aAA7B,CAAb,MADF,CADF,CAKD,C,uCAEK,CACJ,MACE,qBAAC,gBAAD,EACE,KAAK,CAAE,CAAC,MAAM,CAAC,SAAR,CAAmB,KAAK,KAAL,CAAW,cAA9B,CADT,CAEE,OAAO,CAAE,KAAK,KAAL,CAAW,mBAAX,EAAkC,KAAK,cAFlD,EAIG,KAAK,UAAL,EAJH,CADF,CAQD,C,qBA/DkC,KAAK,CAAC,S,SAAtB,O,aACZ,OAAA,CAAA,YAAA,CAA6B,CAClC,OAAO,CAAE,EADyB,CAElC,eAAe,CAAE,KAAK,CAAC,eAFW,CAGlC,IAAI,CAAE,SAH4B,CAIlC,cAAc,CAAE,EAJkB,CAKlC,aAAa,CAAE,EALmB,CAMlC,YAAY,CAAE,EANoB,CAA7B,CASA,OAAA,CAAA,SAAA,CAAY,CACjB,MAAM,CAAE,SAAS,CAAC,IADD,CAEjB,OAAO,CAAE,SAAS,CAAC,MAFF,CAGjB,eAAe,CAAE,SAAS,CAAC,MAHV,CAIjB,IAAI,CAAE,SAAS,CAAC,IAJC,CAKjB,mBAAmB,CAAE,SAAS,CAAC,IALd,CAMjB,YAAY,CAAE,aANG,CAOjB,cAAc,CAAE,aAPC,CAAZ,CAUA,OAAA,CAAA,YAAA,CAAe,CACpB,WAAW,CAAE,SAAS,CAAC,IADH,CAAf,CA8CT,GAAM,CAAA,MAAM,CAAG,UAAU,CAAC,MAAX,CAAkB,CAC/B,SAAS,CAAE,CACT,KAAK,CAAE,EADE,CAET,MAAM,CAAE,EAFC,CAGT,UAAU,CAAE,EAHH,CAIT,YAAY,CAAE,EAJL,CADoB,CAO/B,OAAO,CAAE,CACP,YAAY,CAAE,EADP,CAEP,WAAW,CAAE,KAAK,CAAC,YAFZ,CAGP,WAAW,CAAE,CAHN,CAIP,IAAI,CAAE,CAJC,CAPsB,CAa/B,QAAQ,CAAE,CACR,KAAK,CAAE,KAAK,CAAC,YADL,CAER,UAAU,CAAE,MAFJ,CAGR,QAAQ,CAAE,EAHF,CAIR,eAAe,CAAE,KAAK,CAAC,qBAJf,CAKR,SAAS,CAAE,QALH,CAbqB,CAAlB,CAAf","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, } from 'react-native';\nimport Color from './Color';\nimport { StylePropType } from './utils';\nexport default class Actions extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.onActionsPress = () => {\n            const { options } = this.props;\n            const optionKeys = Object.keys(options);\n            const cancelButtonIndex = optionKeys.indexOf('Cancel');\n            this.context.actionSheet().showActionSheetWithOptions({\n                options: optionKeys,\n                cancelButtonIndex,\n                tintColor: this.props.optionTintColor,\n            }, (buttonIndex) => {\n                const key = optionKeys[buttonIndex];\n                if (key) {\n                    options[key](this.props);\n                }\n            });\n        };\n    }\n    renderIcon() {\n        if (this.props.icon) {\n            return this.props.icon();\n        }\n        return (<View style={[styles.wrapper, this.props.wrapperStyle]}>\n        <Text style={[styles.iconText, this.props.iconTextStyle]}>+</Text>\n      </View>);\n    }\n    render() {\n        return (<TouchableOpacity style={[styles.container, this.props.containerStyle]} onPress={this.props.onPressActionButton || this.onActionsPress}>\n        {this.renderIcon()}\n      </TouchableOpacity>);\n    }\n}\nActions.defaultProps = {\n    options: {},\n    optionTintColor: Color.optionTintColor,\n    icon: undefined,\n    containerStyle: {},\n    iconTextStyle: {},\n    wrapperStyle: {},\n};\nActions.propTypes = {\n    onSend: PropTypes.func,\n    options: PropTypes.object,\n    optionTintColor: PropTypes.string,\n    icon: PropTypes.func,\n    onPressActionButton: PropTypes.func,\n    wrapperStyle: StylePropType,\n    containerStyle: StylePropType,\n};\nActions.contextTypes = {\n    actionSheet: PropTypes.func,\n};\nconst styles = StyleSheet.create({\n    container: {\n        width: 26,\n        height: 26,\n        marginLeft: 10,\n        marginBottom: 10,\n    },\n    wrapper: {\n        borderRadius: 13,\n        borderColor: Color.defaultColor,\n        borderWidth: 2,\n        flex: 1,\n    },\n    iconText: {\n        color: Color.defaultColor,\n        fontWeight: 'bold',\n        fontSize: 16,\n        backgroundColor: Color.backgroundTransparent,\n        textAlign: 'center',\n    },\n});\n//# sourceMappingURL=Actions.js.map"]},"metadata":{},"sourceType":"module"}