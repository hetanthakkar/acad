{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';export var ToggleButtonGroupContext=React.createContext(null);var ToggleButtonGroup=function(_React$Component){_inherits(ToggleButtonGroup,_React$Component);var _super=_createSuper(ToggleButtonGroup);function ToggleButtonGroup(){_classCallCheck(this,ToggleButtonGroup);return _super.apply(this,arguments);}_createClass(ToggleButtonGroup,[{key:\"render\",value:function render(){var _this$props=this.props,value=_this$props.value,onValueChange=_this$props.onValueChange,children=_this$props.children;return React.createElement(ToggleButtonGroupContext.Provider,{value:{value:value,onValueChange:onValueChange}},children);}}]);return ToggleButtonGroup;}(React.Component);_defineProperty(ToggleButtonGroup,\"displayName\",'ToggleButton.Group');export default ToggleButtonGroup;","map":{"version":3,"sources":["ToggleButtonGroup.tsx"],"names":["ToggleButtonGroupContext","React","ToggleButtonGroup","children","value","onValueChange"],"mappings":"srCAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAsBA,MAAO,IAAMA,CAAAA,wBAAwB,CAAGC,KAAK,CAALA,aAAAA,CAAjC,IAAiCA,CAAjC,C,GAmCP,CAAA,iB,oSAGW,iBACoC,KAA3C,KADO,CACD,KADC,aACD,KADC,CACD,aADC,aACD,aADC,CACuBE,QADvB,aACuBA,QADvB,CAGP,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,wBAAD,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACLC,KADK,CACLA,KADK,CAELC,aAAAA,CAAAA,aAFK,CADT,CAAA,CADF,QACE,CADF,CAUD,C,+BAhB6BJ,KAAK,CAArC,S,kBAAMC,iB,eACiB,oB,EAkBvB,cAAA,CAAA,iBAAA","sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void;\n  /**\n   * Value of the currently selected toggle button.\n   */\n  value: string;\n  /**\n   * React elements containing toggle buttons.\n   */\n  children: React.ReactNode;\n};\n\ntype ToggleButtonContextType = {\n  value: string;\n  onValueChange: (item: string) => void;\n};\n\nexport const ToggleButtonGroupContext = React.createContext<\n  ToggleButtonContextType\n>(null as any);\n\n/**\n * Toggle group allows to control a group of toggle buttons.</br>\n * It doesn't change the appearance of the toggle buttons. If you want to group them in a row, checkout <a href=\"/toggle-button-row.html\">`ToggleButton.Row`</a>.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/toggle-button-group.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ToggleButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('left');\n *\n *   return (\n *     <ToggleButton.Group\n *       onValueChange={value => setValue(value)}\n *       value={value}>\n *       <ToggleButton icon=\"format-align-left\" value=\"left\" />\n *       <ToggleButton icon=\"format-align-right\" value=\"right\" />\n *     </ToggleButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nclass ToggleButtonGroup extends React.Component<Props> {\n  static displayName = 'ToggleButton.Group';\n\n  render() {\n    const { value, onValueChange, children } = this.props;\n\n    return (\n      <ToggleButtonGroupContext.Provider\n        value={{\n          value,\n          onValueChange,\n        }}\n      >\n        {children}\n      </ToggleButtonGroupContext.Provider>\n    );\n  }\n}\n\nexport default ToggleButtonGroup;\n"]},"metadata":{},"sourceType":"module"}