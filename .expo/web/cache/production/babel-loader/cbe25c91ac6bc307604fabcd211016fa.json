{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import PropTypes from'prop-types';import React,{Component}from'react';import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Color from\"./Color\";import{warning,StylePropType}from\"./utils\";var styles=StyleSheet.create({container:{flexDirection:'row',flexWrap:'wrap',maxWidth:300},quickReply:{justifyContent:'center',alignItems:'center',borderWidth:1,maxWidth:200,paddingVertical:7,paddingHorizontal:12,minHeight:50,borderRadius:13,margin:3},quickReplyText:{overflow:'visible'},sendLink:{borderWidth:0},sendLinkText:{color:Color.defaultBlue,fontWeight:'600',fontSize:17}});var sameReply=function sameReply(currentReply){return function(reply){return currentReply.value===reply.value;};};var diffReply=function diffReply(currentReply){return function(reply){return currentReply.value!==reply.value;};};var QuickReplies=function(_Component){_inherits(QuickReplies,_Component);var _super=_createSuper(QuickReplies);function QuickReplies(){var _this;_classCallCheck(this,QuickReplies);_this=_super.apply(this,arguments);_this.state={replies:[]};_this.handlePress=function(reply){return function(){var currentMessage=_this.props.currentMessage;var replies=_this.state.replies;if(currentMessage){var type=currentMessage.quickReplies.type;switch(type){case'radio':{_this.handleSend([reply])();return;}case'checkbox':{if(replies.find(sameReply(reply))){_this.setState({replies:_this.state.replies.filter(diffReply(reply))});}else{_this.setState({replies:[].concat(_toConsumableArray(_this.state.replies),[reply])});}return;}default:{warning(\"onQuickReply unknown type: \"+type);return;}}}};};_this.handleSend=function(replies){return function(){var currentMessage=_this.props.currentMessage;if(_this.props.onQuickReply){_this.props.onQuickReply(replies.map(function(reply){return _objectSpread(_objectSpread({},reply),{},{messageId:currentMessage._id});}));}};};_this.shouldComponentDisplay=function(){var _this$props=_this.props,currentMessage=_this$props.currentMessage,nextMessage=_this$props.nextMessage;var hasReplies=!!currentMessage&&!!currentMessage.quickReplies;var hasNext=!!nextMessage&&!!nextMessage._id;var keepIt=currentMessage.quickReplies.keepIt;if(hasReplies&&!hasNext){return true;}if(hasReplies&&hasNext&&keepIt){return true;}return false;};_this.renderQuickReplySend=function(){var replies=_this.state.replies;var _this$props2=_this.props,sendText=_this$props2.sendText,customSend=_this$props2.renderQuickReplySend;return React.createElement(TouchableOpacity,{style:[styles.quickReply,styles.sendLink],onPress:_this.handleSend(replies)},customSend?customSend():React.createElement(Text,{style:styles.sendLinkText},sendText));};return _this;}_createClass(QuickReplies,[{key:\"render\",value:function render(){var _this2=this;var _this$props3=this.props,currentMessage=_this$props3.currentMessage,color=_this$props3.color,quickReplyStyle=_this$props3.quickReplyStyle;var replies=this.state.replies;if(!this.shouldComponentDisplay()){return null;}var type=currentMessage.quickReplies.type;return React.createElement(View,{style:styles.container},currentMessage.quickReplies.values.map(function(reply,index){var selected=type==='checkbox'&&replies.find(sameReply(reply));return React.createElement(TouchableOpacity,{onPress:_this2.handlePress(reply),style:[styles.quickReply,quickReplyStyle,{borderColor:color},selected&&{backgroundColor:color}],key:reply.value+\"-\"+index},React.createElement(Text,{numberOfLines:10,ellipsizeMode:'tail',style:[styles.quickReplyText,{color:selected?Color.white:color}]},reply.title));}),replies.length>0&&this.renderQuickReplySend());}}]);return QuickReplies;}(Component);export{QuickReplies as default};QuickReplies.defaultProps={currentMessage:{quickReplies:[]},onQuickReply:function onQuickReply(){},color:Color.peterRiver,sendText:'Send',keepReplies:false,renderQuickReplySend:undefined,quickReplyStyle:undefined};QuickReplies.propTypes={currentMessage:PropTypes.object.isRequired,onQuickReply:PropTypes.func,color:PropTypes.string,sendText:PropTypes.string,keepReplies:PropTypes.bool,renderQuickReplySend:PropTypes.func,quickReplyStyle:StylePropType};","map":{"version":3,"sources":["../src/QuickReplies.tsx"],"names":[],"mappings":"w6DAAA,MAAO,CAAA,SAAP,KAAsB,YAAtB,CACA,MAAO,CAAA,KAAP,EAAgB,SAAhB,KAAiC,OAAjC,C,wPAUA,MAAO,CAAA,KAAP,eACA,OAAS,OAAT,CAAkB,aAAlB,eAEA,GAAM,CAAA,MAAM,CAAG,UAAU,CAAC,MAAX,CAAkB,CAC/B,SAAS,CAAE,CACT,aAAa,CAAE,KADN,CAET,QAAQ,CAAE,MAFD,CAGT,QAAQ,CAAE,GAHD,CADoB,CAM/B,UAAU,CAAE,CACV,cAAc,CAAE,QADN,CAEV,UAAU,CAAE,QAFF,CAGV,WAAW,CAAE,CAHH,CAIV,QAAQ,CAAE,GAJA,CAKV,eAAe,CAAE,CALP,CAMV,iBAAiB,CAAE,EANT,CAOV,SAAS,CAAE,EAPD,CAQV,YAAY,CAAE,EARJ,CASV,MAAM,CAAE,CATE,CANmB,CAiB/B,cAAc,CAAE,CACd,QAAQ,CAAE,SADI,CAjBe,CAoB/B,QAAQ,CAAE,CACR,WAAW,CAAE,CADL,CApBqB,CAuB/B,YAAY,CAAE,CACZ,KAAK,CAAE,KAAK,CAAC,WADD,CAEZ,UAAU,CAAE,KAFA,CAGZ,QAAQ,CAAE,EAHE,CAvBiB,CAAlB,CAAf,CA4CA,GAAM,CAAA,SAAS,CAAG,QAAZ,CAAA,SAAY,CAAC,YAAD,QAAyB,UAAC,KAAD,QACzC,CAAA,YAAY,CAAC,KAAb,GAAuB,KAAK,CAAC,KADY,EAAzB,EAAlB,CAGA,GAAM,CAAA,SAAS,CAAG,QAAZ,CAAA,SAAY,CAAC,YAAD,QAAyB,UAAC,KAAD,QACzC,CAAA,YAAY,CAAC,KAAb,GAAuB,KAAK,CAAC,KADY,EAAzB,EAAlB,C,GAGqB,CAAA,Y,+FAArB,uBAAA,8C,mCA0BE,MAAA,KAAA,CAAQ,CACN,OAAO,CAAE,EADH,CAAR,CAIA,MAAA,WAAA,CAAc,SAAC,KAAD,QAAkB,WAAK,IAC3B,CAAA,cAD2B,CACR,MAAK,KADG,CAC3B,cAD2B,IAE3B,CAAA,OAF2B,CAEf,MAAK,KAFU,CAE3B,OAF2B,CAGnC,GAAI,cAAJ,CAAoB,IACV,CAAA,IADU,CACD,cAAc,CAAC,YADd,CACV,IADU,CAElB,OAAQ,IAAR,EACE,IAAK,OAAL,CAAc,CACZ,MAAK,UAAL,CAAgB,CAAC,KAAD,CAAhB,IACA,OACD,CAED,IAAK,UAAL,CAAiB,CACf,GAAI,OAAO,CAAC,IAAR,CAAa,SAAS,CAAC,KAAD,CAAtB,CAAJ,CAAoC,CAClC,MAAK,QAAL,CAAc,CACZ,OAAO,CAAE,MAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,CAA0B,SAAS,CAAC,KAAD,CAAnC,CADG,CAAd,EAGD,CAJD,IAIO,CACL,MAAK,QAAL,CAAc,CAAE,OAAO,8BAAM,MAAK,KAAL,CAAW,OAAjB,GAA0B,KAA1B,EAAT,CAAd,EACD,CACD,OACD,CAED,QAAS,CACP,OAAO,+BAA+B,IAA/B,CAAP,CACA,OACD,CApBH,CAsBD,CACF,CA5Ba,EAAd,CA8BA,MAAA,UAAA,CAAa,SAAC,OAAD,QAAsB,WAAK,IAC9B,CAAA,cAD8B,CACX,MAAK,KADM,CAC9B,cAD8B,CAEtC,GAAI,MAAK,KAAL,CAAW,YAAf,CAA6B,CAC3B,MAAK,KAAL,CAAW,YAAX,CACE,OAAO,CAAC,GAAR,CAAY,SAAC,KAAD,wCACP,KADO,MAEV,SAAS,CAAE,cAAe,CAAC,GAFjB,IAAZ,CADF,EAMD,CACF,CAVY,EAAb,CAYA,MAAA,sBAAA,CAAyB,UAAK,iBACY,MAAK,KADjB,CACpB,cADoB,aACpB,cADoB,CACJ,WADI,aACJ,WADI,CAE5B,GAAM,CAAA,UAAU,CAAG,CAAC,CAAC,cAAF,EAAoB,CAAC,CAAC,cAAe,CAAC,YAAzD,CACA,GAAM,CAAA,OAAO,CAAG,CAAC,CAAC,WAAF,EAAiB,CAAC,CAAC,WAAY,CAAC,GAAhD,CACA,GAAM,CAAA,MAAM,CAAG,cAAe,CAAC,YAAhB,CAA8B,MAA7C,CAEA,GAAI,UAAU,EAAI,CAAC,OAAnB,CAA4B,CAC1B,MAAO,KAAP,CACD,CACD,GAAI,UAAU,EAAI,OAAd,EAAyB,MAA7B,CAAqC,CACnC,MAAO,KAAP,CACD,CACD,MAAO,MAAP,CACD,CAbD,CAeA,MAAA,oBAAA,CAAuB,UAAK,IAClB,CAAA,OADkB,CACN,MAAK,KADC,CAClB,OADkB,kBAE6B,MAAK,KAFlC,CAElB,QAFkB,cAElB,QAFkB,CAEc,UAFd,cAER,oBAFQ,CAI1B,MACE,qBAAC,gBAAD,EACE,KAAK,CAAE,CAAC,MAAM,CAAC,UAAR,CAAoB,MAAM,CAAC,QAA3B,CADT,CAEE,OAAO,CAAE,MAAK,UAAL,CAAgB,OAAhB,CAFX,EAIG,UAAU,CACT,UAAU,EADD,CAGT,oBAAC,IAAD,EAAM,KAAK,CAAE,MAAM,CAAC,YAApB,EAAmC,QAAnC,CAPJ,CADF,CAYD,CAhBD,CAvFF,aAsJC,C,gEA7CO,kCAC+C,KAAK,KADpD,CACI,cADJ,cACI,cADJ,CACoB,KADpB,cACoB,KADpB,CAC2B,eAD3B,cAC2B,eAD3B,IAEI,CAAA,OAFJ,CAEgB,KAAK,KAFrB,CAEI,OAFJ,CAIJ,GAAI,CAAC,KAAK,sBAAL,EAAL,CAAoC,CAClC,MAAO,KAAP,CACD,CANG,GAQI,CAAA,IARJ,CAQa,cAAe,CAAC,YAR7B,CAQI,IARJ,CAUJ,MACE,qBAAC,IAAD,EAAM,KAAK,CAAE,MAAM,CAAC,SAApB,EACG,cAAe,CAAC,YAAhB,CAA8B,MAA9B,CAAqC,GAArC,CACC,SAAC,KAAD,CAAe,KAAf,CAAgC,CAC9B,GAAM,CAAA,QAAQ,CACZ,IAAI,GAAK,UAAT,EAAuB,OAAO,CAAC,IAAR,CAAa,SAAS,CAAC,KAAD,CAAtB,CADzB,CAEA,MACE,qBAAC,gBAAD,EACE,OAAO,CAAE,MAAI,CAAC,WAAL,CAAiB,KAAjB,CADX,CAEE,KAAK,CAAE,CACL,MAAM,CAAC,UADF,CAEL,eAFK,CAGL,CAAE,WAAW,CAAE,KAAf,CAHK,CAIL,QAAQ,EAAI,CAAE,eAAe,CAAE,KAAnB,CAJP,CAFT,CAQE,GAAG,CAAK,KAAK,CAAC,KAAX,KAAoB,KARzB,EAUE,oBAAC,IAAD,EACE,aAAa,CAAE,EADjB,CAEE,aAAa,CAAE,MAFjB,CAGE,KAAK,CAAE,CACL,MAAM,CAAC,cADF,CAEL,CAAE,KAAK,CAAE,QAAQ,CAAG,KAAK,CAAC,KAAT,CAAiB,KAAlC,CAFK,CAHT,EAQG,KAAK,CAAC,KART,CAVF,CADF,CAuBD,CA3BF,CADH,CA8BG,OAAO,CAAC,MAAR,CAAiB,CAAjB,EAAsB,KAAK,oBAAL,EA9BzB,CADF,CAkCD,C,0BArJuC,S,SAArB,Y,aAIZ,YAAA,CAAA,YAAA,CAAe,CACpB,cAAc,CAAE,CACd,YAAY,CAAE,EADA,CADI,CAIpB,YAAY,CAAE,uBAAK,CAAG,CAJF,CAKpB,KAAK,CAAE,KAAK,CAAC,UALO,CAMpB,QAAQ,CAAE,MANU,CAOpB,WAAW,CAAE,KAPO,CAQpB,oBAAoB,CAAE,SARF,CASpB,eAAe,CAAE,SATG,CAAf,CAYA,YAAA,CAAA,SAAA,CAAY,CACjB,cAAc,CAAE,SAAS,CAAC,MAAV,CAAiB,UADhB,CAEjB,YAAY,CAAE,SAAS,CAAC,IAFP,CAGjB,KAAK,CAAE,SAAS,CAAC,MAHA,CAIjB,QAAQ,CAAE,SAAS,CAAC,MAJH,CAKjB,WAAW,CAAE,SAAS,CAAC,IALN,CAMjB,oBAAoB,CAAE,SAAS,CAAC,IANf,CAOjB,eAAe,CAAE,aAPA,CAAZ","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Text, StyleSheet, View, TouchableOpacity, } from 'react-native';\nimport Color from './Color';\nimport { warning, StylePropType } from './utils';\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        maxWidth: 300,\n    },\n    quickReply: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderWidth: 1,\n        maxWidth: 200,\n        paddingVertical: 7,\n        paddingHorizontal: 12,\n        minHeight: 50,\n        borderRadius: 13,\n        margin: 3,\n    },\n    quickReplyText: {\n        overflow: 'visible',\n    },\n    sendLink: {\n        borderWidth: 0,\n    },\n    sendLinkText: {\n        color: Color.defaultBlue,\n        fontWeight: '600',\n        fontSize: 17,\n    },\n});\nconst sameReply = (currentReply) => (reply) => currentReply.value === reply.value;\nconst diffReply = (currentReply) => (reply) => currentReply.value !== reply.value;\nexport default class QuickReplies extends Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            replies: [],\n        };\n        this.handlePress = (reply) => () => {\n            const { currentMessage } = this.props;\n            const { replies } = this.state;\n            if (currentMessage) {\n                const { type } = currentMessage.quickReplies;\n                switch (type) {\n                    case 'radio': {\n                        this.handleSend([reply])();\n                        return;\n                    }\n                    case 'checkbox': {\n                        if (replies.find(sameReply(reply))) {\n                            this.setState({\n                                replies: this.state.replies.filter(diffReply(reply)),\n                            });\n                        }\n                        else {\n                            this.setState({ replies: [...this.state.replies, reply] });\n                        }\n                        return;\n                    }\n                    default: {\n                        warning(`onQuickReply unknown type: ${type}`);\n                        return;\n                    }\n                }\n            }\n        };\n        this.handleSend = (replies) => () => {\n            const { currentMessage } = this.props;\n            if (this.props.onQuickReply) {\n                this.props.onQuickReply(replies.map((reply) => ({\n                    ...reply,\n                    messageId: currentMessage._id,\n                })));\n            }\n        };\n        this.shouldComponentDisplay = () => {\n            const { currentMessage, nextMessage } = this.props;\n            const hasReplies = !!currentMessage && !!currentMessage.quickReplies;\n            const hasNext = !!nextMessage && !!nextMessage._id;\n            const keepIt = currentMessage.quickReplies.keepIt;\n            if (hasReplies && !hasNext) {\n                return true;\n            }\n            if (hasReplies && hasNext && keepIt) {\n                return true;\n            }\n            return false;\n        };\n        this.renderQuickReplySend = () => {\n            const { replies } = this.state;\n            const { sendText, renderQuickReplySend: customSend } = this.props;\n            return (<TouchableOpacity style={[styles.quickReply, styles.sendLink]} onPress={this.handleSend(replies)}>\n        {customSend ? (customSend()) : (<Text style={styles.sendLinkText}>{sendText}</Text>)}\n      </TouchableOpacity>);\n        };\n    }\n    render() {\n        const { currentMessage, color, quickReplyStyle } = this.props;\n        const { replies } = this.state;\n        if (!this.shouldComponentDisplay()) {\n            return null;\n        }\n        const { type } = currentMessage.quickReplies;\n        return (<View style={styles.container}>\n        {currentMessage.quickReplies.values.map((reply, index) => {\n            const selected = type === 'checkbox' && replies.find(sameReply(reply));\n            return (<TouchableOpacity onPress={this.handlePress(reply)} style={[\n                styles.quickReply,\n                quickReplyStyle,\n                { borderColor: color },\n                selected && { backgroundColor: color },\n            ]} key={`${reply.value}-${index}`}>\n                <Text numberOfLines={10} ellipsizeMode={'tail'} style={[\n                styles.quickReplyText,\n                { color: selected ? Color.white : color },\n            ]}>\n                  {reply.title}\n                </Text>\n              </TouchableOpacity>);\n        })}\n        {replies.length > 0 && this.renderQuickReplySend()}\n      </View>);\n    }\n}\nQuickReplies.defaultProps = {\n    currentMessage: {\n        quickReplies: [],\n    },\n    onQuickReply: () => { },\n    color: Color.peterRiver,\n    sendText: 'Send',\n    keepReplies: false,\n    renderQuickReplySend: undefined,\n    quickReplyStyle: undefined,\n};\nQuickReplies.propTypes = {\n    currentMessage: PropTypes.object.isRequired,\n    onQuickReply: PropTypes.func,\n    color: PropTypes.string,\n    sendText: PropTypes.string,\n    keepReplies: PropTypes.bool,\n    renderQuickReplySend: PropTypes.func,\n    quickReplyStyle: StylePropType,\n};\n//# sourceMappingURL=QuickReplies.js.map"]},"metadata":{},"sourceType":"module"}