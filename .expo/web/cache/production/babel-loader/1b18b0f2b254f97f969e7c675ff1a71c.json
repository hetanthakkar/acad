{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Icon,{isValidIcon,isEqualIcon}from\"./Icon\";import{withTheme}from\"../core/theming\";var CrossFadeIcon=function(_React$Component){_inherits(CrossFadeIcon,_React$Component);var _super=_createSuper(CrossFadeIcon);function CrossFadeIcon(){var _this;_classCallCheck(this,CrossFadeIcon);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"state\",{currentIcon:_this.props.source,previousIcon:null,fade:new Animated.Value(1)});return _this;}_createClass(CrossFadeIcon,[{key:\"componentDidUpdate\",value:function componentDidUpdate(_,prevState){var previousIcon=this.state.previousIcon;var scale=this.props.theme.animation.scale;if(!isValidIcon(previousIcon)||isEqualIcon(previousIcon,prevState.previousIcon)){return;}this.state.fade.setValue(1);Animated.timing(this.state.fade,{duration:scale*200,toValue:0,useNativeDriver:true}).start();}},{key:\"render\",value:function render(){var _this$props=this.props,color=_this$props.color,size=_this$props.size;var opacityPrev=this.state.fade;var opacityNext=this.state.previousIcon?this.state.fade.interpolate({inputRange:[0,1],outputRange:[1,0]}):1;var rotatePrev=this.state.fade.interpolate({inputRange:[0,1],outputRange:['-90deg','0deg']});var rotateNext=this.state.previousIcon?this.state.fade.interpolate({inputRange:[0,1],outputRange:['0deg','-180deg']}):'0deg';return React.createElement(View,{style:[styles.content,{height:size,width:size}]},this.state.previousIcon?React.createElement(Animated.View,{style:[styles.icon,{opacity:opacityPrev,transform:[{rotate:rotatePrev}]}]},React.createElement(Icon,{source:this.state.previousIcon,size:size,color:color})):null,React.createElement(Animated.View,{style:[styles.icon,{opacity:opacityNext,transform:[{rotate:rotateNext}]}]},React.createElement(Icon,{source:this.state.currentIcon,size:size,color:color})));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,nextState){if(nextState.currentIcon===nextProps.source){return null;}return{currentIcon:nextProps.source,previousIcon:nextState.currentIcon};}}]);return CrossFadeIcon;}(React.Component);export default withTheme(CrossFadeIcon);var styles=StyleSheet.create({content:{alignItems:'center',justifyContent:'center'},icon:{position:'absolute',top:0,left:0,right:0,bottom:0}});","map":{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["React","nextState","nextProps","currentIcon","previousIcon","fade","Animated","theme","animation","scale","isValidIcon","isEqualIcon","prevState","duration","toValue","useNativeDriver","size","opacityPrev","opacityNext","inputRange","outputRange","rotatePrev","rotateNext","styles","height","width","opacity","transform","rotate","color","withTheme","content","alignItems","justifyContent","icon","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, isEqualIcon, IconSource } from './Icon';\n\nimport { withTheme } from '../core/theming';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype State = {\n  currentIcon: IconSource;\n  previousIcon: IconSource | null;\n  fade: Animated.Value;\n};\n\nclass CrossFadeIcon extends React.Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Props, nextState: State) {\n    if (nextState.currentIcon === nextProps.source) {\n      return null;\n    }\n\n    return {\n      currentIcon: nextProps.source,\n      previousIcon: nextState.currentIcon,\n    };\n  }\n\n  state: State = {\n    currentIcon: this.props.source,\n    previousIcon: null,\n    fade: new Animated.Value(1),\n  };\n\n  componentDidUpdate(_: Props, prevState: State) {\n    const { previousIcon } = this.state;\n    const {\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n\n    if (\n      !isValidIcon(previousIcon) ||\n      isEqualIcon(previousIcon, prevState.previousIcon)\n    ) {\n      return;\n    }\n\n    this.state.fade.setValue(1);\n\n    Animated.timing(this.state.fade, {\n      duration: scale * 200,\n      toValue: 0,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  render() {\n    const { color, size } = this.props;\n    const opacityPrev = this.state.fade;\n    const opacityNext = this.state.previousIcon\n      ? this.state.fade.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0],\n        })\n      : 1;\n\n    const rotatePrev = this.state.fade.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['-90deg', '0deg'],\n    });\n\n    const rotateNext = this.state.previousIcon\n      ? this.state.fade.interpolate({\n          inputRange: [0, 1],\n          outputRange: ['0deg', '-180deg'],\n        })\n      : '0deg';\n\n    return (\n      <View\n        style={[\n          styles.content,\n          {\n            height: size,\n            width: size,\n          },\n        ]}\n      >\n        {this.state.previousIcon ? (\n          <Animated.View\n            style={[\n              styles.icon,\n              {\n                opacity: opacityPrev,\n                transform: [{ rotate: rotatePrev }],\n              },\n            ]}\n          >\n            <Icon source={this.state.previousIcon} size={size} color={color} />\n          </Animated.View>\n        ) : null}\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityNext,\n              transform: [{ rotate: rotateNext }],\n            },\n          ]}\n        >\n          <Icon source={this.state.currentIcon} size={size} color={color} />\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}