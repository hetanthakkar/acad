{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import color from'color';import{RadioButtonContext}from\"./RadioButtonGroup\";import{handlePress,isChecked}from\"./utils\";import MaterialCommunityIcon from\"../MaterialCommunityIcon\";import TouchableRipple from\"../TouchableRipple\";import{withTheme}from\"../../core/theming\";var RadioButtonIOS=function(_React$Component){_inherits(RadioButtonIOS,_React$Component);var _super=_createSuper(RadioButtonIOS);function RadioButtonIOS(){_classCallCheck(this,RadioButtonIOS);return _super.apply(this,arguments);}_createClass(RadioButtonIOS,[{key:\"render\",value:function render(){var _this$props=this.props,disabled=_this$props.disabled,onPress=_this$props.onPress,theme=_this$props.theme,status=_this$props.status,value=_this$props.value,rest=_objectWithoutProperties(_this$props,[\"disabled\",\"onPress\",\"theme\",\"status\",\"value\"]);var checkedColor=disabled?theme.colors.disabled:this.props.color||theme.colors.accent;var rippleColor;if(disabled){rippleColor=color(theme.colors.text).alpha(0.16).rgb().string();}else{rippleColor=color(checkedColor).fade(0.32).rgb().string();}return React.createElement(RadioButtonContext.Consumer,null,function(context){var checked=isChecked({contextValue:context===null||context===void 0?void 0:context.value,status:status,value:value})==='checked';return React.createElement(TouchableRipple,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:disabled?undefined:function(){handlePress({onPress:onPress,value:value,onValueChange:context===null||context===void 0?void 0:context.onValueChange});},accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:checked?'radiobutton_checked':'radiobutton_unchecked',accessibilityRole:\"button\",accessibilityState:{disabled:disabled},accessibilityLiveRegion:\"polite\",style:styles.container}),React.createElement(View,{style:{opacity:checked?1:0}},React.createElement(MaterialCommunityIcon,{allowFontScaling:false,name:\"check\",size:24,color:checkedColor,direction:\"ltr\"})));});}}]);return RadioButtonIOS;}(React.Component);_defineProperty(RadioButtonIOS,\"displayName\",'RadioButton.IOS');var styles=StyleSheet.create({container:{borderRadius:18,padding:6}});export default withTheme(RadioButtonIOS);export{RadioButtonIOS};","map":{"version":3,"sources":["RadioButtonIOS.tsx"],"names":["RadioButtonIOS","React","value","checkedColor","disabled","theme","rippleColor","color","context","checked","contextValue","status","handlePress","onPress","onValueChange","styles","container","opacity","borderRadius","padding","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport color from 'color';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for iOS.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nclass RadioButtonIOS extends React.Component<Props> {\n  static displayName = 'RadioButton.IOS';\n\n  render() {\n    const { disabled, onPress, theme, status, value, ...rest } = this.props;\n\n    const checkedColor = disabled\n      ? theme.colors.disabled\n      : this.props.color || theme.colors.accent;\n\n    let rippleColor: string;\n\n    if (disabled) {\n      rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n    } else {\n      rippleColor = color(checkedColor).fade(0.32).rgb().string();\n    }\n\n    return (\n      <RadioButtonContext.Consumer>\n        {(context?: RadioButtonContextType) => {\n          const checked =\n            isChecked({\n              contextValue: context?.value,\n              status,\n              value,\n            }) === 'checked';\n\n          return (\n            <TouchableRipple\n              {...rest}\n              borderless\n              rippleColor={rippleColor}\n              onPress={\n                disabled\n                  ? undefined\n                  : () => {\n                      handlePress({\n                        onPress,\n                        value,\n                        onValueChange: context?.onValueChange,\n                      });\n                    }\n              }\n              accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n              accessibilityComponentType={\n                checked ? 'radiobutton_checked' : 'radiobutton_unchecked'\n              }\n              accessibilityRole=\"button\"\n              accessibilityState={{ disabled }}\n              accessibilityLiveRegion=\"polite\"\n              style={styles.container}\n            >\n              <View style={{ opacity: checked ? 1 : 0 }}>\n                <MaterialCommunityIcon\n                  allowFontScaling={false}\n                  name=\"check\"\n                  size={24}\n                  color={checkedColor}\n                  direction=\"ltr\"\n                />\n              </View>\n            </TouchableRipple>\n          );\n        }}\n      </RadioButtonContext.Consumer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6,\n  },\n});\n\nexport default withTheme(RadioButtonIOS);\n\n// @component-docs ignore-next-line\nexport { RadioButtonIOS };\n"]},"metadata":{},"sourceType":"module"}