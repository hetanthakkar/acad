{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import{black,white}from\"../styles/colors\";import{withTheme}from\"../core/theming\";var defaultSize=20;var Badge=function(_React$Component){_inherits(Badge,_React$Component);var _super=_createSuper(Badge);function Badge(){var _this;_classCallCheck(this,Badge);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"state\",{opacity:new Animated.Value(_this.props.visible?1:0)});return _this;}_createClass(Badge,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props2=this.props,visible=_this$props2.visible,scale=_this$props2.theme.animation.scale;if(visible!==prevProps.visible){Animated.timing(this.state.opacity,{toValue:visible?1:0,duration:150*scale,useNativeDriver:true}).start();}}},{key:\"render\",value:function render(){var _this$props=this.props,children=_this$props.children,_this$props$size=_this$props.size,size=_this$props$size===void 0?defaultSize:_this$props$size,style=_this$props.style,theme=_this$props.theme,visible=_this$props.visible,rest=_objectWithoutProperties(_this$props,[\"children\",\"size\",\"style\",\"theme\",\"visible\"]);var opacity=this.state.opacity;var _ref=StyleSheet.flatten(style)||{},_ref$backgroundColor=_ref.backgroundColor,backgroundColor=_ref$backgroundColor===void 0?theme.colors.notification:_ref$backgroundColor,restStyle=_objectWithoutProperties(_ref,[\"backgroundColor\"]);var textColor=color(backgroundColor).isLight()?black:white;var borderRadius=size/2;return React.createElement(Animated.Text,_extends({numberOfLines:1,style:[_objectSpread(_objectSpread({opacity:opacity,backgroundColor:backgroundColor,color:textColor,fontSize:size*0.5},theme.fonts.regular),{},{lineHeight:size,height:size,minWidth:size,borderRadius:borderRadius}),styles.container,restStyle]},rest),children);}}]);return Badge;}(React.Component);_defineProperty(Badge,\"defaultProps\",{visible:true,size:defaultSize});export default withTheme(Badge);var styles=StyleSheet.create({container:{alignSelf:'flex-end',textAlign:'center',textAlignVertical:'center',paddingHorizontal:4,overflow:'hidden'}});","map":{"version":3,"sources":["Badge.tsx"],"names":["defaultSize","Badge","React","visible","size","opacity","Animated","theme","animation","scale","prevProps","toValue","duration","useNativeDriver","backgroundColor","notification","StyleSheet","textColor","color","borderRadius","fontSize","lineHeight","height","minWidth","styles","withTheme","container","alignSelf","textAlign","textAlignVertical","paddingHorizontal","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport { black, white } from '../styles/colors';\nimport { withTheme } from '../core/theming';\n\nconst defaultSize = 20;\n\ntype Props = React.ComponentProps<typeof Animated.Text> & {\n  /**\n   * Whether the badge is visible\n   */\n  visible: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  style?: StyleProp<TextStyle>;\n  ref?: React.RefObject<typeof Animated.Text>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype State = {\n  opacity: Animated.Value;\n};\n\n/**\n * Badges are small status descriptors for UI elements.\n * A badge consists of a small circle, typically containing a number or other short set of characters, that appears in proximity to another object.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-1.png\" />\n *     <figcaption>Badge with content</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-2.png\" />\n *     <figcaption>Badge without content</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Badge } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Badge>3</Badge>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Badge extends React.Component<Props, State> {\n  static defaultProps = {\n    visible: true,\n    size: defaultSize,\n  };\n\n  state = {\n    opacity: new Animated.Value(this.props.visible ? 1 : 0),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    const {\n      visible,\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n\n    if (visible !== prevProps.visible) {\n      Animated.timing(this.state.opacity, {\n        toValue: visible ? 1 : 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }\n\n  render() {\n    const {\n      children,\n      size = defaultSize,\n      style,\n      theme,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      visible,\n      ...rest\n    } = this.props;\n    const { opacity } = this.state;\n\n    const { backgroundColor = theme.colors.notification, ...restStyle } =\n      StyleSheet.flatten(style) || {};\n    const textColor = color(backgroundColor).isLight() ? black : white;\n\n    const borderRadius = size / 2;\n\n    return (\n      // @ts-ignore\n      <Animated.Text\n        numberOfLines={1}\n        style={[\n          {\n            opacity,\n            backgroundColor,\n            color: textColor,\n            fontSize: size * 0.5,\n            ...theme.fonts.regular,\n            lineHeight: size,\n            height: size,\n            minWidth: size,\n            borderRadius,\n          },\n          styles.container,\n          restStyle,\n        ]}\n        {...rest}\n      >\n        {children}\n      </Animated.Text>\n    );\n  }\n}\n\nexport default withTheme(Badge);\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    paddingHorizontal: 4,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}