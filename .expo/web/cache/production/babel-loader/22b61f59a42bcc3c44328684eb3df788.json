{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import PropTypes from'prop-types';import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import GiftedAvatar from\"./GiftedAvatar\";import{StylePropType,isSameUser,isSameDay}from\"./utils\";var styles={left:StyleSheet.create({container:{marginRight:8},onTop:{alignSelf:'flex-start'},onBottom:{},image:{height:36,width:36,borderRadius:18}}),right:StyleSheet.create({container:{marginLeft:8},onTop:{alignSelf:'flex-start'},onBottom:{},image:{height:36,width:36,borderRadius:18}})};var Avatar=function(_React$Component){_inherits(Avatar,_React$Component);var _super=_createSuper(Avatar);function Avatar(){_classCallCheck(this,Avatar);return _super.apply(this,arguments);}_createClass(Avatar,[{key:\"renderAvatar\",value:function renderAvatar(){var _this=this;if(this.props.renderAvatar){var _this$props=this.props,renderAvatar=_this$props.renderAvatar,avatarProps=_objectWithoutProperties(_this$props,[\"renderAvatar\"]);return this.props.renderAvatar(avatarProps);}if(this.props.currentMessage){return React.createElement(GiftedAvatar,{avatarStyle:[styles[this.props.position].image,this.props.imageStyle&&this.props.imageStyle[this.props.position]],textStyle:this.props.textStyle?this.props.textStyle:{},user:this.props.currentMessage.user,onPress:function onPress(){return _this.props.onPressAvatar&&_this.props.onPressAvatar(_this.props.currentMessage.user);},onLongPress:function onLongPress(){return _this.props.onLongPressAvatar&&_this.props.onLongPressAvatar(_this.props.currentMessage.user);}});}return null;}},{key:\"render\",value:function render(){var _this$props2=this.props,renderAvatarOnTop=_this$props2.renderAvatarOnTop,showAvatarForEveryMessage=_this$props2.showAvatarForEveryMessage,containerStyle=_this$props2.containerStyle,position=_this$props2.position,currentMessage=_this$props2.currentMessage,renderAvatar=_this$props2.renderAvatar,previousMessage=_this$props2.previousMessage,nextMessage=_this$props2.nextMessage,imageStyle=_this$props2.imageStyle;var messageToCompare=renderAvatarOnTop?previousMessage:nextMessage;var computedStyle=renderAvatarOnTop?'onTop':'onBottom';if(renderAvatar===null){return null;}if(!showAvatarForEveryMessage&&currentMessage&&messageToCompare&&isSameUser(currentMessage,messageToCompare)&&isSameDay(currentMessage,messageToCompare)){return React.createElement(View,{style:[styles[position].container,containerStyle&&containerStyle[position]]},React.createElement(GiftedAvatar,{avatarStyle:[styles[position].image,imageStyle&&imageStyle[position]]}));}return React.createElement(View,{style:[styles[position].container,styles[position][computedStyle],containerStyle&&containerStyle[position]]},this.renderAvatar());}}]);return Avatar;}(React.Component);export{Avatar as default};Avatar.defaultProps={renderAvatarOnTop:false,showAvatarForEveryMessage:false,position:'left',currentMessage:{user:null},previousMessage:{},nextMessage:{},containerStyle:{},imageStyle:{},onPressAvatar:function onPressAvatar(){},onLongPressAvatar:function onLongPressAvatar(){}};Avatar.propTypes={renderAvatarOnTop:PropTypes.bool,showAvatarForEveryMessage:PropTypes.bool,position:PropTypes.oneOf(['left','right']),currentMessage:PropTypes.object,previousMessage:PropTypes.object,nextMessage:PropTypes.object,onPressAvatar:PropTypes.func,onLongPressAvatar:PropTypes.func,renderAvatar:PropTypes.func,containerStyle:PropTypes.shape({left:StylePropType,right:StylePropType}),imageStyle:PropTypes.shape({left:StylePropType,right:StylePropType})};","map":{"version":3,"sources":["../src/Avatar.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, View, } from 'react-native';\nimport GiftedAvatar from './GiftedAvatar';\nimport { StylePropType, isSameUser, isSameDay } from './utils';\nconst styles = {\n    left: StyleSheet.create({\n        container: {\n            marginRight: 8,\n        },\n        onTop: {\n            alignSelf: 'flex-start',\n        },\n        onBottom: {},\n        image: {\n            height: 36,\n            width: 36,\n            borderRadius: 18,\n        },\n    }),\n    right: StyleSheet.create({\n        container: {\n            marginLeft: 8,\n        },\n        onTop: {\n            alignSelf: 'flex-start',\n        },\n        onBottom: {},\n        image: {\n            height: 36,\n            width: 36,\n            borderRadius: 18,\n        },\n    }),\n};\nexport default class Avatar extends React.Component {\n    renderAvatar() {\n        if (this.props.renderAvatar) {\n            const { renderAvatar, ...avatarProps } = this.props;\n            return this.props.renderAvatar(avatarProps);\n        }\n        if (this.props.currentMessage) {\n            return (<GiftedAvatar avatarStyle={[\n                styles[this.props.position].image,\n                this.props.imageStyle &&\n                    this.props.imageStyle[this.props.position],\n            ]} textStyle={this.props.textStyle ? this.props.textStyle : {}} user={this.props.currentMessage.user} onPress={() => this.props.onPressAvatar &&\n                this.props.onPressAvatar(this.props.currentMessage.user)} onLongPress={() => this.props.onLongPressAvatar &&\n                this.props.onLongPressAvatar(this.props.currentMessage.user)}/>);\n        }\n        return null;\n    }\n    render() {\n        const { renderAvatarOnTop, showAvatarForEveryMessage, containerStyle, position, currentMessage, renderAvatar, previousMessage, nextMessage, imageStyle, } = this.props;\n        const messageToCompare = renderAvatarOnTop ? previousMessage : nextMessage;\n        const computedStyle = renderAvatarOnTop ? 'onTop' : 'onBottom';\n        if (renderAvatar === null) {\n            return null;\n        }\n        if (!showAvatarForEveryMessage &&\n            currentMessage &&\n            messageToCompare &&\n            isSameUser(currentMessage, messageToCompare) &&\n            isSameDay(currentMessage, messageToCompare)) {\n            return (<View style={[\n                styles[position].container,\n                containerStyle && containerStyle[position],\n            ]}>\n          <GiftedAvatar avatarStyle={[\n                styles[position].image,\n                imageStyle && imageStyle[position],\n            ]}/>\n        </View>);\n        }\n        return (<View style={[\n            styles[position].container,\n            styles[position][computedStyle],\n            containerStyle && containerStyle[position],\n        ]}>\n        {this.renderAvatar()}\n      </View>);\n    }\n}\nAvatar.defaultProps = {\n    renderAvatarOnTop: false,\n    showAvatarForEveryMessage: false,\n    position: 'left',\n    currentMessage: {\n        user: null,\n    },\n    previousMessage: {},\n    nextMessage: {},\n    containerStyle: {},\n    imageStyle: {},\n    onPressAvatar: () => { },\n    onLongPressAvatar: () => { },\n};\nAvatar.propTypes = {\n    renderAvatarOnTop: PropTypes.bool,\n    showAvatarForEveryMessage: PropTypes.bool,\n    position: PropTypes.oneOf(['left', 'right']),\n    currentMessage: PropTypes.object,\n    previousMessage: PropTypes.object,\n    nextMessage: PropTypes.object,\n    onPressAvatar: PropTypes.func,\n    onLongPressAvatar: PropTypes.func,\n    renderAvatar: PropTypes.func,\n    containerStyle: PropTypes.shape({\n        left: StylePropType,\n        right: StylePropType,\n    }),\n    imageStyle: PropTypes.shape({\n        left: StylePropType,\n        right: StylePropType,\n    }),\n};\n//# sourceMappingURL=Avatar.js.map"]},"metadata":{},"sourceType":"module"}