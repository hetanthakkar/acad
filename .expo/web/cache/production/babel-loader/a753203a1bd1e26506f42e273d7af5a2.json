{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TextInput from\"react-native-web/dist/exports/TextInput\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import color from'color';import IconButton from\"./IconButton\";import Surface from\"./Surface\";import{withTheme}from\"../core/theming\";import MaterialCommunityIcon from\"./MaterialCommunityIcon\";var Searchbar=function(_React$Component){_inherits(Searchbar,_React$Component);var _super=_createSuper(Searchbar);function Searchbar(){var _this;_classCallCheck(this,Searchbar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"handleClearPress\",function(){_this.clear();_this.props.onChangeText&&_this.props.onChangeText('');});_defineProperty(_assertThisInitialized(_this),\"root\",void 0);return _this;}_createClass(Searchbar,[{key:\"setNativeProps\",value:function setNativeProps(args){return this.root&&this.root.setNativeProps(args);}},{key:\"isFocused\",value:function isFocused(){return this.root&&this.root.isFocused();}},{key:\"clear\",value:function clear(){return this.root&&this.root.clear();}},{key:\"focus\",value:function focus(){return this.root&&this.root.focus();}},{key:\"blur\",value:function blur(){return this.root&&this.root.blur();}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,clearAccessibilityLabel=_this$props.clearAccessibilityLabel,clearIcon=_this$props.clearIcon,icon=_this$props.icon,customIconColor=_this$props.iconColor,inputStyle=_this$props.inputStyle,onIconPress=_this$props.onIconPress,placeholder=_this$props.placeholder,searchAccessibilityLabel=_this$props.searchAccessibilityLabel,style=_this$props.style,theme=_this$props.theme,value=_this$props.value,rest=_objectWithoutProperties(_this$props,[\"clearAccessibilityLabel\",\"clearIcon\",\"icon\",\"iconColor\",\"inputStyle\",\"onIconPress\",\"placeholder\",\"searchAccessibilityLabel\",\"style\",\"theme\",\"value\"]);var colors=theme.colors,roundness=theme.roundness,dark=theme.dark,fonts=theme.fonts;var textColor=colors.text;var font=fonts.regular;var iconColor=customIconColor||(dark?textColor:color(textColor).alpha(0.54).rgb().string());var rippleColor=color(textColor).alpha(0.32).rgb().string();return React.createElement(Surface,{style:[{borderRadius:roundness,elevation:4},styles.container,style]},React.createElement(IconButton,{accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\",borderless:true,rippleColor:rippleColor,onPress:onIconPress,color:iconColor,icon:icon||function(_ref){var size=_ref.size,color=_ref.color;return React.createElement(MaterialCommunityIcon,{name:\"magnify\",color:color,size:size,direction:I18nManager.isRTL?'rtl':'ltr'});},accessibilityLabel:searchAccessibilityLabel}),React.createElement(TextInput,_extends({style:[styles.input,_objectSpread({color:textColor},font),inputStyle],placeholder:placeholder||'',placeholderTextColor:colors.placeholder,selectionColor:colors.primary,underlineColorAndroid:\"transparent\",returnKeyType:\"search\",keyboardAppearance:dark?'dark':'light',accessibilityTraits:\"search\",accessibilityRole:\"search\",ref:function ref(c){_this2.root=c;},value:value},rest)),React.createElement(IconButton,{borderless:true,disabled:!value,accessibilityLabel:clearAccessibilityLabel,color:value?iconColor:'rgba(255, 255, 255, 0)',rippleColor:rippleColor,onPress:this.handleClearPress,icon:clearIcon||function(_ref2){var size=_ref2.size,color=_ref2.color;return React.createElement(MaterialCommunityIcon,{name:\"close\",color:color,size:size,direction:I18nManager.isRTL?'rtl':'ltr'});},accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\"}));}}]);return Searchbar;}(React.Component);_defineProperty(Searchbar,\"defaultProps\",{searchAccessibilityLabel:'search',clearAccessibilityLabel:'clear'});var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center'},input:{flex:1,fontSize:18,paddingLeft:8,alignSelf:'stretch',textAlign:I18nManager.isRTL?'right':'left',minWidth:0}});export default withTheme(Searchbar);","map":{"version":3,"sources":["Searchbar.tsx"],"names":["Searchbar","React","searchAccessibilityLabel","clearAccessibilityLabel","iconColor","value","fonts","textColor","colors","font","customIconColor","dark","color","rippleColor","borderRadius","elevation","styles","icon","I18nManager","placeholder","c","clearIcon","container","flexDirection","alignItems","input","flex","fontSize","paddingLeft","alignSelf","textAlign","minWidth","withTheme"],"mappings":"kgGAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,mMAUA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,UAAA,oBACA,MAAA,CAAA,OAAA,iBACA,OAAA,SAAA,uBAEA,MAAA,CAAA,qBAAA,+B,GAiFA,CAAA,S,qGAA+C,oBAAA,yEAAA,IAAA,0CAAA,IAAA,wBAAA,6CAAA,IAAA,GAAA,eAAA,+BAAA,kBAAA,CAKlB,UAAM,CAC/B,MAAA,KAAA,GACA,MAAA,KAAA,CAAA,YAAA,EAA2B,MAAA,KAAA,CAAA,YAAA,CAA3B,EAA2B,CAA3B,CAP2C,CAAA,CAAA,CAAA,eAAA,+BAAA,MAAA,CAAA,IAAA,EAAA,CAAA,CAAA,aAAA,C,4EAc3B,I,CAAe,CAC/B,MAAO,MAAA,IAAA,EAAa,KAAA,IAAA,CAAA,cAAA,CAApB,IAAoB,CAApB,CACD,C,6CAKW,CACV,MAAO,MAAA,IAAA,EAAa,KAAA,IAAA,CAApB,SAAoB,EAApB,CACD,C,qCAKO,CACN,MAAO,MAAA,IAAA,EAAa,KAAA,IAAA,CAApB,KAAoB,EAApB,CACD,C,qCAKO,CACN,MAAO,MAAA,IAAA,EAAa,KAAA,IAAA,CAApB,KAAoB,EAApB,CACD,C,mCAKM,CACL,MAAO,MAAA,IAAA,EAAa,KAAA,IAAA,CAApB,IAAoB,EAApB,CACD,C,uCAEQ,iBACP,GAAA,CAAA,WAAA,CAaI,KAbJ,KAAA,CAAM,uBAAN,CAAA,WAAA,CAAM,uBAAN,CAAM,SAAN,CAAA,WAAA,CAAM,SAAN,CAAM,IAAN,CAAA,WAAA,CAAM,IAAN,CAAM,eAAN,CAAA,WAAA,CAIEI,SAJF,CAAM,UAAN,CAAA,WAAA,CAAM,UAAN,CAAM,WAAN,CAAA,WAAA,CAAM,WAAN,CAAM,WAAN,CAAA,WAAA,CAAM,WAAN,CAAM,wBAAN,CAAA,WAAA,CAAM,wBAAN,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAWEC,KAXF,CAAA,WAAA,CAWEA,KAXF,CAAA,IAAA,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,MAAA,CAAA,WAAA,CAAA,YAAA,CAAA,aAAA,CAAA,aAAA,CAAA,0BAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CADO,GAeD,CAAA,MAfC,CAeP,KAfO,CAeD,MAfC,CAeD,SAfC,CAeP,KAfO,CAeD,SAfC,CAeD,IAfC,CAeP,KAfO,CAeD,IAfC,CAe0BC,KAf1B,CAeP,KAfO,CAe0BA,KAf1B,CAgBP,GAAMC,CAAAA,SAAS,CAAGC,MAAM,CAAxB,IAAA,CACA,GAAMC,CAAAA,IAAI,CAAGH,KAAK,CAAlB,OAAA,CACA,GAAMF,CAAAA,SAAS,CACbM,eAAe,GACdC,IAAI,CAAA,SAAA,CAAeC,KAAK,CAALA,SAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAFtB,MAEsBA,EADL,CADjB,CAGA,GAAMC,CAAAA,WAAW,CAAGD,KAAK,CAALA,SAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAApB,MAAoBA,EAApB,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,CACE,KAAK,CAAE,CACL,CAAEE,YAAY,CAAd,SAAA,CAA2BC,SAAS,CAAE,CAAtC,CADK,CAELC,MAAM,CAFD,SAAA,CAAA,KAAA,CADT,CAAA,CAOE,KAAA,CAAA,aAAA,CAAA,UAAA,CAAA,CACE,mBAAmB,CADrB,QAAA,CAEE,0BAA0B,CAF5B,QAAA,CAGE,iBAAiB,CAHnB,QAAA,CAIE,UAAU,CAJZ,IAAA,CAKE,WAAW,CALb,WAAA,CAME,OAAO,CANT,WAAA,CAOE,KAAK,CAPP,SAAA,CAQE,IAAI,CACFC,IAAI,EACH,kBAAC,CAAA,IAAD,MAAC,IAAD,CAASL,KAAT,MAASA,KAAT,OACC,CAAA,KAAA,CAAA,aAAA,CAAA,qBAAA,CAAA,CACE,IAAI,CADN,SAAA,CAEE,KAAK,CAFP,KAAA,CAGE,IAAI,CAHN,IAAA,CAIE,SAAS,CAAEM,WAAW,CAAXA,KAAAA,CAAAA,KAAAA,CAA4B,KAJzC,CAAA,CADD,EAVL,CAmBE,kBAAkB,CAAEhB,wBAnBtB,CAAA,CAPF,CA4BE,KAAA,CAAA,aAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CAACc,MAAM,CAAP,KAAA,CAAA,aAAA,CAAA,CAAiBJ,KAAK,CAAEL,SAAxB,CAAA,CAAA,IAAA,CAAA,CADT,UACS,CADT,CAEE,WAAW,CAAEY,WAAW,EAF1B,EAAA,CAGE,oBAAoB,CAAEX,MAAM,CAH9B,WAAA,CAIE,cAAc,CAAEA,MAAM,CAJxB,OAAA,CAKE,qBAAqB,CALvB,aAAA,CAME,aAAa,CANf,QAAA,CAOE,kBAAkB,CAAEG,IAAI,CAAA,MAAA,CAP1B,OAAA,CAQE,mBAAmB,CARrB,QAAA,CASE,iBAAiB,CATnB,QAAA,CAUE,GAAG,CAAGS,aAAAA,CAAD,CAAO,CACV,MAAA,CAAA,IAAA,CAAA,CAAA,CAXJ,CAAA,CAaE,KAAK,CAAEf,KAbT,CAAA,CA5BF,IA4BE,CAAA,CA5BF,CA4CE,KAAA,CAAA,aAAA,CAAA,UAAA,CAAA,CACE,UAAU,CADZ,IAAA,CAEE,QAAQ,CAAE,CAFZ,KAAA,CAGE,kBAAkB,CAHpB,uBAAA,CAIE,KAAK,CAAEA,KAAK,CAAA,SAAA,CAJd,wBAAA,CAKE,WAAW,CALb,WAAA,CAME,OAAO,CAAE,KANX,gBAAA,CAOE,IAAI,CACFgB,SAAS,EACR,mBAAC,CAAA,IAAD,OAAC,IAAD,CAAST,KAAT,OAASA,KAAT,OACC,CAAA,KAAA,CAAA,aAAA,CAAA,qBAAA,CAAA,CACE,IAAI,CADN,OAAA,CAEE,KAAK,CAFP,KAAA,CAGE,IAAI,CAHN,IAAA,CAIE,SAAS,CAAEM,WAAW,CAAXA,KAAAA,CAAAA,KAAAA,CAA4B,KAJzC,CAAA,CADD,EATL,CAkBE,mBAAmB,CAlBrB,QAAA,CAmBE,0BAA0B,CAnB5B,QAAA,CAoBE,iBAAiB,CAAC,QApBpB,CAAA,CA5CF,CADF,CAqED,C,uBA1IqBjB,KAAK,CAA7B,S,kBAAMD,S,gBACkB,CACpBE,wBAAwB,CADJ,QAAA,CAEpBC,uBAAuB,CAAE,OAFL,C,EA4IxB,GAAMa,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BM,SAAS,CAAE,CACTC,aAAa,CADJ,KAAA,CAETC,UAAU,CAAE,QAFH,CADoB,CAK/BC,KAAK,CAAE,CACLC,IAAI,CADC,CAAA,CAELC,QAAQ,CAFH,EAAA,CAGLC,WAAW,CAHN,CAAA,CAILC,SAAS,CAJJ,SAAA,CAKLC,SAAS,CAAEZ,WAAW,CAAXA,KAAAA,CAAAA,OAAAA,CALN,MAAA,CAMLa,QAAQ,CAAE,CANL,CALwB,CAAlB,CAAf,CAeA,cAAeC,CAAAA,SAAS,CAAxB,SAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  TextInput,\n  I18nManager,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport IconButton from './IconButton';\nimport Surface from './Surface';\nimport { withTheme } from '../core/theming';\nimport type { IconSource } from './Icon';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\n\ntype Props = React.ComponentPropsWithRef<typeof TextInput> & {\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  clearAccessibilityLabel?: string;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  searchAccessibilityLabel?: string;\n  /**\n   * Hint text shown when the input is empty.\n   */\n  placeholder?: string;\n  /**\n   * The value of the text input.\n   */\n  value: string;\n  /**\n   * Icon name for the left icon button (see `onIconPress`).\n   */\n  icon?: IconSource;\n  /**\n   * Callback that is called when the text input's text changes.\n   */\n  onChangeText?: (query: string) => void;\n  /**\n   * Callback to execute if we want the left icon to act as button.\n   */\n  onIconPress?: () => void;\n  /**\n   * Set style of the TextInput component inside the searchbar\n   */\n  inputStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Custom color for icon, default will be derived from theme\n   */\n  iconColor?: string;\n  /**\n   * Custom icon for clear button, default will be icon close\n   */\n  clearIcon?: IconSource;\n};\n\n/**\n * Searchbar is a simple input box where users can type search queries.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/searchbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Searchbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [searchQuery, setSearchQuery] = React.useState('');\n *\n *   const onChangeSearch = query => setSearchQuery(query);\n *\n *   return (\n *     <Searchbar\n *       placeholder=\"Search\"\n *       onChangeText={onChangeSearch}\n *       value={searchQuery}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n\n * ```\n */\nclass Searchbar extends React.Component<Props> {\n  static defaultProps = {\n    searchAccessibilityLabel: 'search',\n    clearAccessibilityLabel: 'clear',\n  };\n  private handleClearPress = () => {\n    this.clear();\n    this.props.onChangeText && this.props.onChangeText('');\n  };\n\n  private root: TextInput | undefined | null;\n\n  /**\n   * @internal\n   */ setNativeProps(args: Object) {\n    return this.root && this.root.setNativeProps(args);\n  }\n\n  /**\n   * Returns `true` if the input is currently focused, `false` otherwise.\n   */\n  isFocused() {\n    return this.root && this.root.isFocused();\n  }\n\n  /**\n   * Removes all text from the TextInput.\n   */\n  clear() {\n    return this.root && this.root.clear();\n  }\n\n  /**\n   * Focuses the input.\n   */\n  focus() {\n    return this.root && this.root.focus();\n  }\n\n  /**\n   * Removes focus from the input.\n   */\n  blur() {\n    return this.root && this.root.blur();\n  }\n\n  render() {\n    const {\n      clearAccessibilityLabel,\n      clearIcon,\n      icon,\n      iconColor: customIconColor,\n      inputStyle,\n      onIconPress,\n      placeholder,\n      searchAccessibilityLabel,\n      style,\n      theme,\n      value,\n      ...rest\n    } = this.props;\n    const { colors, roundness, dark, fonts } = theme;\n    const textColor = colors.text;\n    const font = fonts.regular;\n    const iconColor =\n      customIconColor ||\n      (dark ? textColor : color(textColor).alpha(0.54).rgb().string());\n    const rippleColor = color(textColor).alpha(0.32).rgb().string();\n\n    return (\n      <Surface\n        style={[\n          { borderRadius: roundness, elevation: 4 },\n          styles.container,\n          style,\n        ]}\n      >\n        <IconButton\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          borderless\n          rippleColor={rippleColor}\n          onPress={onIconPress}\n          color={iconColor}\n          icon={\n            icon ||\n            (({ size, color }) => (\n              <MaterialCommunityIcon\n                name=\"magnify\"\n                color={color}\n                size={size}\n                direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n              />\n            ))\n          }\n          accessibilityLabel={searchAccessibilityLabel}\n        />\n        <TextInput\n          style={[styles.input, { color: textColor, ...font }, inputStyle]}\n          placeholder={placeholder || ''}\n          placeholderTextColor={colors.placeholder}\n          selectionColor={colors.primary}\n          underlineColorAndroid=\"transparent\"\n          returnKeyType=\"search\"\n          keyboardAppearance={dark ? 'dark' : 'light'}\n          accessibilityTraits=\"search\"\n          accessibilityRole=\"search\"\n          ref={(c) => {\n            this.root = c;\n          }}\n          value={value}\n          {...rest}\n        />\n        <IconButton\n          borderless\n          disabled={!value}\n          accessibilityLabel={clearAccessibilityLabel}\n          color={value ? iconColor : 'rgba(255, 255, 255, 0)'}\n          rippleColor={rippleColor}\n          onPress={this.handleClearPress}\n          icon={\n            clearIcon ||\n            (({ size, color }) => (\n              <MaterialCommunityIcon\n                name=\"close\"\n                color={color}\n                size={size}\n                direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n              />\n            ))\n          }\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n        />\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    minWidth: 0,\n  },\n});\n\nexport default withTheme(Searchbar);\n"]},"metadata":{},"sourceType":"module"}