{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.Content=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName='src/basic/Content.js';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _nativeBaseShoutemTheme=require('native-base-shoutem-theme');var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactNative=require(\"react-native-web/dist/index\");var _reactNativeKeyboardAwareScrollView=require('@codler/react-native-keyboard-aware-scroll-view');var _platform=require(\"../theme/variables/platform\");var _platform2=_interopRequireDefault(_platform);var _mapPropsToStyleNames=require(\"../utils/mapPropsToStyleNames\");var _mapPropsToStyleNames2=_interopRequireDefault(_mapPropsToStyleNames);var _getStyle=require(\"../utils/getStyle\");var _getStyle2=_interopRequireDefault(_getStyle);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Content=function(_Component){_inherits(Content,_Component);function Content(){_classCallCheck(this,Content);return _possibleConstructorReturn(this,(Content.__proto__||Object.getPrototypeOf(Content)).apply(this,arguments));}_createClass(Content,[{key:'render',value:function render(){var _this2=this;var _props=this.props,children=_props.children,contentContainerStyle=_props.contentContainerStyle,disableKBDismissScroll=_props.disableKBDismissScroll,keyboardShouldPersistTaps=_props.keyboardShouldPersistTaps,padder=_props.padder,style=_props.style;var containerStyle={flex:1,backgroundColor:(0,_getStyle2.default)(style).backgroundColor};var variables=this.context.theme?this.context.theme['@@shoutem.theme/themeStyle'].variables:_platform2.default;return _react2.default.createElement(_reactNative.SafeAreaView,{style:containerStyle,__source:{fileName:_jsxFileName,lineNumber:36}},_react2.default.createElement(_reactNativeKeyboardAwareScrollView.KeyboardAwareScrollView,_extends({automaticallyAdjustContentInsets:false,resetScrollToCoords:disableKBDismissScroll?null:{x:0,y:0},keyboardShouldPersistTaps:keyboardShouldPersistTaps||'handled',ref:function ref(c){_this2._scrollview=c;_this2._root=c;}},this.props,{contentContainerStyle:[{padding:padder?variables.contentPadding:undefined},contentContainerStyle],__source:{fileName:_jsxFileName,lineNumber:37}}),children));}}]);return Content;}(_react.Component);Content.contextTypes={theme:_propTypes2.default.object};Content.propTypes={disableKBDismissScroll:_propTypes2.default.bool,keyboardShouldPersistTaps:_propTypes2.default.string,padder:_propTypes2.default.bool,style:_propTypes2.default.oneOfType([_propTypes2.default.object,_propTypes2.default.number,_propTypes2.default.array])};var StyledContent=(0,_nativeBaseShoutemTheme.connectStyle)('NativeBase.Content',{},_mapPropsToStyleNames2.default)(Content);exports.Content=StyledContent;","map":{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","Component","contextTypes","theme","PropTypes","children","contentContainerStyle","disableKBDismissScroll","keyboardShouldPersistTaps","padder","style","containerStyle","flex","backgroundColor","variables","variable","x","y","padding","StyledContent","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import { connectStyle } from 'native-base-shoutem-theme';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { SafeAreaView } from 'react-native';\nimport { KeyboardAwareScrollView } from '@codler/react-native-keyboard-aware-scroll-view';\n\nimport variable from '../theme/variables/platform';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport getStyle from '../utils/getStyle';\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  render() {\n    const {\n      children,\n      contentContainerStyle,\n      disableKBDismissScroll,\n      keyboardShouldPersistTaps,\n      padder,\n      style\n    } = this.props;\n\n    const containerStyle = {\n      flex: 1,\n      backgroundColor: getStyle(style).backgroundColor\n    };\n\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return (\n      <SafeAreaView style={containerStyle}>\n        <KeyboardAwareScrollView\n          automaticallyAdjustContentInsets={false}\n          resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\n          keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\n          ref={c => {\n            this._scrollview = c;\n            this._root = c;\n          }}\n          {...this.props}\n          contentContainerStyle={[\n            { padding: padder ? variables.contentPadding : undefined },\n            contentContainerStyle\n          ]}\n        >\n          {children}\n        </KeyboardAwareScrollView>\n      </SafeAreaView>\n    );\n  }\n}\n\nContent.propTypes = {\n  disableKBDismissScroll: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string,\n  padder: PropTypes.bool,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledContent = connectStyle(\n  'NativeBase.Content',\n  {},\n  mapPropsToStyleNames\n)(Content);\n\nexport { StyledContent as Content };\n"]},"metadata":{},"sourceType":"script"}