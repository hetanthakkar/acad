{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{withTheme}from\"../core/theming\";var DURATION=2400;var ActivityIndicator=function(_React$Component){_inherits(ActivityIndicator,_React$Component);var _super=_createSuper(ActivityIndicator);function ActivityIndicator(){var _this;_classCallCheck(this,ActivityIndicator);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"state\",{timer:new Animated.Value(0),fade:new Animated.Value(!_this.props.animating&&_this.props.hidesWhenStopped?0:1)});_defineProperty(_assertThisInitialized(_this),\"rotation\",undefined);_defineProperty(_assertThisInitialized(_this),\"startRotation\",function(){var _this$state=_this.state,fade=_this$state.fade,timer=_this$state.timer;var scale=_this.props.theme.animation.scale;Animated.timing(fade,{duration:200*scale,toValue:1,isInteraction:false,useNativeDriver:true}).start();if(_this.rotation){timer.setValue(0);Animated.loop(_this.rotation).start();}});_defineProperty(_assertThisInitialized(_this),\"stopRotation\",function(){if(_this.rotation){_this.rotation.stop();}});return _this;}_createClass(ActivityIndicator,[{key:\"componentDidMount\",value:function componentDidMount(){var animating=this.props.animating;var timer=this.state.timer;this.rotation=Animated.timing(timer,{duration:DURATION,easing:Easing.linear,useNativeDriver:Platform.OS!=='web',toValue:1,isInteraction:false});if(animating){this.startRotation();}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){var _this$props2=this.props,animating=_this$props2.animating,hidesWhenStopped=_this$props2.hidesWhenStopped,scale=_this$props2.theme.animation.scale;var fade=this.state.fade;if(animating!==prevProps.animating){if(animating){this.startRotation();}else if(hidesWhenStopped){Animated.timing(fade,{duration:200*scale,toValue:0,useNativeDriver:true,isInteraction:false}).start(this.stopRotation.bind(this));}else{this.stopRotation();}}}},{key:\"render\",value:function render(){var _this$state2=this.state,fade=_this$state2.fade,timer=_this$state2.timer;var _this$props=this.props,animating=_this$props.animating,indicatorColor=_this$props.color,hidesWhenStopped=_this$props.hidesWhenStopped,indicatorSize=_this$props.size,style=_this$props.style,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,[\"animating\",\"color\",\"hidesWhenStopped\",\"size\",\"style\",\"theme\"]);var color=indicatorColor||theme.colors.primary;var size=typeof indicatorSize==='string'?indicatorSize==='small'?24:48:indicatorSize?indicatorSize:24;var frames=60*DURATION/1000;var easing=Easing.bezier(0.4,0.0,0.7,1.0);var containerStyle={width:size,height:size/2,overflow:'hidden'};return React.createElement(View,_extends({style:[styles.container,style]},rest),React.createElement(Animated.View,{style:[{width:size,height:size,opacity:fade}],collapsable:false},[0,1].map(function(index){var inputRange=Array.from(new Array(frames),function(_,frameIndex){return frameIndex/(frames-1);});var outputRange=Array.from(new Array(frames),function(_,frameIndex){var progress=2*frameIndex/(frames-1);var rotation=index?+(360-15):-(180-15);if(progress>1.0){progress=2.0-progress;}var direction=index?-1:+1;return\"\".concat(direction*(180-30)*easing(progress)+rotation,\"deg\");});var layerStyle={width:size,height:size,transform:[{rotate:timer.interpolate({inputRange:[0,1],outputRange:[\"\".concat(0+30+15,\"deg\"),\"\".concat(2*360+30+15,\"deg\")]})}]};var viewportStyle={width:size,height:size,transform:[{translateY:index?-size/2:0},{rotate:timer.interpolate({inputRange:inputRange,outputRange:outputRange})}]};var offsetStyle=index?{top:size/2}:null;var lineStyle={width:size,height:size,borderColor:color,borderWidth:size/10,borderRadius:size/2};return React.createElement(Animated.View,{key:index,style:[styles.layer]},React.createElement(Animated.View,{style:layerStyle},React.createElement(Animated.View,{style:[containerStyle,offsetStyle],collapsable:false},React.createElement(Animated.View,{style:viewportStyle},React.createElement(Animated.View,{style:containerStyle,collapsable:false},React.createElement(Animated.View,{style:lineStyle}))))));})));}}]);return ActivityIndicator;}(React.Component);_defineProperty(ActivityIndicator,\"defaultProps\",{animating:true,size:'small',hidesWhenStopped:true});var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'},layer:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{justifyContent:'center',alignItems:'center'})});export default withTheme(ActivityIndicator);","map":{"version":3,"sources":["ActivityIndicator.tsx"],"names":["DURATION","ActivityIndicator","React","animating","size","hidesWhenStopped","timer","Animated","fade","duration","easing","Easing","useNativeDriver","Platform","toValue","isInteraction","theme","animation","scale","prevProps","color","indicatorColor","indicatorSize","frames","containerStyle","width","height","overflow","styles","opacity","index","inputRange","Array","frameIndex","outputRange","progress","rotation","direction","layerStyle","transform","rotate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","container","justifyContent","alignItems","layer","StyleSheet","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { withTheme } from '../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype State = {\n  timer: Animated.Value;\n  fade: Animated.Value;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass ActivityIndicator extends React.Component<Props, State> {\n  static defaultProps: Partial<Props> = {\n    animating: true,\n    size: 'small',\n    hidesWhenStopped: true,\n  };\n\n  state = {\n    timer: new Animated.Value(0),\n    fade: new Animated.Value(\n      !this.props.animating && this.props.hidesWhenStopped ? 0 : 1\n    ),\n  };\n\n  rotation: Animated.CompositeAnimation | undefined = undefined;\n\n  componentDidMount() {\n    const { animating } = this.props;\n    const { timer } = this.state;\n\n    // Circular animation in loop\n    this.rotation = Animated.timing(timer, {\n      duration: DURATION,\n      easing: Easing.linear,\n      // Animated.loop does not work if useNativeDriver is true on web\n      useNativeDriver: Platform.OS !== 'web',\n      toValue: 1,\n      isInteraction: false,\n    });\n\n    if (animating) {\n      this.startRotation();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {\n      animating,\n      hidesWhenStopped,\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n    const { fade } = this.state;\n\n    if (animating !== prevProps.animating) {\n      if (animating) {\n        this.startRotation();\n      } else if (hidesWhenStopped) {\n        // Hide indicator first and then stop rotation\n        Animated.timing(fade, {\n          duration: 200 * scale,\n          toValue: 0,\n          useNativeDriver: true,\n          isInteraction: false,\n        }).start(this.stopRotation.bind(this));\n      } else {\n        this.stopRotation();\n      }\n    }\n  }\n\n  private startRotation = () => {\n    const { fade, timer } = this.state;\n    const { scale } = this.props.theme.animation;\n\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (this.rotation) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(this.rotation).start();\n    }\n  };\n\n  private stopRotation = () => {\n    if (this.rotation) {\n      this.rotation.stop();\n    }\n  };\n\n  render() {\n    const { fade, timer } = this.state;\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      animating,\n      color: indicatorColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      hidesWhenStopped,\n      size: indicatorSize,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const color = indicatorColor || theme.colors.primary;\n    const size =\n      typeof indicatorSize === 'string'\n        ? indicatorSize === 'small'\n          ? 24\n          : 48\n        : indicatorSize\n        ? indicatorSize\n        : 24;\n\n    const frames = (60 * DURATION) / 1000;\n    const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n    const containerStyle = {\n      width: size,\n      height: size / 2,\n      overflow: 'hidden',\n    };\n\n    return (\n      <View style={[styles.container, style]} {...rest}>\n        <Animated.View\n          style={[{ width: size, height: size, opacity: fade }]}\n          collapsable={false}\n        >\n          {[0, 1].map((index) => {\n            // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n            const inputRange = Array.from(\n              new Array(frames),\n              (_, frameIndex) => frameIndex / (frames - 1)\n            );\n            const outputRange = Array.from(\n              new Array(frames),\n              (_, frameIndex) => {\n                let progress = (2 * frameIndex) / (frames - 1);\n                const rotation = index ? +(360 - 15) : -(180 - 15);\n\n                if (progress > 1.0) {\n                  progress = 2.0 - progress;\n                }\n\n                const direction = index ? -1 : +1;\n\n                return `${\n                  direction * (180 - 30) * easing(progress) + rotation\n                }deg`;\n              }\n            );\n\n            const layerStyle = {\n              width: size,\n              height: size,\n              transform: [\n                {\n                  rotate: timer.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [\n                      `${0 + 30 + 15}deg`,\n                      `${2 * 360 + 30 + 15}deg`,\n                    ],\n                  }),\n                },\n              ],\n            };\n\n            const viewportStyle = {\n              width: size,\n              height: size,\n              transform: [\n                {\n                  translateY: index ? -size / 2 : 0,\n                },\n                {\n                  rotate: timer.interpolate({ inputRange, outputRange }),\n                },\n              ],\n            };\n\n            const offsetStyle = index ? { top: size / 2 } : null;\n\n            const lineStyle = {\n              width: size,\n              height: size,\n              borderColor: color,\n              borderWidth: size / 10,\n              borderRadius: size / 2,\n            };\n\n            return (\n              <Animated.View key={index} style={[styles.layer]}>\n                <Animated.View style={layerStyle}>\n                  <Animated.View\n                    style={[containerStyle, offsetStyle]}\n                    collapsable={false}\n                  >\n                    <Animated.View style={viewportStyle}>\n                      <Animated.View style={containerStyle} collapsable={false}>\n                        <Animated.View style={lineStyle} />\n                      </Animated.View>\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            );\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(ActivityIndicator);\n"]},"metadata":{},"sourceType":"module"}