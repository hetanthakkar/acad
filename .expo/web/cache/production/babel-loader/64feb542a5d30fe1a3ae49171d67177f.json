{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Icon from\"../Icon\";var ListIcon=function(_React$Component){_inherits(ListIcon,_React$Component);var _super=_createSuper(ListIcon);function ListIcon(){_classCallCheck(this,ListIcon);return _super.apply(this,arguments);}_createClass(ListIcon,[{key:\"render\",value:function render(){var _this$props=this.props,icon=_this$props.icon,iconColor=_this$props.color,style=_this$props.style;return React.createElement(View,{style:[styles.item,style],pointerEvents:\"box-none\"},React.createElement(Icon,{source:icon,size:24,color:iconColor}));}}]);return ListIcon;}(React.Component);export{ListIcon as default};_defineProperty(ListIcon,\"displayName\",'List.Icon');var styles=StyleSheet.create({item:{margin:8,height:40,width:40,alignItems:'center',justifyContent:'center'}});","map":{"version":3,"sources":["ListIcon.tsx"],"names":["ListIcon","React","color","style","styles","iconColor","item","margin","height","width","alignItems","justifyContent"],"mappings":"srCAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,sHAEA,MAAA,CAAA,IAAA,e,GAqCe,CAAA,Q,uPAGJ,iBACmC,KAA1C,KADO,CACD,IADC,aACD,IADC,CACD,SADC,aACOE,KADP,CACyBC,KADzB,aACyBA,KADzB,CAGP,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAE,CAACC,MAAM,CAAP,IAAA,CAAb,KAAa,CAAb,CAAmC,aAAa,CAAC,UAAjD,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,MAAM,CAAZ,IAAA,CAAoB,IAAI,CAAxB,EAAA,CAA8B,KAAK,CAAEC,SAArC,CAAA,CADF,CADF,CAKD,C,sBAXmCJ,KAAK,CAA5B,S,SAAA,Q,6BAAMD,Q,eACE,W,EAavB,GAAMI,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BE,IAAI,CAAE,CACJC,MAAM,CADF,CAAA,CAEJC,MAAM,CAFF,EAAA,CAGJC,KAAK,CAHD,EAAA,CAIJC,UAAU,CAJN,QAAA,CAKJC,cAAc,CAAE,QALZ,CADyB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Icon, { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show an icon in a list item.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/list-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Icon color={Colors.blue500} icon=\"folder\" />\n *   <List.Icon color={Colors.blue500} icon=\"equal\" />\n *   <List.Icon color={Colors.blue500} icon=\"calendar\" />\n * );\n *\n * export default MyComponent;\n * ```\n */\nexport default class ListIcon extends React.Component<Props> {\n  static displayName = 'List.Icon';\n\n  render() {\n    const { icon, color: iconColor, style } = this.props;\n\n    return (\n      <View style={[styles.item, style]} pointerEvents=\"box-none\">\n        <Icon source={icon} size={24} color={iconColor} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  item: {\n    margin: 8,\n    height: 40,\n    width: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}