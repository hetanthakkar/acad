{"ast":null,"code":"import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{TypingAnimation}from'react-native-typing-animation';import{useUpdateLayoutEffect}from\"./hooks/useUpdateLayoutEffect\";import Color from\"./Color\";var TypingIndicator=function TypingIndicator(_ref){var isTyping=_ref.isTyping;var _React$useMemo=React.useMemo(function(){return{yCoords:new Animated.Value(200),heightScale:new Animated.Value(0),marginScale:new Animated.Value(0)};},[]),yCoords=_React$useMemo.yCoords,heightScale=_React$useMemo.heightScale,marginScale=_React$useMemo.marginScale;useUpdateLayoutEffect(function(){if(isTyping){slideIn();}else{slideOut();}},[isTyping]);var slideIn=function slideIn(){Animated.parallel([Animated.spring(yCoords,{toValue:0,useNativeDriver:false}),Animated.timing(heightScale,{toValue:35,duration:250,useNativeDriver:false}),Animated.timing(marginScale,{toValue:8,duration:250,useNativeDriver:false})]).start();};var slideOut=function slideOut(){Animated.parallel([Animated.spring(yCoords,{toValue:200,useNativeDriver:false}),Animated.timing(heightScale,{toValue:0,duration:250,useNativeDriver:false}),Animated.timing(marginScale,{toValue:0,duration:250,useNativeDriver:false})]).start();};return React.createElement(Animated.View,{style:[styles.container,{transform:[{translateY:yCoords}],height:heightScale,marginBottom:marginScale}]},isTyping?React.createElement(TypingAnimation,{style:{marginLeft:6,marginTop:7.2},dotRadius:4,dotMargin:5.5,dotColor:'rgba(0, 0, 0, 0.38)'}):null);};var styles=StyleSheet.create({container:{marginLeft:8,width:45,borderRadius:15,backgroundColor:Color.leftBubbleBackground}});export default TypingIndicator;","map":{"version":3,"sources":["../src/TypingIndicator.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport { TypingAnimation } from 'react-native-typing-animation';\nimport { useUpdateLayoutEffect } from './hooks/useUpdateLayoutEffect';\nimport Color from './Color';\nconst TypingIndicator = ({ isTyping }) => {\n    const { yCoords, heightScale, marginScale } = React.useMemo(() => ({\n        yCoords: new Animated.Value(200),\n        heightScale: new Animated.Value(0),\n        marginScale: new Animated.Value(0),\n    }), []);\n    // on isTyping fire side effect\n    useUpdateLayoutEffect(() => {\n        if (isTyping) {\n            slideIn();\n        }\n        else {\n            slideOut();\n        }\n    }, [isTyping]);\n    // side effect\n    const slideIn = () => {\n        Animated.parallel([\n            Animated.spring(yCoords, {\n                toValue: 0,\n                useNativeDriver: false,\n            }),\n            Animated.timing(heightScale, {\n                toValue: 35,\n                duration: 250,\n                useNativeDriver: false,\n            }),\n            Animated.timing(marginScale, {\n                toValue: 8,\n                duration: 250,\n                useNativeDriver: false,\n            }),\n        ]).start();\n    };\n    // side effect\n    const slideOut = () => {\n        Animated.parallel([\n            Animated.spring(yCoords, {\n                toValue: 200,\n                useNativeDriver: false,\n            }),\n            Animated.timing(heightScale, {\n                toValue: 0,\n                duration: 250,\n                useNativeDriver: false,\n            }),\n            Animated.timing(marginScale, {\n                toValue: 0,\n                duration: 250,\n                useNativeDriver: false,\n            }),\n        ]).start();\n    };\n    return (<Animated.View style={[\n        styles.container,\n        {\n            transform: [\n                {\n                    translateY: yCoords,\n                },\n            ],\n            height: heightScale,\n            marginBottom: marginScale,\n        },\n    ]}>\n      {isTyping ? (<TypingAnimation style={{ marginLeft: 6, marginTop: 7.2 }} dotRadius={4} dotMargin={5.5} dotColor={'rgba(0, 0, 0, 0.38)'}/>) : null}\n    </Animated.View>);\n};\nconst styles = StyleSheet.create({\n    container: {\n        marginLeft: 8,\n        width: 45,\n        borderRadius: 15,\n        backgroundColor: Color.leftBubbleBackground,\n    },\n});\nexport default TypingIndicator;\n//# sourceMappingURL=TypingIndicator.js.map"]},"metadata":{},"sourceType":"module"}