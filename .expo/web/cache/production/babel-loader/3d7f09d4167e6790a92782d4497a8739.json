{"ast":null,"code":"import*as React from'react';var context=React.createContext({showActionSheetWithOptions:function showActionSheetWithOptions(options,callback){}});export function useActionSheet(){return React.useContext(context);}var Provider=context.Provider,Consumer=context.Consumer;export{Provider,Consumer};","map":{"version":3,"sources":["context.ts"],"names":["context","React","showActionSheetWithOptions","Provider","Consumer"],"mappings":"AAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAGA,GAAMA,CAAAA,OAAO,CAAGC,KAAK,CAALA,aAAAA,CAAsC,CACpDC,0BAA0B,CAAE,QAAA,CAAA,0BAAA,CAAA,OAAA,CAAA,QAAA,CAAgE,CAD9F,CAAsD,CAAtCD,CAAhB,CAIA,MAAO,SAAA,CAAA,cAAA,EAA0B,CAC/B,MAAOA,CAAAA,KAAK,CAALA,UAAAA,CAAP,OAAOA,CAAP,CAGME,IAAAA,CAAAA,Q,CAAuBH,O,CAAvBG,QAAAA,CAAUC,Q,CAAaJ,O,CAAbI,QAAVD,CAER,OAAA,QAAA,CAAA,QAAA","sourcesContent":["import * as React from 'react';\nimport { ActionSheetOptions, ActionSheetProps } from './types';\n\nconst context = React.createContext<ActionSheetProps>({\n  showActionSheetWithOptions: (options: ActionSheetOptions, callback: (i: number) => void) => {},\n});\n\nexport function useActionSheet() {\n  return React.useContext(context);\n}\n\nconst { Provider, Consumer } = context;\n\nexport { Provider, Consumer };\n"]},"metadata":{},"sourceType":"module"}