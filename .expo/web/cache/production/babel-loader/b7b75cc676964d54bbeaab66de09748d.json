{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from\"react\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Image from\"react-native-web/dist/exports/Image\";import View from\"react-native-web/dist/exports/View\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import*as Font from\"expo-font\";import{Block,Text}from\"./components\";import Mycard from\"./mycard\";import*as theme from\"./theme\";import*as mocks from\"./mocks\";import{Container,Header,Left,Body,Right,Button,Icon,Title}from\"native-base\";var screenHeight=Math.round(Dimensions.get(\"window\").height)/100;var screenWidth=Math.round(Dimensions.get(\"window\").width)/100;var App=function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={fontsLoaded:false};return _this;}_createClass(App,[{key:\"loadFonts\",value:function loadFonts(){return Font.loadAsync({\"Montserrat-Regular\":require(\"./assets/fonts/Montserrat-Regular.ttf\"),\"Montserrat-Bold\":require(\"./assets/fonts/Montserrat-Bold.ttf\"),\"Montserrat-SemiBold\":require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\"Montserrat-Medium\":require(\"./assets/fonts/Montserrat-Medium.ttf\"),\"Montserrat-Light\":require(\"./assets/fonts/Montserrat-Light.ttf\")});}},{key:\"componentDidMount\",value:function componentDidMount(){return _regeneratorRuntime.async(function componentDidMount$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(this.loadFonts());case 2:this.setState({fontsLoaded:true});case 3:case\"end\":return _context.stop();}}},null,this,null,Promise);}},{key:\"renderRequest\",value:function renderRequest(request){return React.createElement(Block,{row:true,card:true,shadow:true,color:\"#dfe6e9\",style:styles.request,flex:10},React.createElement(TouchableOpacity,null,React.createElement(Mycard,{photo:\"https://i.guim.co.uk/img/media/8648ba03d8fcd3da0e0c832d9def14a9a2a79cf9/0_133_3000_1800/master/3000.jpg?width=1200&height=1200&quality=85&auto=format&fit=crop&s=34334da6427189be695501fb2c58b7b1\"})),React.createElement(Block,{flex:0.5,column:true,middle:true,style:{marginLeft:-screenWidth*1.2}},React.createElement(Text,{h3:true,style:{paddingVertical:8}},request.name),React.createElement(Text,{caption:true,semibold:true},\"Hey There Welcome To My App\")),React.createElement(Text,{caption:true,semibold:true,style:{marginTop:screenHeight*4}},\"19:45\"));}},{key:\"renderRequests\",value:function renderRequests(){var _this2=this;var requests=this.props.requests;return React.createElement(Block,{flex:1,column:true,color:\"gray2\",style:styles.requests},React.createElement(Container,null,React.createElement(Header,{style:{backgroundColor:\"#f5f6fa\"}},React.createElement(View,{style:{flex:0.3}},React.createElement(Button,{transparent:true,large:true},React.createElement(Icon,{name:\"arrow-back\",style:{color:\"#fd79a8\",marginLeft:screenWidth*-2}}))),React.createElement(View,{style:{flex:1}},React.createElement(TextInput,{mode:\"flat\",placeholder:\"   Search or start a new chat\",style:{borderRadius:20,width:screenHeight*75,backgroundColor:\"white\",borderWidth:1,marginLeft:screenWidth*-1.5,height:screenHeight*10}})),React.createElement(Right,null))),React.createElement(Text,null,\"\\n\"),React.createElement(ScrollView,{showsVerticalScrollIndicator:false},requests.map(function(request){return React.createElement(TouchableOpacity,{activeOpacity:0.8,key:\"request-\"+request.id},_this2.renderRequest(request));})));}},{key:\"render\",value:function render(){if(!this.state.fontsLoaded){return React.createElement(Block,{center:true,middle:true},React.createElement(Image,{style:{width:140,height:140},source:require(\"./assets/profile.jpeg\")}));}return React.createElement(SafeAreaView,{style:styles.safe},React.createElement(ScrollView,{style:{backgroundColor:\"#fd79a8\"}},this.renderRequests()));}}]);return App;}(React.Component);App.defaultProps={requests:mocks.requests};export default App;var styles=StyleSheet.create({safe:{flex:1,backgroundColor:\"#fd79a8\"},requests:{marginTop:-55,paddingTop:55+20,paddingHorizontal:15,zIndex:-1},requestsHeader:{paddingHorizontal:20,paddingBottom:15},request:{padding:20,width:screenWidth*50,marginBottom:15},requestStatus:{marginRight:20,overflow:\"hidden\",height:90}});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/chats.js"],"names":["React","Font","Block","Text","Mycard","theme","mocks","Container","Header","Left","Body","Right","Button","Icon","Title","screenHeight","Math","round","Dimensions","get","height","screenWidth","width","App","state","fontsLoaded","loadAsync","require","loadFonts","setState","request","styles","marginLeft","paddingVertical","name","marginTop","requests","props","backgroundColor","flex","color","borderRadius","borderWidth","map","id","renderRequest","safe","renderRequests","Component","defaultProps","StyleSheet","create","paddingTop","paddingHorizontal","zIndex","requestsHeader","paddingBottom","padding","marginBottom","requestStatus","marginRight","overflow"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Image,\r\n  View,\r\n  Dimensions,\r\n  TextInput,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport * as Font from \"expo-font\";\r\nimport { Block, Text } from \"./components\";\r\nimport Mycard from \"./mycard\";\r\nimport * as theme from \"./theme\";\r\nimport * as mocks from \"./mocks\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Left,\r\n  Body,\r\n  Right,\r\n  Button,\r\n  Icon,\r\n  Title,\r\n} from \"native-base\";\r\nvar screenHeight = Math.round(Dimensions.get(\"window\").height) / 100;\r\nvar screenWidth = Math.round(Dimensions.get(\"window\").width) / 100;\r\nclass App extends React.Component {\r\n  state = {\r\n    fontsLoaded: false,\r\n  };\r\n  loadFonts() {\r\n    return Font.loadAsync({\r\n      \"Montserrat-Regular\": require(\"./assets/fonts/Montserrat-Regular.ttf\"),\r\n      \"Montserrat-Bold\": require(\"./assets/fonts/Montserrat-Bold.ttf\"),\r\n      \"Montserrat-SemiBold\": require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\r\n      \"Montserrat-Medium\": require(\"./assets/fonts/Montserrat-Medium.ttf\"),\r\n      \"Montserrat-Light\": require(\"./assets/fonts/Montserrat-Light.ttf\"),\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.loadFonts();\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  renderRequest(request) {\r\n    return (\r\n      <Block row card shadow color=\"#dfe6e9\" style={styles.request} flex={10}>\r\n        <TouchableOpacity>\r\n          <Mycard photo=\"https://i.guim.co.uk/img/media/8648ba03d8fcd3da0e0c832d9def14a9a2a79cf9/0_133_3000_1800/master/3000.jpg?width=1200&height=1200&quality=85&auto=format&fit=crop&s=34334da6427189be695501fb2c58b7b1\" />\r\n        </TouchableOpacity>\r\n        <Block\r\n          flex={0.5}\r\n          column\r\n          middle\r\n          style={{ marginLeft: -screenWidth * 1.2 }}\r\n        >\r\n          <Text h3 style={{ paddingVertical: 8 }}>\r\n            {request.name}\r\n          </Text>\r\n          <Text caption semibold>\r\n            Hey There Welcome To My App\r\n          </Text>\r\n        </Block>\r\n        <Text caption semibold style={{ marginTop: screenHeight * 4 }}>\r\n          19:45\r\n        </Text>\r\n      </Block>\r\n    );\r\n  }\r\n\r\n  renderRequests() {\r\n    const { requests } = this.props;\r\n    return (\r\n      <Block flex={1} column color=\"gray2\" style={styles.requests}>\r\n        <Container>\r\n          <Header style={{ backgroundColor: \"#f5f6fa\" }}>\r\n            <View style={{ flex: 0.3 }}>\r\n              <Button transparent large>\r\n                <Icon\r\n                  name=\"arrow-back\"\r\n                  style={{ color: \"#fd79a8\", marginLeft: screenWidth * -2 }}\r\n                />\r\n              </Button>\r\n            </View>\r\n            <View style={{ flex: 1 }}>\r\n              <TextInput\r\n                mode=\"flat\"\r\n                placeholder=\"   Search or start a new chat\"\r\n                style={{\r\n                  borderRadius: 20,\r\n                  width: screenHeight * 75,\r\n                  backgroundColor: \"white\",\r\n                  borderWidth: 1,\r\n                  marginLeft: screenWidth * -1.5,\r\n                  height: screenHeight * 10,\r\n                }}\r\n              ></TextInput>\r\n            </View>\r\n            <Right></Right>\r\n          </Header>\r\n        </Container>\r\n        <Text>{\"\\n\"}</Text>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          {requests.map((request) => (\r\n            <TouchableOpacity activeOpacity={0.8} key={`request-${request.id}`}>\r\n              {this.renderRequest(request)}\r\n            </TouchableOpacity>\r\n          ))}\r\n        </ScrollView>\r\n      </Block>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.fontsLoaded) {\r\n      return (\r\n        <Block center middle>\r\n          <Image\r\n            style={{ width: 140, height: 140 }}\r\n            source={require(\"./assets/profile.jpeg\")}\r\n          />\r\n        </Block>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <SafeAreaView style={styles.safe}>\r\n        <ScrollView style={{ backgroundColor: \"#fd79a8\" }}>\r\n          {this.renderRequests()}\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nApp.defaultProps = {\r\n  requests: mocks.requests,\r\n};\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  safe: {\r\n    flex: 1,\r\n    backgroundColor: \"#fd79a8\",\r\n  },\r\n  requests: {\r\n    marginTop: -55,\r\n    paddingTop: 55 + 20,\r\n    paddingHorizontal: 15,\r\n    zIndex: -1,\r\n  },\r\n  requestsHeader: {\r\n    paddingHorizontal: 20,\r\n    paddingBottom: 15,\r\n  },\r\n  request: {\r\n    padding: 20,\r\n    width: screenWidth * 50,\r\n    marginBottom: 15,\r\n  },\r\n  requestStatus: {\r\n    marginRight: 20,\r\n    overflow: \"hidden\",\r\n    height: 90,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}