{"ast":null,"code":"import*as Colors from\"./colors\";import Animated from\"react-native-web/dist/exports/Animated\";var SHADOW_COLOR=Colors.black;var SHADOW_OPACITY=0.24;export default function shadow(){var elevation=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;if(elevation instanceof Animated.Value){var inputRange=[0,1,2,3,8,24];return{shadowColor:SHADOW_COLOR,shadowOffset:{width:new Animated.Value(0),height:elevation.interpolate({inputRange:inputRange,outputRange:[0,0.5,0.75,2,7,23]})},shadowOpacity:new Animated.Value(SHADOW_OPACITY),shadowRadius:elevation.interpolate({inputRange:inputRange,outputRange:[0,0.75,1.5,3,8,24]})};}else{if(elevation===0){return{};}var height,radius;switch(elevation){case 1:height=0.5;radius=0.75;break;case 2:height=0.75;radius=1.5;break;default:height=elevation-1;radius=elevation;}return{shadowColor:SHADOW_COLOR,shadowOffset:{width:0,height:height},shadowOpacity:SHADOW_OPACITY,shadowRadius:radius};}}","map":{"version":3,"sources":["shadow.tsx"],"names":["SHADOW_COLOR","Colors","SHADOW_OPACITY","elevation","Animated","inputRange","shadowColor","shadowOffset","width","height","outputRange","shadowOpacity","shadowRadius","radius"],"mappings":"AAAA,MAAO,GAAP,CAAA,MAAA,gB,6DAGA,GAAMA,CAAAA,YAAY,CAAGC,MAAM,CAA3B,KAAA,CACA,GAAMC,CAAAA,cAAc,CAApB,IAAA,CAEA,cAAe,SAAA,CAAA,MAAA,EAAwD,IAAxCC,CAAAA,SAAwC,2DAAxD,CAAwD,CACrE,GAAIA,SAAS,WAAYC,CAAAA,QAAQ,CAAjC,KAAA,CAAyC,CACvC,GAAMC,CAAAA,UAAU,CAAG,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAnB,EAAmB,CAAnB,CAEA,MAAO,CACLC,WAAW,CADN,YAAA,CAELC,YAAY,CAAE,CACZC,KAAK,CAAE,GAAIJ,CAAAA,QAAQ,CAAZ,KAAA,CADK,CACL,CADK,CAEZK,MAAM,CAAE,SAAS,CAAT,WAAA,CAAsB,CAC5BJ,UAD4B,CAC5BA,UAD4B,CAE5BK,WAAW,CAAE,CAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAFe,CAAtB,CAFI,CAFT,CASLC,aAAa,CAAE,GAAIP,CAAAA,QAAQ,CAAZ,KAAA,CATV,cASU,CATV,CAULQ,YAAY,CAAE,SAAS,CAAT,WAAA,CAAsB,CAClCP,UADkC,CAClCA,UADkC,CAElCK,WAAW,CAAE,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAFqB,CAAtB,CAVT,CAAP,CAHF,CAAA,IAkBO,CACL,GAAIP,SAAS,GAAb,CAAA,CAAqB,CACnB,MAAA,EAAA,CACD,CAED,GAAA,CAAA,MAAA,CAAA,MAAA,CACA,OAAA,SAAA,EACE,IAAA,EAAA,CACEM,MAAM,CAANA,GAAAA,CACAI,MAAM,CAANA,IAAAA,CACA,MACF,IAAA,EAAA,CACEJ,MAAM,CAANA,IAAAA,CACAI,MAAM,CAANA,GAAAA,CACA,MACF,QACEJ,MAAM,CAAGN,SAAS,CAAlBM,CAAAA,CACAI,MAAM,CAANA,SAAAA,CAXJ,CAcA,MAAO,CACLP,WAAW,CADN,YAAA,CAELC,YAAY,CAAE,CACZC,KAAK,CADO,CAAA,CAEZC,MAAAA,CAAAA,MAFY,CAFT,CAMLE,aAAa,CANR,cAAA,CAOLC,YAAY,CAAEC,MAPT,CAAP,CASD,CACF","sourcesContent":["import * as Colors from './colors';\nimport { Animated } from 'react-native';\n\nconst SHADOW_COLOR = Colors.black;\nconst SHADOW_OPACITY = 0.24;\n\nexport default function shadow(elevation: number | Animated.Value = 0) {\n  if (elevation instanceof Animated.Value) {\n    const inputRange = [0, 1, 2, 3, 8, 24];\n\n    return {\n      shadowColor: SHADOW_COLOR,\n      shadowOffset: {\n        width: new Animated.Value(0),\n        height: elevation.interpolate({\n          inputRange,\n          outputRange: [0, 0.5, 0.75, 2, 7, 23],\n        }),\n      },\n      shadowOpacity: new Animated.Value(SHADOW_OPACITY),\n      shadowRadius: elevation.interpolate({\n        inputRange,\n        outputRange: [0, 0.75, 1.5, 3, 8, 24],\n      }),\n    };\n  } else {\n    if (elevation === 0) {\n      return {};\n    }\n\n    let height, radius;\n    switch (elevation) {\n      case 1:\n        height = 0.5;\n        radius = 0.75;\n        break;\n      case 2:\n        height = 0.75;\n        radius = 1.5;\n        break;\n      default:\n        height = elevation - 1;\n        radius = elevation;\n    }\n\n    return {\n      shadowColor: SHADOW_COLOR,\n      shadowOffset: {\n        width: 0,\n        height,\n      },\n      shadowOpacity: SHADOW_OPACITY,\n      shadowRadius: radius,\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}