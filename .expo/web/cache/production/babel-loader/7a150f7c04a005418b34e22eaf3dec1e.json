{"ast":null,"code":"function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import AnimatedText from\"../../Typography/AnimatedText\";var InputLabel=function InputLabel(props){var parentState=props.parentState,labelBackground=props.labelBackground;var _props$labelProps=props.labelProps,label=_props$labelProps.label,error=_props$labelProps.error,onLayoutAnimatedText=_props$labelProps.onLayoutAnimatedText,hasActiveOutline=_props$labelProps.hasActiveOutline,activeColor=_props$labelProps.activeColor,placeholderStyle=_props$labelProps.placeholderStyle,baseLabelTranslateX=_props$labelProps.baseLabelTranslateX,baseLabelTranslateY=_props$labelProps.baseLabelTranslateY,font=_props$labelProps.font,fontSize=_props$labelProps.fontSize,fontWeight=_props$labelProps.fontWeight,placeholderOpacity=_props$labelProps.placeholderOpacity,wiggleOffsetX=_props$labelProps.wiggleOffsetX,labelScale=_props$labelProps.labelScale,topPosition=_props$labelProps.topPosition,paddingOffset=_props$labelProps.paddingOffset,placeholderColor=_props$labelProps.placeholderColor,errorColor=_props$labelProps.errorColor,labelTranslationXOffset=_props$labelProps.labelTranslationXOffset;var labelTranslationX={transform:[{translateX:parentState.labeled.interpolate({inputRange:[0,1],outputRange:[baseLabelTranslateX,labelTranslationXOffset||0]})}]};var labelStyle=_objectSpread(_objectSpread({},font),{},{fontSize:fontSize,fontWeight:fontWeight,transform:[{translateX:parentState.error.interpolate({inputRange:[0,0.5,1],outputRange:[0,parentState.value&&error?wiggleOffsetX:0,0]})},{translateY:parentState.labeled.interpolate({inputRange:[0,1],outputRange:[baseLabelTranslateY,0]})},{scale:parentState.labeled.interpolate({inputRange:[0,1],outputRange:[labelScale,1]})}]});return label?React.createElement(Animated.View,{pointerEvents:\"none\",style:[StyleSheet.absoluteFill,{opacity:parentState.value||parentState.focused?parentState.labelLayout.measured?1:0:1},labelTranslationX]},labelBackground===null||labelBackground===void 0?void 0:labelBackground({parentState:parentState,labelStyle:labelStyle,labelProps:props.labelProps}),React.createElement(AnimatedText,{onLayout:onLayoutAnimatedText,style:[placeholderStyle,{top:topPosition},labelStyle,paddingOffset||{},{color:activeColor,opacity:parentState.labeled.interpolate({inputRange:[0,1],outputRange:[hasActiveOutline?1:0,0]})}],numberOfLines:1},label),React.createElement(AnimatedText,{style:[placeholderStyle,{top:topPosition},labelStyle,paddingOffset,{color:error&&errorColor?errorColor:placeholderColor,opacity:placeholderOpacity}],numberOfLines:1},label)):null;};export default InputLabel;","map":{"version":3,"sources":["InputLabel.tsx"],"names":["InputLabel","props","labelBackground","labelTranslationXOffset","labelTranslationX","transform","translateX","inputRange","outputRange","labelStyle","fontSize","fontWeight","parentState","translateY","scale","label","StyleSheet","opacity","labelProps","top","topPosition","paddingOffset","color","hasActiveOutline","error","placeholderOpacity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport AnimatedText from '../../Typography/AnimatedText';\n\nimport type { InputLabelProps } from '../types';\n\nconst InputLabel = (props: InputLabelProps) => {\n  const { parentState, labelBackground } = props;\n\n  const {\n    label,\n    error,\n    onLayoutAnimatedText,\n    hasActiveOutline,\n    activeColor,\n    placeholderStyle,\n    baseLabelTranslateX,\n    baseLabelTranslateY,\n    font,\n    fontSize,\n    fontWeight,\n    placeholderOpacity,\n    wiggleOffsetX,\n    labelScale,\n    topPosition,\n    paddingOffset,\n    placeholderColor,\n    errorColor,\n    labelTranslationXOffset,\n  } = props.labelProps;\n\n  const labelTranslationX = {\n    transform: [\n      {\n        // Offset label scale since RN doesn't support transform origin\n        translateX: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0],\n        }),\n      },\n    ],\n  };\n\n  const labelStyle = {\n    ...font,\n    fontSize,\n    fontWeight,\n    transform: [\n      {\n        // Wiggle the label when there's an error\n        translateX: parentState.error.interpolate({\n          inputRange: [0, 0.5, 1],\n          outputRange: [0, parentState.value && error ? wiggleOffsetX : 0, 0],\n        }),\n      },\n      {\n        // Move label to top\n        translateY: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [baseLabelTranslateY, 0],\n        }),\n      },\n      {\n        // Make label smaller\n        scale: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [labelScale, 1],\n        }),\n      },\n    ],\n  };\n\n  return label ? (\n    // Position colored placeholder and gray placeholder on top of each other and crossfade them\n    // This gives the effect of animating the color, but allows us to use native driver\n    <Animated.View\n      pointerEvents=\"none\"\n      style={[\n        StyleSheet.absoluteFill,\n        {\n          opacity:\n            // Hide the label in minimized state until we measure it's width\n            parentState.value || parentState.focused\n              ? parentState.labelLayout.measured\n                ? 1\n                : 0\n              : 1,\n        },\n        labelTranslationX,\n      ]}\n    >\n      {labelBackground?.({\n        parentState,\n        labelStyle,\n        labelProps: props.labelProps,\n      })}\n      <AnimatedText\n        onLayout={onLayoutAnimatedText}\n        style={[\n          placeholderStyle,\n          {\n            top: topPosition,\n          },\n          labelStyle,\n          paddingOffset || {},\n          {\n            color: activeColor,\n            opacity: parentState.labeled.interpolate({\n              inputRange: [0, 1],\n              outputRange: [hasActiveOutline ? 1 : 0, 0],\n            }),\n          },\n        ]}\n        numberOfLines={1}\n      >\n        {label}\n      </AnimatedText>\n      <AnimatedText\n        style={[\n          placeholderStyle,\n          {\n            top: topPosition,\n          },\n          labelStyle,\n          paddingOffset,\n          {\n            color: error && errorColor ? errorColor : placeholderColor,\n            opacity: placeholderOpacity,\n          },\n        ]}\n        numberOfLines={1}\n      >\n        {label}\n      </AnimatedText>\n    </Animated.View>\n  ) : null;\n};\n\nexport default InputLabel;\n"]},"metadata":{},"sourceType":"module"}