{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import ActivityIndicator from\"./ActivityIndicator\";import Icon from\"./Icon\";import Surface from\"./Surface\";import Text from\"./Typography/Text\";import TouchableRipple from\"./TouchableRipple\";import{black,white}from\"../styles/colors\";import{withTheme}from\"../core/theming\";var Button=function(_React$Component){_inherits(Button,_React$Component);var _super=_createSuper(Button);function Button(){var _this;_classCallCheck(this,Button);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"state\",{elevation:new Animated.Value(_this.props.mode==='contained'?2:0)});_defineProperty(_assertThisInitialized(_this),\"handlePressIn\",function(){if(_this.props.mode==='contained'){var scale=_this.props.theme.animation.scale;Animated.timing(_this.state.elevation,{toValue:8,duration:200*scale,useNativeDriver:true}).start();}});_defineProperty(_assertThisInitialized(_this),\"handlePressOut\",function(){if(_this.props.mode==='contained'){var scale=_this.props.theme.animation.scale;Animated.timing(_this.state.elevation,{toValue:2,duration:150*scale,useNativeDriver:true}).start();}});return _this;}_createClass(Button,[{key:\"render\",value:function render(){var _this$props=this.props,disabled=_this$props.disabled,compact=_this$props.compact,mode=_this$props.mode,dark=_this$props.dark,loading=_this$props.loading,icon=_this$props.icon,buttonColor=_this$props.color,children=_this$props.children,uppercase=_this$props.uppercase,accessibilityLabel=_this$props.accessibilityLabel,onPress=_this$props.onPress,style=_this$props.style,theme=_this$props.theme,contentStyle=_this$props.contentStyle,labelStyle=_this$props.labelStyle,testID=_this$props.testID,rest=_objectWithoutProperties(_this$props,[\"disabled\",\"compact\",\"mode\",\"dark\",\"loading\",\"icon\",\"color\",\"children\",\"uppercase\",\"accessibilityLabel\",\"onPress\",\"style\",\"theme\",\"contentStyle\",\"labelStyle\",\"testID\"]);var colors=theme.colors,roundness=theme.roundness;var font=theme.fonts.medium;var backgroundColor,borderColor,textColor,borderWidth;if(mode==='contained'){if(disabled){backgroundColor=color(theme.dark?white:black).alpha(0.12).rgb().string();}else if(buttonColor){backgroundColor=buttonColor;}else{backgroundColor=colors.primary;}}else{backgroundColor='transparent';}if(mode==='outlined'){borderColor=color(theme.dark?white:black).alpha(0.29).rgb().string();borderWidth=StyleSheet.hairlineWidth;}else{borderColor='transparent';borderWidth=0;}if(disabled){textColor=color(theme.dark?white:black).alpha(0.32).rgb().string();}else if(mode==='contained'){var isDark;if(typeof dark==='boolean'){isDark=dark;}else{isDark=backgroundColor==='transparent'?false:!color(backgroundColor).isLight();}textColor=isDark?white:black;}else if(buttonColor){textColor=buttonColor;}else{textColor=colors.primary;}var rippleColor=color(textColor).alpha(0.32).rgb().string();var buttonStyle={backgroundColor:backgroundColor,borderColor:borderColor,borderWidth:borderWidth,borderRadius:roundness};var touchableStyle={borderRadius:style?StyleSheet.flatten(style).borderRadius||roundness:roundness};var _ref=StyleSheet.flatten(labelStyle)||{},customLabelColor=_ref.color,customLabelSize=_ref.fontSize;var textStyle=_objectSpread({color:textColor},font);var elevation=disabled||mode!=='contained'?0:this.state.elevation;return React.createElement(Surface,_extends({},rest,{style:[styles.button,compact&&styles.compact,{elevation:elevation},buttonStyle,style]}),React.createElement(TouchableRipple,{borderless:true,delayPressIn:0,onPress:onPress,onPressIn:this.handlePressIn,onPressOut:this.handlePressOut,accessibilityLabel:accessibilityLabel,accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:{disabled:disabled},disabled:disabled,rippleColor:rippleColor,style:touchableStyle,testID:testID},React.createElement(View,{style:[styles.content,contentStyle]},icon&&loading!==true?React.createElement(View,{style:styles.icon},React.createElement(Icon,{source:icon,size:customLabelSize||16,color:customLabelColor||textColor})):null,loading?React.createElement(ActivityIndicator,{size:customLabelSize||16,color:customLabelColor||textColor,style:styles.icon}):null,React.createElement(Text,{numberOfLines:1,style:[styles.label,compact&&styles.compactLabel,uppercase&&styles.uppercaseLabel,textStyle,font,labelStyle]},children))));}}]);return Button;}(React.Component);_defineProperty(Button,\"defaultProps\",{mode:'text',uppercase:true});var styles=StyleSheet.create({button:{minWidth:64,borderStyle:'solid'},compact:{minWidth:'auto'},content:{flexDirection:'row',alignItems:'center',justifyContent:'center'},icon:{marginLeft:12,marginRight:-4},label:{textAlign:'center',letterSpacing:1,marginVertical:9,marginHorizontal:16},compactLabel:{marginHorizontal:8},uppercaseLabel:{textTransform:'uppercase'}});export default withTheme(Button);","map":{"version":3,"sources":["Button.tsx"],"names":["Button","React","mode","uppercase","elevation","Animated","scale","toValue","duration","useNativeDriver","color","testID","roundness","font","theme","backgroundColor","colors","borderColor","borderWidth","StyleSheet","textColor","isDark","rippleColor","buttonStyle","borderRadius","touchableStyle","style","fontSize","customLabelSize","textStyle","disabled","styles","compact","icon","loading","customLabelColor","button","minWidth","borderStyle","content","flexDirection","alignItems","justifyContent","marginLeft","marginRight","label","textAlign","letterSpacing","marginVertical","marginHorizontal","compactLabel","uppercaseLabel","textTransform","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport ActivityIndicator from './ActivityIndicator';\nimport Icon, { IconSource } from './Icon';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport TouchableRipple from './TouchableRipple';\nimport { black, white } from '../styles/colors';\nimport { withTheme } from '../core/theming';\n\ntype Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Mode of the button. You can change the mode to adjust the styling to give it desired emphasis.\n   * - `text` - flat button without background or outline (low emphasis)\n   * - `outlined` - button with an outline (medium emphasis)\n   * - `contained` - button with a background color and elevation shadow (high emphasis)\n   */\n  mode?: 'text' | 'outlined' | 'contained';\n  /**\n   * Whether the color is a dark color. A dark button will render light text and vice-versa. Only applicable for `contained` mode.\n   */\n  dark?: boolean;\n  /**\n   * Use a compact look, useful for `text` buttons in a row.\n   */\n  compact?: boolean;\n  /**\n   * Custom text color for flat button, or background color for contained button.\n   */\n  color?: string;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Icon to display for the `Button`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Label text of the button.\n   */\n  children: React.ReactNode;\n  /**\n   * Make the label text uppercased. Note that this won't work if you pass React elements as children.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Style of button's inner content.\n   * Use this prop to apply custom height and width.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the button text.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\ntype State = {\n  elevation: Animated.Value;\n};\n\n/**\n * A button is component that the user can press to trigger an action.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/button-1.png\" />\n *     <figcaption>Text button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-2.png\" />\n *     <figcaption>Outlined button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-3.png\" />\n *     <figcaption>Contained button</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Button icon=\"camera\" mode=\"contained\" onPress={() => console.log('Pressed')}>\n *     Press me\n *   </Button>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Button extends React.Component<Props, State> {\n  static defaultProps: Partial<Props> = {\n    mode: 'text',\n    uppercase: true,\n  };\n\n  state = {\n    elevation: new Animated.Value(this.props.mode === 'contained' ? 2 : 0),\n  };\n\n  private handlePressIn = () => {\n    if (this.props.mode === 'contained') {\n      const { scale } = this.props.theme.animation;\n      Animated.timing(this.state.elevation, {\n        toValue: 8,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  private handlePressOut = () => {\n    if (this.props.mode === 'contained') {\n      const { scale } = this.props.theme.animation;\n      Animated.timing(this.state.elevation, {\n        toValue: 2,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  render() {\n    const {\n      disabled,\n      compact,\n      mode,\n      dark,\n      loading,\n      icon,\n      color: buttonColor,\n      children,\n      uppercase,\n      accessibilityLabel,\n      onPress,\n      style,\n      theme,\n      contentStyle,\n      labelStyle,\n      testID,\n      ...rest\n    } = this.props;\n    const { colors, roundness } = theme;\n    const font = theme.fonts.medium;\n\n    let backgroundColor, borderColor, textColor, borderWidth;\n\n    if (mode === 'contained') {\n      if (disabled) {\n        backgroundColor = color(theme.dark ? white : black)\n          .alpha(0.12)\n          .rgb()\n          .string();\n      } else if (buttonColor) {\n        backgroundColor = buttonColor;\n      } else {\n        backgroundColor = colors.primary;\n      }\n    } else {\n      backgroundColor = 'transparent';\n    }\n\n    if (mode === 'outlined') {\n      borderColor = color(theme.dark ? white : black)\n        .alpha(0.29)\n        .rgb()\n        .string();\n      borderWidth = StyleSheet.hairlineWidth;\n    } else {\n      borderColor = 'transparent';\n      borderWidth = 0;\n    }\n\n    if (disabled) {\n      textColor = color(theme.dark ? white : black)\n        .alpha(0.32)\n        .rgb()\n        .string();\n    } else if (mode === 'contained') {\n      let isDark;\n\n      if (typeof dark === 'boolean') {\n        isDark = dark;\n      } else {\n        isDark =\n          backgroundColor === 'transparent'\n            ? false\n            : !color(backgroundColor).isLight();\n      }\n\n      textColor = isDark ? white : black;\n    } else if (buttonColor) {\n      textColor = buttonColor;\n    } else {\n      textColor = colors.primary;\n    }\n\n    const rippleColor = color(textColor).alpha(0.32).rgb().string();\n    const buttonStyle = {\n      backgroundColor,\n      borderColor,\n      borderWidth,\n      borderRadius: roundness,\n    };\n    const touchableStyle = {\n      borderRadius: style\n        ? StyleSheet.flatten(style).borderRadius || roundness\n        : roundness,\n    };\n\n    const { color: customLabelColor, fontSize: customLabelSize } =\n      StyleSheet.flatten(labelStyle) || {};\n\n    const textStyle = { color: textColor, ...font };\n    const elevation =\n      disabled || mode !== 'contained' ? 0 : this.state.elevation;\n\n    return (\n      <Surface\n        {...rest}\n        style={[\n          styles.button,\n          compact && styles.compact,\n          { elevation } as ViewStyle,\n          buttonStyle,\n          style,\n        ]}\n      >\n        <TouchableRipple\n          borderless\n          delayPressIn={0}\n          onPress={onPress}\n          onPressIn={this.handlePressIn}\n          onPressOut={this.handlePressOut}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ disabled }}\n          disabled={disabled}\n          rippleColor={rippleColor}\n          style={touchableStyle}\n          testID={testID}\n        >\n          <View style={[styles.content, contentStyle]}>\n            {icon && loading !== true ? (\n              <View style={styles.icon}>\n                <Icon\n                  source={icon}\n                  size={customLabelSize || 16}\n                  color={customLabelColor || textColor}\n                />\n              </View>\n            ) : null}\n            {loading ? (\n              <ActivityIndicator\n                size={customLabelSize || 16}\n                color={customLabelColor || textColor}\n                style={styles.icon}\n              />\n            ) : null}\n            <Text\n              numberOfLines={1}\n              style={[\n                styles.label,\n                compact && styles.compactLabel,\n                uppercase && styles.uppercaseLabel,\n                textStyle,\n                font,\n                labelStyle,\n              ]}\n            >\n              {children}\n            </Text>\n          </View>\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    minWidth: 64,\n    borderStyle: 'solid',\n  },\n  compact: {\n    minWidth: 'auto',\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    marginLeft: 12,\n    marginRight: -4,\n  },\n  label: {\n    textAlign: 'center',\n    letterSpacing: 1,\n    marginVertical: 9,\n    marginHorizontal: 16,\n  },\n  compactLabel: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n});\n\nexport default withTheme(Button);\n"]},"metadata":{},"sourceType":"module"}