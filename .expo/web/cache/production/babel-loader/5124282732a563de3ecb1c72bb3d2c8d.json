{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{withTheme}from\"../../core/theming\";import Caption from\"./../Typography/Caption\";import Title from\"./../Typography/Title\";var LEFT_SIZE=40;var CardTitle=function(_React$Component){_inherits(CardTitle,_React$Component);var _super=_createSuper(CardTitle);function CardTitle(){_classCallCheck(this,CardTitle);return _super.apply(this,arguments);}_createClass(CardTitle,[{key:\"render\",value:function render(){var _this$props=this.props,left=_this$props.left,leftStyle=_this$props.leftStyle,right=_this$props.right,rightStyle=_this$props.rightStyle,subtitle=_this$props.subtitle,subtitleStyle=_this$props.subtitleStyle,subtitleNumberOfLines=_this$props.subtitleNumberOfLines,style=_this$props.style,title=_this$props.title,titleStyle=_this$props.titleStyle;return React.createElement(View,{style:[styles.container,{minHeight:subtitle||left||right?72:50},style]},left?React.createElement(View,{style:[styles.left,leftStyle]},left({size:LEFT_SIZE})):null,React.createElement(View,{style:[styles.titles]},title?React.createElement(Title,{style:[styles.title,{marginBottom:subtitle?0:2},titleStyle],numberOfLines:1},title):null,subtitle?React.createElement(Caption,{style:[styles.subtitle,subtitleStyle],numberOfLines:subtitleNumberOfLines},subtitle):null),React.createElement(View,{style:rightStyle},right?right({size:24}):null));}}]);return CardTitle;}(React.Component);_defineProperty(CardTitle,\"displayName\",'Card.Title');_defineProperty(CardTitle,\"defaultProps\",{subtitleNumberOfLines:1});var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',paddingLeft:16},left:{justifyContent:'center',marginRight:16,height:LEFT_SIZE,width:LEFT_SIZE},titles:{flex:1,flexDirection:'column',justifyContent:'center'},title:{minHeight:30},subtitle:{minHeight:20,marginVertical:0}});export default withTheme(CardTitle);export{CardTitle};","map":{"version":3,"sources":["CardTitle.tsx"],"names":["LEFT_SIZE","CardTitle","React","subtitleNumberOfLines","titleStyle","styles","minHeight","subtitle","left","size","title","marginBottom","rightStyle","right","container","flexDirection","alignItems","justifyContent","paddingLeft","marginRight","height","width","titles","flex","marginVertical","withTheme"],"mappings":"srCAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,sHASA,OAAA,SAAA,0BACA,MAAA,CAAA,OAAA,+BACA,MAAA,CAAA,KAAA,6BAsDA,GAAMA,CAAAA,SAAS,CAAf,EAAA,C,GA0BA,CAAA,S,4PAOW,iBAYH,KAXJ,KADO,CACD,IADC,aACD,IADC,CACD,SADC,aACD,SADC,CACD,KADC,aACD,KADC,CACD,UADC,aACD,UADC,CACD,QADC,aACD,QADC,CACD,aADC,aACD,aADC,CACD,qBADC,aACD,qBADC,CACD,KADC,aACD,KADC,CACD,KADC,aACD,KADC,CAWLI,UAXK,aAWLA,UAXK,CAcP,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,KAAK,CAAE,CACLC,MAAM,CADD,SAAA,CAEL,CAAEC,SAAS,CAAEC,QAAQ,EAARA,IAAAA,EAAAA,KAAAA,CAAAA,EAAAA,CAAiC,EAA9C,CAFK,CAAA,KAAA,CADT,CAAA,CAOGC,IAAI,CACH,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAE,CAACH,MAAM,CAAP,IAAA,CAAA,SAAA,CAAb,CAAA,CACGG,IAAI,CAAC,CACJC,IAAI,CAAET,SADF,CAAD,CADP,CADG,CAPP,IAAA,CAeE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAE,CAACK,MAAM,CAAP,MAAA,CAAb,CAAA,CACGK,KAAK,CACJ,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CACE,KAAK,CAAE,CACLL,MAAM,CADD,KAAA,CAEL,CAAEM,YAAY,CAAEJ,QAAQ,CAAA,CAAA,CAAO,CAA/B,CAFK,CADT,UACS,CADT,CAME,aAAa,CAAE,CANjB,CAAA,CADI,KACJ,CADI,CADR,IAAA,CAcGA,QAAQ,CACP,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,CACE,KAAK,CAAE,CAACF,MAAM,CAAP,QAAA,CADT,aACS,CADT,CAEE,aAAa,CAAEF,qBAFjB,CAAA,CADO,QACP,CADO,CA7Bb,IAeE,CAfF,CAuCE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAES,UAAb,CAAA,CAA0BC,KAAK,CAAGA,KAAK,CAAC,CAAEJ,IAAI,CAAE,EAAR,CAAD,CAAR,CAxCnC,IAwCI,CAvCF,CADF,CA2CD,C,uBAhEqBP,KAAK,CAA7B,S,kBAAMD,S,eACiB,Y,kBADjBA,S,gBAGkB,CACpBE,qBAAqB,CAAE,CADH,C,EAgExB,GAAME,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BS,SAAS,CAAE,CACTC,aAAa,CADJ,KAAA,CAETC,UAAU,CAFD,QAAA,CAGTC,cAAc,CAHL,eAAA,CAITC,WAAW,CAAE,EAJJ,CADoB,CAQ/BV,IAAI,CAAE,CACJS,cAAc,CADV,QAAA,CAEJE,WAAW,CAFP,EAAA,CAGJC,MAAM,CAHF,SAAA,CAIJC,KAAK,CAAErB,SAJH,CARyB,CAe/BsB,MAAM,CAAE,CACNC,IAAI,CADE,CAAA,CAENR,aAAa,CAFP,QAAA,CAGNE,cAAc,CAAE,QAHV,CAfuB,CAqB/BP,KAAK,CAAE,CACLJ,SAAS,CAAE,EADN,CArBwB,CAyB/BC,QAAQ,CAAE,CACRD,SAAS,CADD,EAAA,CAERkB,cAAc,CAAE,CAFR,CAzBqB,CAAlB,CAAf,CA+BA,cAAeC,CAAAA,SAAS,CAAxB,SAAwB,CAAxB,CAGA,OAAA,SAAA","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withTheme } from '../../core/theming';\nimport Caption from './../Typography/Caption';\nimport Title from './../Typography/Title';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Text for the title. Note that this will only accept a string or `<Text>`-based node.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Text for the subtitle. Note that this will only accept a string or `<Text>`-based node.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Number of line for the subtitle.\n   */\n  subtitleNumberOfLines?: number;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { size: number }) => React.ReactNode;\n  /**\n   * Style for the left element wrapper.\n   */\n  leftStyle?: StyleProp<ViewStyle>;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { size: number }) => React.ReactNode;\n  /**\n   * Style for the right element wrapper.\n   */\n  rightStyle?: StyleProp<ViewStyle>;\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst LEFT_SIZE = 40;\n\n/**\n * A component to show a title, subtitle and an avatar inside a Card.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-title-1.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Card, IconButton } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card.Title\n *     title=\"Card Title\"\n *     subtitle=\"Card Subtitle\"\n *     left={(props) => <Avatar.Icon {...props} icon=\"folder\" />}\n *     right={(props) => <IconButton {...props} icon=\"more-vert\" onPress={() => {}} />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass CardTitle extends React.Component<Props> {\n  static displayName = 'Card.Title';\n\n  static defaultProps = {\n    subtitleNumberOfLines: 1,\n  };\n\n  render() {\n    const {\n      left,\n      leftStyle,\n      right,\n      rightStyle,\n      subtitle,\n      subtitleStyle,\n      subtitleNumberOfLines,\n      style,\n      title,\n      titleStyle,\n    } = this.props;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          { minHeight: subtitle || left || right ? 72 : 50 },\n          style,\n        ]}\n      >\n        {left ? (\n          <View style={[styles.left, leftStyle]}>\n            {left({\n              size: LEFT_SIZE,\n            })}\n          </View>\n        ) : null}\n\n        <View style={[styles.titles]}>\n          {title ? (\n            <Title\n              style={[\n                styles.title,\n                { marginBottom: subtitle ? 0 : 2 },\n                titleStyle,\n              ]}\n              numberOfLines={1}\n            >\n              {title}\n            </Title>\n          ) : null}\n\n          {subtitle ? (\n            <Caption\n              style={[styles.subtitle, subtitleStyle]}\n              numberOfLines={subtitleNumberOfLines}\n            >\n              {subtitle}\n            </Caption>\n          ) : null}\n        </View>\n\n        <View style={rightStyle}>{right ? right({ size: 24 }) : null}</View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 16,\n  },\n\n  left: {\n    justifyContent: 'center',\n    marginRight: 16,\n    height: LEFT_SIZE,\n    width: LEFT_SIZE,\n  },\n\n  titles: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n\n  title: {\n    minHeight: 30,\n  },\n\n  subtitle: {\n    minHeight: 20,\n    marginVertical: 0,\n  },\n});\n\nexport default withTheme(CardTitle);\n\n// @component-docs ignore-next-line\nexport { CardTitle };\n"]},"metadata":{},"sourceType":"module"}