{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import color from'color';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import TouchableRipple from\"../TouchableRipple\";import{black,white}from\"../../styles/colors\";import{withTheme}from\"../../core/theming\";var DataTableRow=function(_React$Component){_inherits(DataTableRow,_React$Component);var _super=_createSuper(DataTableRow);function DataTableRow(){_classCallCheck(this,DataTableRow);return _super.apply(this,arguments);}_createClass(DataTableRow,[{key:\"render\",value:function render(){var _this$props=this.props,onPress=_this$props.onPress,style=_this$props.style,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,[\"onPress\",\"style\",\"theme\"]);var borderBottomColor=color(theme.dark?white:black).alpha(0.12).rgb().string();return React.createElement(TouchableRipple,_extends({},rest,{onPress:onPress,style:[styles.container,{borderBottomColor:borderBottomColor},style]}),React.createElement(View,{style:styles.content},this.props.children));}}]);return DataTableRow;}(React.Component);_defineProperty(DataTableRow,\"displayName\",'DataTable.Row');var styles=StyleSheet.create({container:{borderStyle:'solid',borderBottomWidth:StyleSheet.hairlineWidth,minHeight:48,paddingHorizontal:16},content:{flex:1,flexDirection:'row'}});export default withTheme(DataTableRow);export{DataTableRow};","map":{"version":3,"sources":["DataTableRow.tsx"],"names":["DataTableRow","React","theme","borderBottomColor","color","styles","content","container","borderStyle","borderBottomWidth","StyleSheet","minHeight","paddingHorizontal","flex","flexDirection","withTheme"],"mappings":"qpEAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,KAAA,KAAA,OAAA,C,sHAEA,MAAA,CAAA,eAAA,0BACA,OAAA,KAAA,CAAA,KAAA,2BACA,OAAA,SAAA,0B,GA+CA,CAAA,Y,2QAGW,CACP,GAAA,CAAA,WAAA,CAA2C,KAA3C,KAAA,CAAM,OAAN,CAAA,WAAA,CAAM,OAAN,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAAwBE,KAAxB,CAAA,WAAA,CAAwBA,KAAxB,CAAA,IAAA,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,SAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAMC,CAAAA,iBAAiB,CAAGC,KAAK,CAACF,KAAK,CAALA,IAAAA,CAAAA,KAAAA,CAANE,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAA1B,MAA0BA,EAA1B,CAKA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,OAAO,CAFT,OAAA,CAGE,KAAK,CAAE,CAACC,MAAM,CAAP,SAAA,CAAmB,CAAEF,iBAAAA,CAAAA,iBAAF,CAAnB,CAAA,KAAA,CAHT,CAAA,CAAA,CAKE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,KAAK,CAAEE,MAAM,CAACC,OAApB,CAAA,CAA8B,KAAA,KAAA,CANlC,QAMI,CALF,CADF,CASD,C,0BAnBwBL,KAAK,CAAhC,S,kBAAMD,Y,eACiB,e,EAqBvB,GAAMK,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BE,SAAS,CAAE,CACTC,WAAW,CADF,OAAA,CAETC,iBAAiB,CAAEC,UAAU,CAFpB,aAAA,CAGTC,SAAS,CAHA,EAAA,CAITC,iBAAiB,CAAE,EAJV,CADoB,CAO/BN,OAAO,CAAE,CACPO,IAAI,CADG,CAAA,CAEPC,aAAa,CAAE,KAFR,CAPsB,CAAlB,CAAf,CAaA,cAAeC,CAAAA,SAAS,CAAxB,YAAwB,CAAxB,CAGA,OAAA,YAAA","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nclass DataTableRow extends React.Component<Props> {\n  static displayName = 'DataTable.Row';\n\n  render() {\n    const { onPress, style, theme, ...rest } = this.props;\n    const borderBottomColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableRipple\n        {...rest}\n        onPress={onPress}\n        style={[styles.container, { borderBottomColor }, style]}\n      >\n        <View style={styles.content}>{this.props.children}</View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]},"metadata":{},"sourceType":"module"}