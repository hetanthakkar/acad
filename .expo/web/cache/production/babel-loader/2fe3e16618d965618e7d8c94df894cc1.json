{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Color from'color';import Text from\"../Typography/Text\";import{withTheme}from\"../../core/theming\";import{white}from\"../../styles/colors\";var defaultSize=64;var AvatarText=function(_React$Component){_inherits(AvatarText,_React$Component);var _super=_createSuper(AvatarText);function AvatarText(){_classCallCheck(this,AvatarText);return _super.apply(this,arguments);}_createClass(AvatarText,[{key:\"render\",value:function render(){var _this$props=this.props,label=_this$props.label,_this$props$size=_this$props.size,size=_this$props$size===void 0?defaultSize:_this$props$size,style=_this$props.style,theme=_this$props.theme,labelStyle=_this$props.labelStyle,color=_this$props.color,rest=_objectWithoutProperties(_this$props,[\"label\",\"size\",\"style\",\"theme\",\"labelStyle\",\"color\"]);var _ref=StyleSheet.flatten(style)||{},_ref$backgroundColor=_ref.backgroundColor,backgroundColor=_ref$backgroundColor===void 0?theme.colors.primary:_ref$backgroundColor,restStyle=_objectWithoutProperties(_ref,[\"backgroundColor\"]);var textColor=color||(Color(backgroundColor).isLight()?'rgba(0, 0, 0, .54)':white);return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},styles.container,restStyle]},rest),React.createElement(Text,{style:[styles.text,{color:textColor,fontSize:size/2,lineHeight:size},labelStyle],numberOfLines:1},label));}}]);return AvatarText;}(React.Component);_defineProperty(AvatarText,\"displayName\",'Avatar.Text');_defineProperty(AvatarText,\"defaultProps\",{size:defaultSize});var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'},text:{textAlign:'center',textAlignVertical:'center'}});export default withTheme(AvatarText);","map":{"version":3,"sources":["AvatarText.tsx"],"names":["defaultSize","AvatarText","React","size","color","backgroundColor","theme","primary","StyleSheet","textColor","Color","width","height","borderRadius","styles","fontSize","lineHeight","container","justifyContent","alignItems","text","textAlign","textAlignVertical","withTheme"],"mappings":"qpEAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,sHAQA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,IAAA,0BACA,OAAA,SAAA,0BACA,OAAA,KAAA,2BAEA,GAAMA,CAAAA,WAAW,CAAjB,EAAA,C,GAgDA,CAAA,U,iQAOW,CACP,GAAA,CAAA,WAAA,CAQI,KARJ,KAAA,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,kBAAA,WAAA,CAEEG,IAFF,CAEEA,IAFF,2BAAM,WAAN,kBAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAAM,UAAN,CAAA,WAAA,CAAM,UAAN,CAMEC,KANF,CAAA,WAAA,CAMEA,KANF,CAAA,IAAA,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,CAAA,CAUA,GAAA,CAAA,IAAA,CACEI,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,GADF,EAAA,sBAAA,IAAA,CAAQH,eAAR,CAAQA,eAAR,+BAA0BC,KAAK,CAALA,MAAAA,CAAaC,OAAvC,sBAAA,SAAA,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,CAEA,GAAME,CAAAA,SAAS,CACbL,KAAK,GACJM,KAAK,CAALA,eAAK,CAALA,CAAAA,OAAAA,GAAAA,oBAAAA,CAFH,KACO,CADP,CAIA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACL,CACEC,KAAK,CADP,IAAA,CAEEC,MAAM,CAFR,IAAA,CAGEC,YAAY,CAAEV,IAAI,CAHpB,CAAA,CAIEE,eAAAA,CAAAA,eAJF,CADK,CAOLS,MAAM,CAPD,SAAA,CAAA,SAAA,CADT,CAAA,CAAA,IAAA,CAAA,CAaE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,KAAK,CAAE,CACLA,MAAM,CADD,IAAA,CAEL,CACEV,KAAK,CADP,SAAA,CAEEW,QAAQ,CAAEZ,IAAI,CAFhB,CAAA,CAGEa,UAAU,CAAEb,IAHd,CAFK,CADT,UACS,CADT,CAUE,aAAa,CAAE,CAVjB,CAAA,CAdJ,KAcI,CAbF,CADF,CA8BD,C,wBAtDsBD,KAAK,CAA9B,S,kBAAMD,U,eACiB,a,kBADjBA,U,gBAGkB,CACpBE,IAAI,CAAEH,WADc,C,EAsDxB,GAAMc,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BG,SAAS,CAAE,CACTC,cAAc,CADL,QAAA,CAETC,UAAU,CAAE,QAFH,CADoB,CAK/BC,IAAI,CAAE,CACJC,SAAS,CADL,QAAA,CAEJC,iBAAiB,CAAE,QAFf,CALyB,CAAlB,CAAf,CAWA,cAAeC,CAAAA,SAAS,CAAxB,UAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport Color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\nconst defaultSize = 64;\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Initials to show as the text in the `Avatar`.\n   */\n  label: string;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Style for text container\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the title.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-text.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Text size={24} label=\"XD\" />\n * );\n * ```\n */\nclass AvatarText extends React.Component<Props> {\n  static displayName = 'Avatar.Text';\n\n  static defaultProps = {\n    size: defaultSize,\n  };\n\n  render() {\n    const {\n      label,\n      size = defaultSize,\n      style,\n      theme,\n      labelStyle,\n      color,\n      ...rest\n    } = this.props;\n\n    const { backgroundColor = theme.colors.primary, ...restStyle } =\n      StyleSheet.flatten(style) || {};\n    const textColor =\n      color ||\n      (Color(backgroundColor).isLight() ? 'rgba(0, 0, 0, .54)' : white);\n\n    return (\n      <View\n        style={[\n          {\n            width: size,\n            height: size,\n            borderRadius: size / 2,\n            backgroundColor,\n          },\n          styles.container,\n          restStyle,\n        ]}\n        {...rest}\n      >\n        <Text\n          style={[\n            styles.text,\n            {\n              color: textColor,\n              fontSize: size / 2,\n              lineHeight: size,\n            },\n            labelStyle,\n          ]}\n          numberOfLines={1}\n        >\n          {label}\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n  },\n});\n\nexport default withTheme(AvatarText);\n"]},"metadata":{},"sourceType":"module"}