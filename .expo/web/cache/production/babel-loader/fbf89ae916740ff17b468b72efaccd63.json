{"ast":null,"code":"'use strict';import Linking from\"react-native-web/dist/exports/Linking\";import Platform from\"react-native-web/dist/exports/Platform\";export var phonecall=function phonecall(phoneNumber,prompt){if(arguments.length!==2){console.log('you must supply exactly 2 arguments');return;}if(!isCorrectType('String',phoneNumber)){console.log('the phone number must be provided as a String value');return;}if(!isCorrectType('Boolean',prompt)){console.log('the prompt parameter must be a Boolean');return;}var url;if(Platform.OS!=='android'){url=prompt?'telprompt:':'tel:';}else{url='tel:';}url+=phoneNumber;LaunchURL(url);};export var email=function email(to,cc,bcc,subject,body){var url='mailto:';var argLength=arguments.length;switch(argLength){case 0:LaunchURL(url);return;case 5:break;default:console.log('you must supply either 0 or 5 arguments. You supplied '+argLength);return;}var valueAdded=false;if(isCorrectType('Array',arguments[0])){var validAddresses=getValidArgumentsFromArray(arguments[0],'String');if(validAddresses.length>0){url+=encodeURIComponent(validAddresses.join(','));}}url+='?';if(isCorrectType('Array',arguments[1])){var _validAddresses=getValidArgumentsFromArray(arguments[1],'String');if(_validAddresses.length>0){valueAdded=true;url+='cc='+encodeURIComponent(_validAddresses.join(','));}}if(isCorrectType('Array',arguments[2])){if(valueAdded){url+='&';}var _validAddresses2=getValidArgumentsFromArray(arguments[2],'String');if(_validAddresses2.length>0){valueAdded=true;url+='bcc='+encodeURIComponent(_validAddresses2.join(','));}}if(isCorrectType('String',arguments[3])){if(valueAdded){url+='&';}valueAdded=true;url+='subject='+encodeURIComponent(arguments[3]);}if(isCorrectType('String',arguments[4])){if(valueAdded){url+='&';}url+='body='+encodeURIComponent(arguments[4]);}LaunchURL(url);};export var text=function text(){var phoneNumber=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var body=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(arguments.length>2){console.log('you supplied too many arguments. You can either supply 0 or 1 or 2');return;}var url='sms:';if(phoneNumber){if(isCorrectType('String',phoneNumber)){url+=phoneNumber;}else{console.log('the phone number should be provided as a string. It was provided as '+Object.prototype.toString.call(phoneNumber).slice(8,-1)+',ignoring the value provided');}}if(body){if(isCorrectType('String',body)){if(Platform.OS==='android')body=encodeURIComponent(body);url+=Platform.OS==='ios'?\"&body=\"+encodeURIComponent(body):\"?body=\"+encodeURIComponent(body);}else{console.log('the body should be provided as a string. It was provided as '+Object.prototype.toString.call(body).slice(8,-1)+',ignoring the value provided');}}LaunchURL(url);};export var textWithoutEncoding=function textWithoutEncoding(){var phoneNumber=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var body=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(arguments.length>2){console.log('you supplied too many arguments. You can either supply 0 or 1 or 2');return;}var url='sms:';if(phoneNumber){if(isCorrectType('String',phoneNumber)){url+=phoneNumber;}else{console.log('the phone number should be provided as a string. It was provided as '+Object.prototype.toString.call(phoneNumber).slice(8,-1)+',ignoring the value provided');}}if(body){if(isCorrectType('String',body)){url+=Platform.OS==='ios'?\"&body=\"+body:\"?body=\"+body;}else{console.log('the body should be provided as a string. It was provided as '+Object.prototype.toString.call(body).slice(8,-1)+',ignoring the value provided');}}LaunchURL(url);};export var web=function web(){var address=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;if(!address){console.log('Missing address argument');return;}if(!isCorrectType('String',address)){console.log('address was not provided as a string, it was provided as '+Object.prototype.toString.call(address).slice(8,-1));return;}LaunchURL(address);};var LaunchURL=function LaunchURL(url){Linking.canOpenURL(url).then(function(supported){if(!supported){console.log('Can\\'t handle url: '+url);}else{Linking.openURL(url).catch(function(err){if(url.includes('telprompt')){}else{console.warn('openURL error',err);}});}}).catch(function(err){return console.warn('An unexpected error happened',err);});};var getValidArgumentsFromArray=function getValidArgumentsFromArray(array,type){var validValues=[];array.forEach(function(value){if(isCorrectType(type,value)){validValues.push(value);}});return validValues;};var isCorrectType=function isCorrectType(expected,actual){return Object.prototype.toString.call(actual).slice(8,-1)===expected;};export default{phonecall:phonecall,text:text,textWithoutEncoding:textWithoutEncoding,email:email,web:web};","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/node_modules/react-native-communications/AKCommunications.js"],"names":["phonecall","phoneNumber","prompt","arguments","length","console","log","isCorrectType","url","Platform","OS","LaunchURL","email","to","cc","bcc","subject","body","argLength","valueAdded","validAddresses","getValidArgumentsFromArray","encodeURIComponent","join","text","Object","prototype","toString","call","slice","textWithoutEncoding","web","address","Linking","canOpenURL","then","supported","openURL","catch","err","includes","warn","array","type","validValues","forEach","value","push","expected","actual"],"mappings":"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","sourcesContent":["'use strict';\n\nimport {\n\tLinking,\n\tPlatform,\n} from 'react-native';\n\nexport const phonecall = function(phoneNumber, prompt) {\n\tif(arguments.length !== 2) {\n\t\t\tconsole.log('you must supply exactly 2 arguments');\n\t\t\treturn;\n\t\t}\n\n\t\tif(!isCorrectType('String', phoneNumber)) {\n\t\t\tconsole.log('the phone number must be provided as a String value');\n\t\t\treturn;\n\t\t}\n\n\t\tif(!isCorrectType('Boolean', prompt)) {\n\t\t\tconsole.log('the prompt parameter must be a Boolean');\n\t\t\treturn;\n\t\t}\n\n\t\tlet url;\n\n\t\tif(Platform.OS !== 'android') {\n\t\t\turl = prompt ? 'telprompt:' : 'tel:';\n\t\t}\n\t\telse {\n\t\t\turl = 'tel:';\n\t\t}\n\n\t\turl += phoneNumber;\n\n\t\tLaunchURL(url);\n}\n\nexport const email = function(to, cc, bcc, subject, body) {\n\tlet url = 'mailto:';\n\t\tlet argLength = arguments.length;\n\n\t\tswitch(argLength) {\n\t\t\tcase 0:\n\t\t\t\tLaunchURL(url);\n\t\t\t\treturn;\n\t\t\tcase 5:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('you must supply either 0 or 5 arguments. You supplied ' + argLength);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// we use this Boolean to keep track of when we add a new parameter to the querystring\n\t\t// it helps us know when we need to add & to separate parameters\n\t\tlet valueAdded = false;\n\n\t\tif(isCorrectType('Array', arguments[0])) {\n\t\t\tlet validAddresses = getValidArgumentsFromArray(arguments[0], 'String');\n\n\t\t\tif(validAddresses.length > 0) {\n\t\t\t\turl += encodeURIComponent(validAddresses.join(','));\n\t\t\t}\n\t\t}\n\n\t\turl += '?';\n\n\t\tif(isCorrectType('Array', arguments[1])) {\n\t\t\tlet validAddresses = getValidArgumentsFromArray(arguments[1], 'String');\n\n\t\t\tif(validAddresses.length > 0) {\n\t\t\t\tvalueAdded = true;\n\t\t\t\turl += 'cc=' + encodeURIComponent(validAddresses.join(','));\n\t\t\t}\n\t\t}\n\n\t\tif(isCorrectType('Array', arguments[2])) {\n\t\t\tif(valueAdded) {\n\t\t\t\turl += '&';\n\t\t\t}\n\n\t\t\tlet validAddresses = getValidArgumentsFromArray(arguments[2], 'String');\n\n\t\t\tif(validAddresses.length > 0) {\n\t\t\t\tvalueAdded = true;\n\t\t\t\turl += 'bcc=' + encodeURIComponent(validAddresses.join(','));\n\t\t\t}\n\t\t}\n\n\t\tif(isCorrectType('String', arguments[3])) {\n\t\t\tif(valueAdded) {\n\t\t\t\turl += '&';\n\t\t\t}\n\n\t\t\tvalueAdded = true;\n\t\t\turl += 'subject=' + encodeURIComponent(arguments[3]);\n\t\t}\n\n\t\tif(isCorrectType('String', arguments[4])) {\n\t\t\tif(valueAdded) {\n\t\t\t\turl += '&';\n\t\t\t}\n\n\t\t\turl += 'body=' + encodeURIComponent(arguments[4]);\n\t\t}\n\n\t\tLaunchURL(url);\n}\n\nexport const text = function(phoneNumber = null, body = null) {\n\tif(arguments.length > 2) {\n\t\t\tconsole.log('you supplied too many arguments. You can either supply 0 or 1 or 2');\n\t\t\treturn;\n\t\t}\n\n\t\tlet url = 'sms:';\n\n\t\tif(phoneNumber) {\n\t\t\tif(isCorrectType('String', phoneNumber)) {\n\t\t\t\turl += phoneNumber;\n\t\t\t} else {\n\t\t\t\tconsole.log('the phone number should be provided as a string. It was provided as '\n\t\t\t\t\t+ Object.prototype.toString.call(phoneNumber).slice(8, -1)\n\t\t\t\t\t+ ',ignoring the value provided');\n\t\t\t}\n\t\t}\n\n\t\tif(body) {\n\t\t\tif(isCorrectType('String', body)) {\n\t\t\t\t// for some strange reason android seems to have issues with ampersands in the body unless it is encoded twice!\n\t\t\t\t// iOS only needs encoding once\n\t\t\t\tif(Platform.OS === 'android') body = encodeURIComponent(body);\n\t\t\t\turl += Platform.OS === 'ios' ? `&body=${encodeURIComponent(body)}` : `?body=${encodeURIComponent(body)}`;\n\t\t\t} else {\n\t\t\t\tconsole.log('the body should be provided as a string. It was provided as '\n\t\t\t\t\t+ Object.prototype.toString.call(body).slice(8, -1)\n\t\t\t\t\t+ ',ignoring the value provided');\n\t\t\t}\n\t\t}\n\n\t\tLaunchURL(url);\n}\n\nexport const textWithoutEncoding = function(phoneNumber = null, body = null) {\n\tif(arguments.length > 2) {\n\t\t\tconsole.log('you supplied too many arguments. You can either supply 0 or 1 or 2');\n\t\t\treturn;\n\t\t}\n\n\t\tlet url = 'sms:';\n\n\t\tif(phoneNumber) {\n\t\t\tif(isCorrectType('String', phoneNumber)) {\n\t\t\t\turl += phoneNumber;\n\t\t\t} else {\n\t\t\t\tconsole.log('the phone number should be provided as a string. It was provided as '\n\t\t\t\t\t+ Object.prototype.toString.call(phoneNumber).slice(8, -1)\n\t\t\t\t\t+ ',ignoring the value provided');\n\t\t\t}\n\t\t}\n\n\t\tif(body) {\n\t\t\tif(isCorrectType('String', body)) {\n\t\t\t\turl += Platform.OS === 'ios' ? `&body=${body}` : `?body=${body}`;\n\t\t\t} else {\n\t\t\t\tconsole.log('the body should be provided as a string. It was provided as '\n\t\t\t\t\t+ Object.prototype.toString.call(body).slice(8, -1)\n\t\t\t\t\t+ ',ignoring the value provided');\n\t\t\t}\n\t\t}\n\n\t\tLaunchURL(url);\n}\n\nexport const web = (address = null) => {\n\tif(!address) {\n      console.log('Missing address argument');\n      return;\n    }\n    if(!isCorrectType('String', address)) {\n    \tconsole.log('address was not provided as a string, it was provided as '\n    \t\t+ Object.prototype.toString.call(address).slice(8, -1));\n    \treturn;\n    }\n    LaunchURL(address);\n}\n\nconst LaunchURL = function(url) {\n\tLinking.canOpenURL(url).then(supported => {\n\t\tif(!supported) {\n\t\t\tconsole.log('Can\\'t handle url: ' + url);\n\t\t} else {\n\t\t\tLinking.openURL(url)\n\t\t\t.catch(err => {\n\t\t\t\tif(url.includes('telprompt')) {\n\t\t\t\t\t// telprompt was cancelled and Linking openURL method sees this as an error\n\t\t\t\t\t// it is not a true error so ignore it to prevent apps crashing\n\t\t\t\t\t// see https://github.com/anarchicknight/react-native-communications/issues/39\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('openURL error', err)\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}).catch(err => console.warn('An unexpected error happened', err));\n};\n\nconst getValidArgumentsFromArray = function(array, type) {\n\tvar validValues = [];\n\tarray.forEach(function(value) {\n\t\tif(isCorrectType(type, value)) {\n\t\t\tvalidValues.push(value);\n\t\t}\n\t});\n\n\treturn validValues;\n};\n\nconst isCorrectType = function(expected, actual) {\n\treturn Object.prototype.toString.call(actual).slice(8, -1) === expected;\n};\n\nexport default { phonecall, text, textWithoutEncoding, email, web }\n"]},"metadata":{},"sourceType":"module"}