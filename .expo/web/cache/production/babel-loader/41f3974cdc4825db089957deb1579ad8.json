{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import shadow from\"../styles/shadow\";import{withTheme}from\"../core/theming\";import overlay from\"../styles/overlay\";var Surface=function(_React$Component){_inherits(Surface,_React$Component);var _super=_createSuper(Surface);function Surface(){_classCallCheck(this,Surface);return _super.apply(this,arguments);}_createClass(Surface,[{key:\"render\",value:function render(){var _this$props=this.props,style=_this$props.style,theme=_this$props.theme,rest=_objectWithoutProperties(_this$props,[\"style\",\"theme\"]);var flattenedStyles=StyleSheet.flatten(style)||{};var _flattenedStyles$elev=flattenedStyles.elevation,elevation=_flattenedStyles$elev===void 0?4:_flattenedStyles$elev;var isDarkTheme=theme.dark,mode=theme.mode,colors=theme.colors;return React.createElement(Animated.View,_extends({},rest,{style:[{backgroundColor:isDarkTheme&&mode==='adaptive'?overlay(elevation,colors.surface):colors.surface},elevation&&shadow(elevation),style]}));}}]);return Surface;}(React.Component);export default withTheme(Surface);","map":{"version":3,"sources":["Surface.tsx"],"names":["React","theme","flattenedStyles","StyleSheet","elevation","dark","colors","backgroundColor","isDarkTheme","mode","overlay","surface","shadow","withTheme"],"mappings":"+9DAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,8HAEA,MAAA,CAAA,MAAA,wBACA,OAAA,SAAA,uBACA,MAAA,CAAA,OAAA,yB,GAyDA,CAAA,O,kPACW,CACP,GAAA,CAAA,WAAA,CAAkC,KAAlC,KAAA,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAAeC,KAAf,CAAA,WAAA,CAAeA,KAAf,CAAA,IAAA,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAMC,CAAAA,eAAe,CAAGC,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,GAAxB,EAAA,CAFO,0BAGP,eAHO,CAGCC,SAHD,CAGCA,SAHD,gCAGa,CAHb,0BAID,CAAA,WAJC,CAIP,KAJO,CAICC,IAJD,CAID,IAJC,CAIP,KAJO,CAID,IAJC,CAI0BC,MAJ1B,CAIP,KAJO,CAI0BA,MAJ1B,CAKP,MAEE,CAAA,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,KAAK,CAAE,CACL,CACEC,eAAe,CACbC,WAAW,EAAIC,IAAI,GAAnBD,UAAAA,CACIE,OAAO,CAAA,SAAA,CAAYJ,MAAM,CAD7BE,OACW,CADXA,CAEIF,MAAM,CAACK,OAJf,CADK,CAOLP,SAAS,EAAIQ,MAAM,CAPd,SAOc,CAPd,CAAA,KAAA,CAFT,CAAA,CAAA,CAFF,CAgBD,C,qBAtBmBZ,KAAK,CAA3B,S,EAwBA,cAAea,CAAAA,SAAS,CAAxB,OAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View, StyleProp, ViewStyle } from 'react-native';\nimport shadow from '../styles/shadow';\nimport { withTheme } from '../core/theming';\nimport overlay from '../styles/overlay';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations.\n * Overlay and/or shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-1.png\" />\n *   <img src=\"screenshots/surface-2.png\" />\n *   <img src=\"screenshots/surface-3.png\" />\n * </div>\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-dark-1.png\" />\n *   <img src=\"screenshots/surface-dark-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *     elevation: 4,\n *   },\n * });\n * ```\n */\nclass Surface extends React.Component<Props> {\n  render() {\n    const { style, theme, ...rest } = this.props;\n    const flattenedStyles = StyleSheet.flatten(style) || {};\n    const { elevation = 4 }: ViewStyle = flattenedStyles;\n    const { dark: isDarkTheme, mode, colors } = theme;\n    return (\n      // @ts-ignore\n      <Animated.View\n        {...rest}\n        style={[\n          {\n            backgroundColor:\n              isDarkTheme && mode === 'adaptive'\n                ? overlay(elevation, colors.surface)\n                : colors.surface,\n          },\n          elevation && shadow(elevation),\n          style,\n        ]}\n      />\n    );\n  }\n}\nexport default withTheme(Surface);\n"]},"metadata":{},"sourceType":"module"}