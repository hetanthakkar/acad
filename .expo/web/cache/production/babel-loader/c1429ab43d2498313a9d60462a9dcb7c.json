{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import PortalConsumer from\"./PortalConsumer\";import PortalHost,{PortalContext}from\"./PortalHost\";import{Provider as SettingsProvider,Consumer as SettingsConsumer}from\"../../core/settings\";import{ThemeProvider,withTheme}from\"../../core/theming\";var Portal=function(_React$Component){_inherits(Portal,_React$Component);var _super=_createSuper(Portal);function Portal(){_classCallCheck(this,Portal);return _super.apply(this,arguments);}_createClass(Portal,[{key:\"render\",value:function render(){var _this$props=this.props,children=_this$props.children,theme=_this$props.theme;return React.createElement(SettingsConsumer,null,function(settings){return React.createElement(PortalContext.Consumer,null,function(manager){return React.createElement(PortalConsumer,{manager:manager},React.createElement(SettingsProvider,{value:settings},React.createElement(ThemeProvider,{theme:theme},children)));});});}}]);return Portal;}(React.Component);_defineProperty(Portal,\"Host\",PortalHost);export default withTheme(Portal);","map":{"version":3,"sources":["Portal.tsx"],"names":["Provider","Consumer","Portal","React","PortalHost","theme","settings","manager","withTheme"],"mappings":"srCAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,cAAA,wBACA,MAAA,CAAA,UAAA,EAAA,aAAA,oBACA,OACEA,QAAQ,GADV,CAAA,gBAAA,CAEEC,QAAQ,GAFV,CAAA,gBAAA,2BAIA,OAAA,aAAA,CAAA,SAAA,0B,GAgCA,CAAA,M,6OAIW,iBACqB,KAA5B,KADO,CACD,QADC,aACD,QADC,CACWI,KADX,aACWA,KADX,CAGP,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,IAAA,CACIC,SAAAA,QAAD,QACC,CAAA,KAAA,CAAA,aAAA,CAAC,aAAD,CAAA,QAAA,CAAA,IAAA,CACIC,SAAAA,OAAD,QACC,CAAA,KAAA,CAAA,aAAA,CAAA,cAAA,CAAA,CAAgB,OAAO,CAAEA,OAAzB,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,CAAkB,KAAK,CAAED,QAAzB,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,CAAe,KAAK,CAAED,KAAtB,CAAA,CAPd,QAOc,CADF,CADF,CADD,EADH,CADD,EADH,CADF,CAeD,C,oBAtBkBF,KAAK,CAA1B,S,kBAAMD,M,QAEUE,U,EAuBhB,cAAeI,CAAAA,SAAS,CAAxB,MAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport PortalConsumer from './PortalConsumer';\nimport PortalHost, { PortalContext, PortalMethods } from './PortalHost';\nimport {\n  Provider as SettingsProvider,\n  Consumer as SettingsConsumer,\n} from '../../core/settings';\nimport { ThemeProvider, withTheme } from '../../core/theming';\n\ntype Props = {\n  /**\n   * Content of the `Portal`.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Portal allows to render a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Portal>\n *     <Text>This is rendered at a different place</Text>\n *   </Portal>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Portal extends React.Component<Props> {\n  // @component ./PortalHost.tsx\n  static Host = PortalHost;\n\n  render() {\n    const { children, theme } = this.props;\n\n    return (\n      <SettingsConsumer>\n        {(settings) => (\n          <PortalContext.Consumer>\n            {(manager) => (\n              <PortalConsumer manager={manager as PortalMethods}>\n                <SettingsProvider value={settings}>\n                  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n                </SettingsProvider>\n              </PortalConsumer>\n            )}\n          </PortalContext.Consumer>\n        )}\n      </SettingsConsumer>\n    );\n  }\n}\n\nexport default withTheme(Portal);\n"]},"metadata":{},"sourceType":"module"}