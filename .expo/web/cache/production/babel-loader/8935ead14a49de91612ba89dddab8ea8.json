{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import PropTypes from'prop-types';import React from'react';import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import Color from\"./Color\";import{StylePropType}from\"./utils\";var styles=StyleSheet.create({container:{alignItems:'center',marginTop:5,marginBottom:10},wrapper:{alignItems:'center',justifyContent:'center',backgroundColor:Color.defaultColor,borderRadius:15,height:30,paddingLeft:10,paddingRight:10},text:{backgroundColor:Color.backgroundTransparent,color:Color.white,fontSize:12},activityIndicator:{marginTop:Platform.select({ios:-14,android:-16,default:-15})}});var LoadEarlier=function(_React$Component){_inherits(LoadEarlier,_React$Component);var _super=_createSuper(LoadEarlier);function LoadEarlier(){_classCallCheck(this,LoadEarlier);return _super.apply(this,arguments);}_createClass(LoadEarlier,[{key:\"renderLoading\",value:function renderLoading(){if(this.props.isLoadingEarlier===false){return React.createElement(Text,{style:[styles.text,this.props.textStyle]},this.props.label);}return React.createElement(View,null,React.createElement(Text,{style:[styles.text,this.props.textStyle,{opacity:0}]},this.props.label),React.createElement(ActivityIndicator,{color:this.props.activityIndicatorColor,size:this.props.activityIndicatorSize,style:[styles.activityIndicator,this.props.activityIndicatorStyle]}));}},{key:\"render\",value:function render(){var _this=this;return React.createElement(TouchableOpacity,{style:[styles.container,this.props.containerStyle],onPress:function onPress(){if(_this.props.onLoadEarlier){_this.props.onLoadEarlier();}},disabled:this.props.isLoadingEarlier===true,accessibilityTraits:\"button\"},React.createElement(View,{style:[styles.wrapper,this.props.wrapperStyle]},this.renderLoading()));}}]);return LoadEarlier;}(React.Component);export{LoadEarlier as default};LoadEarlier.defaultProps={onLoadEarlier:function onLoadEarlier(){},isLoadingEarlier:false,label:'Load earlier messages',containerStyle:{},wrapperStyle:{},textStyle:{},activityIndicatorStyle:{},activityIndicatorColor:'white',activityIndicatorSize:'small'};LoadEarlier.propTypes={onLoadEarlier:PropTypes.func,isLoadingEarlier:PropTypes.bool,label:PropTypes.string,containerStyle:StylePropType,wrapperStyle:StylePropType,textStyle:StylePropType,activityIndicatorStyle:StylePropType,activityIndicatorColor:PropTypes.string,activityIndicatorSize:PropTypes.string};","map":{"version":3,"sources":["../src/LoadEarlier.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { ActivityIndicator, Platform, StyleSheet, Text, TouchableOpacity, View, } from 'react-native';\nimport Color from './Color';\nimport { StylePropType } from './utils';\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        marginTop: 5,\n        marginBottom: 10,\n    },\n    wrapper: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Color.defaultColor,\n        borderRadius: 15,\n        height: 30,\n        paddingLeft: 10,\n        paddingRight: 10,\n    },\n    text: {\n        backgroundColor: Color.backgroundTransparent,\n        color: Color.white,\n        fontSize: 12,\n    },\n    activityIndicator: {\n        marginTop: Platform.select({\n            ios: -14,\n            android: -16,\n            default: -15,\n        }),\n    },\n});\nexport default class LoadEarlier extends React.Component {\n    renderLoading() {\n        if (this.props.isLoadingEarlier === false) {\n            return (<Text style={[styles.text, this.props.textStyle]}>\n          {this.props.label}\n        </Text>);\n        }\n        return (<View>\n        <Text style={[styles.text, this.props.textStyle, { opacity: 0 }]}>\n          {this.props.label}\n        </Text>\n        <ActivityIndicator color={this.props.activityIndicatorColor} size={this.props.activityIndicatorSize} style={[styles.activityIndicator, this.props.activityIndicatorStyle]}/>\n      </View>);\n    }\n    render() {\n        return (<TouchableOpacity style={[styles.container, this.props.containerStyle]} onPress={() => {\n            if (this.props.onLoadEarlier) {\n                this.props.onLoadEarlier();\n            }\n        }} disabled={this.props.isLoadingEarlier === true} accessibilityTraits='button'>\n        <View style={[styles.wrapper, this.props.wrapperStyle]}>\n          {this.renderLoading()}\n        </View>\n      </TouchableOpacity>);\n    }\n}\nLoadEarlier.defaultProps = {\n    onLoadEarlier: () => { },\n    isLoadingEarlier: false,\n    label: 'Load earlier messages',\n    containerStyle: {},\n    wrapperStyle: {},\n    textStyle: {},\n    activityIndicatorStyle: {},\n    activityIndicatorColor: 'white',\n    activityIndicatorSize: 'small',\n};\nLoadEarlier.propTypes = {\n    onLoadEarlier: PropTypes.func,\n    isLoadingEarlier: PropTypes.bool,\n    label: PropTypes.string,\n    containerStyle: StylePropType,\n    wrapperStyle: StylePropType,\n    textStyle: StylePropType,\n    activityIndicatorStyle: StylePropType,\n    activityIndicatorColor: PropTypes.string,\n    activityIndicatorSize: PropTypes.string,\n};\n//# sourceMappingURL=LoadEarlier.js.map"]},"metadata":{},"sourceType":"module"}