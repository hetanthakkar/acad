{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import{RadioButtonContext}from\"./RadioButtonGroup\";import{handlePress,isChecked}from\"./utils\";import TouchableRipple from\"../TouchableRipple\";import{withTheme}from\"../../core/theming\";var BORDER_WIDTH=2;var RadioButtonAndroid=function(_React$Component){_inherits(RadioButtonAndroid,_React$Component);var _super=_createSuper(RadioButtonAndroid);function RadioButtonAndroid(){var _this;_classCallCheck(this,RadioButtonAndroid);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"state\",{borderAnim:new Animated.Value(BORDER_WIDTH),radioAnim:new Animated.Value(1)});return _this;}_createClass(RadioButtonAndroid,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(prevProps.status===this.props.status){return;}var scale=this.props.theme.animation.scale;if(this.props.status==='checked'){this.state.radioAnim.setValue(1.2);Animated.timing(this.state.radioAnim,{toValue:1,duration:150*scale,useNativeDriver:true}).start();}else{this.state.borderAnim.setValue(10);Animated.timing(this.state.borderAnim,{toValue:BORDER_WIDTH,duration:150*scale,useNativeDriver:false}).start();}}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,disabled=_this$props.disabled,onPress=_this$props.onPress,theme=_this$props.theme,value=_this$props.value,status=_this$props.status,rest=_objectWithoutProperties(_this$props,[\"disabled\",\"onPress\",\"theme\",\"value\",\"status\"]);var checkedColor=this.props.color||theme.colors.accent;var uncheckedColor=this.props.uncheckedColor||color(theme.colors.text).alpha(theme.dark?0.7:0.54).rgb().string();var rippleColor,radioColor;return React.createElement(RadioButtonContext.Consumer,null,function(context){var checked=isChecked({contextValue:context===null||context===void 0?void 0:context.value,status:status,value:value})==='checked';if(disabled){rippleColor=color(theme.colors.text).alpha(0.16).rgb().string();radioColor=theme.colors.disabled;}else{rippleColor=color(checkedColor).fade(0.32).rgb().string();radioColor=checked?checkedColor:uncheckedColor;}return React.createElement(TouchableRipple,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:disabled?undefined:function(){handlePress({onPress:onPress,onValueChange:context===null||context===void 0?void 0:context.onValueChange,value:value});},accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:checked?'radiobutton_checked':'radiobutton_unchecked',accessibilityRole:\"button\",accessibilityState:{disabled:disabled},accessibilityLiveRegion:\"polite\",style:styles.container}),React.createElement(Animated.View,{style:[styles.radio,{borderColor:radioColor,borderWidth:_this2.state.borderAnim}]},checked?React.createElement(View,{style:[StyleSheet.absoluteFill,styles.radioContainer]},React.createElement(Animated.View,{style:[styles.dot,{backgroundColor:radioColor,transform:[{scale:_this2.state.radioAnim}]}]})):null));});}}]);return RadioButtonAndroid;}(React.Component);_defineProperty(RadioButtonAndroid,\"displayName\",'RadioButton.Android');var styles=StyleSheet.create({container:{borderRadius:18},radioContainer:{alignItems:'center',justifyContent:'center'},radio:{height:20,width:20,borderRadius:10,margin:8},dot:{height:10,width:10,borderRadius:5}});export default withTheme(RadioButtonAndroid);export{RadioButtonAndroid};","map":{"version":3,"sources":["RadioButtonAndroid.tsx"],"names":["BORDER_WIDTH","RadioButtonAndroid","React","borderAnim","Animated","radioAnim","prevProps","scale","toValue","duration","useNativeDriver","status","checkedColor","theme","uncheckedColor","color","context","checked","contextValue","value","rippleColor","radioColor","disabled","handlePress","onPress","onValueChange","styles","container","borderColor","borderWidth","StyleSheet","backgroundColor","transform","borderRadius","radioContainer","alignItems","justifyContent","radio","height","width","margin","dot","withTheme"],"mappings":"suEAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,mLAEA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,kBAAA,0BACA,OAAA,WAAA,CAAA,SAAA,eACA,MAAA,CAAA,eAAA,0BACA,OAAA,SAAA,0BAuCA,GAAMA,CAAAA,YAAY,CAAlB,CAAA,C,GAiBA,CAAA,kB,uHAA+D,6BAAA,kFAAA,IAAA,0CAAA,IAAA,wBAAA,6CAAA,IAAA,GAAA,eAAA,+BAAA,OAAA,CAGrD,CACNG,UAAU,CAAE,GAAIC,CAAAA,QAAQ,CAAZ,KAAA,CADN,YACM,CADN,CAENC,SAAS,CAAE,GAAID,CAAAA,QAAQ,CAAZ,KAAA,CAAA,CAAA,CAFL,CAHqD,CAAA,CAAA,aAAA,C,6FAQ3C,S,CAAmB,CACnC,GAAIE,SAAS,CAATA,MAAAA,GAAqB,KAAA,KAAA,CAAzB,MAAA,CAA4C,CAC1C,OACD,CAHkC,GAI3BC,CAAAA,KAJ2B,CAIjB,KAAA,KAAA,CAAA,KAAA,CAAlB,SAJmC,CAI3BA,KAJ2B,CAKnC,GAAI,KAAA,KAAA,CAAA,MAAA,GAAJ,SAAA,CAAqC,CACnC,KAAA,KAAA,CAAA,SAAA,CAAA,QAAA,CAAA,GAAA,EAEAH,QAAQ,CAARA,MAAAA,CAAgB,KAAA,KAAA,CAAhBA,SAAAA,CAAsC,CACpCI,OAAO,CAD6B,CAAA,CAEpCC,QAAQ,CAAE,IAF0B,KAAA,CAGpCC,eAAe,CAAE,IAHmB,CAAtCN,EAAAA,KAAAA,GAHF,CAAA,IAQO,CACL,KAAA,KAAA,CAAA,UAAA,CAAA,QAAA,CAAA,EAAA,EAEAA,QAAQ,CAARA,MAAAA,CAAgB,KAAA,KAAA,CAAhBA,UAAAA,CAAuC,CACrCI,OAAO,CAD8B,YAAA,CAErCC,QAAQ,CAAE,IAF2B,KAAA,CAGrCC,eAAe,CAAE,KAHoB,CAAvCN,EAAAA,KAAAA,GAKD,CACF,C,uCAEQ,iBACP,GAAA,CAAA,WAAA,CAA6D,KAA7D,KAAA,CAAM,QAAN,CAAA,WAAA,CAAM,QAAN,CAAM,OAAN,CAAA,WAAA,CAAM,OAAN,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAAM,KAAN,CAAA,WAAA,CAAM,KAAN,CAAyCO,MAAzC,CAAA,WAAA,CAAyCA,MAAzC,CAAA,IAAA,CAAA,wBAAA,CAAA,WAAA,CAAA,CAAA,UAAA,CAAA,SAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA,CACA,GAAMC,CAAAA,YAAY,CAAG,KAAA,KAAA,CAAA,KAAA,EAAoBC,KAAK,CAALA,MAAAA,CAAzC,MAAA,CACA,GAAMC,CAAAA,cAAc,CAClB,KAAA,KAAA,CAAA,cAAA,EACAC,KAAK,CAACF,KAAK,CAALA,MAAAA,CAANE,IAAK,CAALA,CAAAA,KAAAA,CACSF,KAAK,CAALA,IAAAA,CAAAA,GAAAA,CADTE,IAAAA,EAAAA,GAAAA,GAFF,MAEEA,EAFF,CAOA,GAAA,CAAA,WAAA,CAAA,UAAA,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,kBAAD,CAAA,QAAA,CAAA,IAAA,CACIC,SAAAA,OAAD,CAAsC,CACrC,GAAMC,CAAAA,OAAO,CACX,SAAS,CAAC,CACRC,YAAY,CAAEF,OAAF,GAAA,IAAEA,EAAAA,OAAF,GAAA,IAAA,EAAEA,CAAF,IAAA,EAAEA,CAAAA,OAAO,CADb,KAAA,CAERL,MAFQ,CAERA,MAFQ,CAGRQ,KAAAA,CAAAA,KAHQ,CAAD,CAAT,GADF,SAAA,CAOA,GAAA,QAAA,CAAc,CACZC,WAAW,CAAGL,KAAK,CAACF,KAAK,CAALA,MAAAA,CAANE,IAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAdK,MAAcL,EAAdK,CACAC,UAAU,CAAGR,KAAK,CAALA,MAAAA,CAAbQ,QAAAA,CAFF,CAAA,IAGO,CACLD,WAAW,CAAGL,KAAK,CAALA,YAAK,CAALA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAdK,MAAcL,EAAdK,CACAC,UAAU,CAAGJ,OAAO,CAAA,YAAA,CAApBI,cAAAA,CACD,CAED,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,UAAU,CAFZ,IAAA,CAGE,WAAW,CAHb,WAAA,CAIE,OAAO,CACLC,QAAQ,CAAA,SAAA,CAEJ,UAAM,CACJC,WAAW,CAAC,CACVC,OADU,CACVA,OADU,CAEVC,aAAa,CAAET,OAAF,GAAA,IAAEA,EAAAA,OAAF,GAAA,IAAA,EAAEA,CAAF,IAAA,EAAEA,CAAAA,OAAO,CAFZ,aAAA,CAGVG,KAAAA,CAAAA,KAHU,CAAD,CAAXI,CARV,CAAA,CAeE,mBAAmB,CAAED,QAAQ,CAAG,CAAA,QAAA,CAAH,UAAG,CAAH,CAf/B,QAAA,CAgBE,0BAA0B,CACxBL,OAAO,CAAA,qBAAA,CAjBX,uBAAA,CAmBE,iBAAiB,CAnBnB,QAAA,CAoBE,kBAAkB,CAAE,CAAEK,QAAAA,CAAAA,QAAF,CApBtB,CAqBE,uBAAuB,CArBzB,QAAA,CAsBE,KAAK,CAAEI,MAAM,CAACC,SAtBhB,CAAA,CAAA,CAwBE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,CAAA,CACE,KAAK,CAAE,CACLD,MAAM,CADD,KAAA,CAEL,CACEE,WAAW,CADb,UAAA,CAEEC,WAAW,CAAE,MAAA,CAAA,KAAA,CAAW1B,UAF1B,CAFK,CADT,CAAA,CASGc,OAAO,CACN,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,KAAK,CAAE,CAACa,UAAU,CAAX,YAAA,CAA0BJ,MAAM,CAAhC,cAAA,CADT,CAAA,CAGE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,CAAA,CACE,KAAK,CAAE,CACLA,MAAM,CADD,GAAA,CAEL,CACEK,eAAe,CADjB,UAAA,CAEEC,SAAS,CAAE,CAAC,CAAEzB,KAAK,CAAE,MAAA,CAAA,KAAA,CAAWF,SAApB,CAAD,CAFb,CAFK,CADT,CAAA,CAHF,CADM,CAlCd,IAyBI,CAxBF,CADF,CAlBN,CACE,CADF,CAyED,C,gCArH8BH,KAAK,CAAtC,S,kBAAMD,kB,eACiB,qB,EAuHvB,GAAMyB,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTM,YAAY,CAAE,EADL,CADoB,CAI/BC,cAAc,CAAE,CACdC,UAAU,CADI,QAAA,CAEdC,cAAc,CAAE,QAFF,CAJe,CAQ/BC,KAAK,CAAE,CACLC,MAAM,CADD,EAAA,CAELC,KAAK,CAFA,EAAA,CAGLN,YAAY,CAHP,EAAA,CAILO,MAAM,CAAE,CAJH,CARwB,CAc/BC,GAAG,CAAE,CACHH,MAAM,CADH,EAAA,CAEHC,KAAK,CAFF,EAAA,CAGHN,YAAY,CAAE,CAHX,CAd0B,CAAlB,CAAf,CAqBA,cAAeS,CAAAA,SAAS,CAAxB,kBAAwB,CAAxB,CAGA,OAAA,kBAAA","sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport color from 'color';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport TouchableRipple from '../TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (param?: any) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype State = {\n  borderAnim: Animated.Value;\n  radioAnim: Animated.Value;\n};\n\nconst BORDER_WIDTH = 2;\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nclass RadioButtonAndroid extends React.Component<Props, State> {\n  static displayName = 'RadioButton.Android';\n\n  state = {\n    borderAnim: new Animated.Value(BORDER_WIDTH),\n    radioAnim: new Animated.Value(1),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.status === this.props.status) {\n      return;\n    }\n    const { scale } = this.props.theme.animation;\n    if (this.props.status === 'checked') {\n      this.state.radioAnim.setValue(1.2);\n\n      Animated.timing(this.state.radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      this.state.borderAnim.setValue(10);\n\n      Animated.timing(this.state.borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false,\n      }).start();\n    }\n  }\n\n  render() {\n    const { disabled, onPress, theme, value, status, ...rest } = this.props;\n    const checkedColor = this.props.color || theme.colors.accent;\n    const uncheckedColor =\n      this.props.uncheckedColor ||\n      color(theme.colors.text)\n        .alpha(theme.dark ? 0.7 : 0.54)\n        .rgb()\n        .string();\n\n    let rippleColor: string, radioColor: string;\n\n    return (\n      <RadioButtonContext.Consumer>\n        {(context?: RadioButtonContextType) => {\n          const checked =\n            isChecked({\n              contextValue: context?.value,\n              status,\n              value,\n            }) === 'checked';\n\n          if (disabled) {\n            rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n            radioColor = theme.colors.disabled;\n          } else {\n            rippleColor = color(checkedColor).fade(0.32).rgb().string();\n            radioColor = checked ? checkedColor : uncheckedColor;\n          }\n\n          return (\n            <TouchableRipple\n              {...rest}\n              borderless\n              rippleColor={rippleColor}\n              onPress={\n                disabled\n                  ? undefined\n                  : () => {\n                      handlePress({\n                        onPress,\n                        onValueChange: context?.onValueChange,\n                        value,\n                      });\n                    }\n              }\n              accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n              accessibilityComponentType={\n                checked ? 'radiobutton_checked' : 'radiobutton_unchecked'\n              }\n              accessibilityRole=\"button\"\n              accessibilityState={{ disabled }}\n              accessibilityLiveRegion=\"polite\"\n              style={styles.container}\n            >\n              <Animated.View\n                style={[\n                  styles.radio,\n                  {\n                    borderColor: radioColor,\n                    borderWidth: this.state.borderAnim,\n                  },\n                ]}\n              >\n                {checked ? (\n                  <View\n                    style={[StyleSheet.absoluteFill, styles.radioContainer]}\n                  >\n                    <Animated.View\n                      style={[\n                        styles.dot,\n                        {\n                          backgroundColor: radioColor,\n                          transform: [{ scale: this.state.radioAnim }],\n                        },\n                      ]}\n                    />\n                  </View>\n                ) : null}\n              </Animated.View>\n            </TouchableRipple>\n          );\n        }}\n      </RadioButtonContext.Consumer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8,\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n  },\n});\n\nexport default withTheme(RadioButtonAndroid);\n\n// @component-docs ignore-next-line\nexport { RadioButtonAndroid };\n"]},"metadata":{},"sourceType":"module"}