{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\components\\\\Block.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as theme from \"../theme\";\n\nvar Block = function (_Component) {\n  _inherits(Block, _Component);\n\n  var _super = _createSuper(Block);\n\n  function Block() {\n    _classCallCheck(this, Block);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Block, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          flex = _this$props.flex,\n          row = _this$props.row,\n          column = _this$props.column,\n          center = _this$props.center,\n          middle = _this$props.middle,\n          left = _this$props.left,\n          right = _this$props.right,\n          card = _this$props.card,\n          shadow = _this$props.shadow,\n          color = _this$props.color,\n          space = _this$props.space,\n          style = _this$props.style,\n          children = _this$props.children,\n          props = _objectWithoutProperties(_this$props, [\"flex\", \"row\", \"column\", \"center\", \"middle\", \"left\", \"right\", \"card\", \"shadow\", \"color\", \"space\", \"style\", \"children\"]);\n\n      var blockStyles = [styles.block, flex && {\n        flex: flex\n      }, flex === false && {\n        flex: 0\n      }, row && styles.row, column && styles.column, center && styles.center, middle && styles.middle, left && styles.left, right && styles.right, card && styles.card, shadow && styles.shadow, space && {\n        justifyContent: \"space-\" + space\n      }, color && styles[color], color && !styles[color] && {\n        backgroundColor: color\n      }, style];\n      return React.createElement(View, _extends({\n        style: blockStyles\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }), children);\n    }\n  }]);\n\n  return Block;\n}(Component);\n\nexport { Block as default };\nvar styles = StyleSheet.create({\n  block: {\n    flex: 1\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  column: {\n    flexDirection: 'column'\n  },\n  card: {\n    borderRadius: theme.sizes.border\n  },\n  center: {\n    alignItems: 'center'\n  },\n  middle: {\n    justifyContent: 'center'\n  },\n  left: {\n    justifyContent: 'flex-start'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  },\n  shadow: {\n    shadowColor: theme.colors.black,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 10\n  },\n  accent: {\n    backgroundColor: theme.colors.accent\n  },\n  primary: {\n    backgroundColor: theme.colors.primary\n  },\n  secondary: {\n    backgroundColor: theme.colors.secondary\n  },\n  tertiary: {\n    backgroundColor: theme.colors.tertiary\n  },\n  black: {\n    backgroundColor: theme.colors.black\n  },\n  white: {\n    backgroundColor: theme.colors.white\n  },\n  gray: {\n    backgroundColor: theme.colors.gray\n  },\n  gray2: {\n    backgroundColor: theme.colors.gray2\n  }\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/components/Block.js"],"names":["React","Component","theme","Block","props","flex","row","column","center","middle","left","right","card","shadow","color","space","style","children","blockStyles","styles","block","justifyContent","backgroundColor","StyleSheet","create","flexDirection","borderRadius","sizes","border","alignItems","shadowColor","colors","black","shadowOffset","width","height","shadowOpacity","shadowRadius","accent","primary","secondary","tertiary","white","gray","gray2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { StyleSheet, View } from 'react-native'\r\n\r\nimport * as theme from '../theme';\r\n\r\nexport default class Block extends Component {\r\n  render() {\r\n    const {\r\n      flex,\r\n      row,\r\n      column,\r\n      center,\r\n      middle,\r\n      left,\r\n      right,\r\n      card,\r\n      shadow,\r\n      color,\r\n      space,\r\n      style,\r\n      children,\r\n      ...props\r\n    } = this.props;\r\n\r\n    const blockStyles = [\r\n      styles.block,\r\n      flex && { flex },\r\n      flex === false && { flex: 0 }, // reset / disable flex\r\n      row && styles.row,\r\n      column && styles.column,\r\n      center && styles.center,\r\n      middle && styles.middle,\r\n      left && styles.left,\r\n      right && styles.right,\r\n      card && styles.card,\r\n      shadow && styles.shadow,\r\n      space && { justifyContent: `space-${space}` },\r\n      color && styles[color], // predefined styles colors for backgroundColor\r\n      color && !styles[color] && { backgroundColor: color }, // custom backgroundColor\r\n      style, // rewrite predefined styles\r\n    ];\r\n\r\n    return (\r\n      <View style={blockStyles} {...props}>\r\n        {children}\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  block: {\r\n    flex: 1,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n  },\r\n  column: {\r\n    flexDirection: 'column',\r\n  },\r\n  card: {\r\n    borderRadius: theme.sizes.border,\r\n  },\r\n  center: {\r\n    alignItems: 'center',\r\n  },\r\n  middle: {\r\n    justifyContent: 'center',\r\n  },\r\n  left: {\r\n    justifyContent: 'flex-start',\r\n  },\r\n  right: {\r\n    justifyContent: 'flex-end',\r\n  },\r\n  shadow: {\r\n    shadowColor: theme.colors.black,\r\n    shadowOffset: { width: 0, height: 4 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 10,\r\n  },\r\n  accent: { backgroundColor: theme.colors.accent, },\r\n  primary: { backgroundColor: theme.colors.primary, },\r\n  secondary: { backgroundColor: theme.colors.secondary, },\r\n  tertiary: { backgroundColor: theme.colors.tertiary, },\r\n  black: { backgroundColor: theme.colors.black, },\r\n  white: { backgroundColor: theme.colors.white, },\r\n  gray: { backgroundColor: theme.colors.gray, },\r\n  gray2: { backgroundColor: theme.colors.gray2, } ,\r\n})\r\n"]},"metadata":{},"sourceType":"module"}