{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\main2.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar width = Dimensions.get(\"window\");\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport Icon from \"./icons\";\n\nvar NavigationDrawerStructure = function (_Component) {\n  _inherits(NavigationDrawerStructure, _Component);\n\n  var _super = _createSuper(NavigationDrawerStructure);\n\n  function NavigationDrawerStructure() {\n    var _this;\n\n    _classCallCheck(this, NavigationDrawerStructure);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.toggleDrawer = function () {\n      _this.props.navigationProps.toggleDrawer();\n    };\n\n    return _this;\n  }\n\n  _createClass(NavigationDrawerStructure, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.openDrawer;\n        },\n        style: {\n          marginTop: \"6%\",\n          marginLeft: \"2%\",\n          marginRight: \"6%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, React.createElement(Icon, {\n        family: \"FontAwesome\",\n        name: \"bars\",\n        size: 23,\n        color: \"#FFF\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return NavigationDrawerStructure;\n}(Component);\n\nexport { NavigationDrawerStructure as default };","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/main2.js"],"names":["React","Component","width","Dimensions","get","TouchableOpacity","Icon","NavigationDrawerStructure","toggleDrawer","props","navigationProps","navigation","openDrawer","marginTop","marginLeft","marginRight"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,IAAMC,KAAK,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAd;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,IAAP;;IACqBC,yB;;;;;;;;;;;;;;;;UAEnBC,Y,GAAe,YAAM;AAEnB,YAAKC,KAAL,CAAWC,eAAX,CAA2BF,YAA3B;AACD,K;;;;;;;6BACQ;AAAA;;AACP,aACE,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,KAAL,CAAWE,UAAX,CAAsBC,UAA5B;AAAA,SADX;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAE,IADN;AAELC,UAAAA,UAAU,EAAE,IAFP;AAGLC,UAAAA,WAAW,EAAE;AAHR,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAC,aAAb;AAA2B,QAAA,IAAI,EAAC,MAAhC;AAAuC,QAAA,IAAI,EAAE,EAA7C;AAAiD,QAAA,KAAK,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAaD;;;;EApBoDd,S;;SAAlCM,yB","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Text, View, Image, Dimensions } from \"react-native\";\r\nconst width = Dimensions.get(\"window\");\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport Icon from \"./icons\";\r\nexport default class NavigationDrawerStructure extends Component {\r\n  //Top Navigation Header with Donute Button\r\n  toggleDrawer = () => {\r\n    //Props to open/close the drawer\r\n    this.props.navigationProps.toggleDrawer();\r\n  };\r\n  render() {\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={() => this.props.navigation.openDrawer}\r\n        style={{\r\n          marginTop: \"6%\",\r\n          marginLeft: \"2%\",\r\n          marginRight: \"6%\",\r\n        }}\r\n      >\r\n        {/*Donute Button Image */}\r\n        <Icon family=\"FontAwesome\" name=\"bars\" size={23} color=\"#FFF\" />\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}