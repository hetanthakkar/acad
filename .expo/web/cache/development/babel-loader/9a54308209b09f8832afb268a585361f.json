{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\screens\\\\ScheduleDay.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { StackNavigator } from 'react-navigation';\nimport { ScrollView, RectButton } from 'react-native-gesture-handler';\nimport _ from 'lodash';\nimport { RegularText, SemiBoldText, BoldText } from \"../components/StyledText\";\nimport LoadingPlaceholder from \"../components/LoadingPlaceholder\";\nimport { Colors, Layout } from \"../constants\";\nimport MenuButton from \"../components/MenuButton\";\nimport SaveIconWhenSaved from \"../components/SaveIconWhenSaved\";\nimport { convertUtcDateToEventTimezoneHour } from \"../utils\";\n\nvar ScheduleRow = function (_React$Component) {\n  _inherits(ScheduleRow, _React$Component);\n\n  var _super = _createSuper(ScheduleRow);\n\n  function ScheduleRow() {\n    var _this;\n\n    _classCallCheck(this, ScheduleRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._handlePress = function () {\n      _this.props.onPress && _this.props.onPress(_this.props.item);\n    };\n\n    return _this;\n  }\n\n  _createClass(ScheduleRow, [{\n    key: \"render\",\n    value: function render() {\n      var item = this.props.item;\n      var content = React.createElement(View, {\n        style: [styles.row, item.talk && styles.rowStatic],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, React.createElement(BoldText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, React.createElement(SaveIconWhenSaved, {\n        talk: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }), item.title), item.speakers ? item.speakers.map(function (speaker) {\n        return React.createElement(SemiBoldText, {\n          key: speaker.id + item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }\n        }, speaker.name);\n      }) : null, React.createElement(RegularText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, item.room));\n      return React.createElement(RectButton, {\n        activeOpacity: 0.05,\n        onPress: this._handlePress,\n        style: {\n          flex: 1,\n          backgroundColor: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, content);\n    }\n  }]);\n\n  return ScheduleRow;\n}(React.Component);\n\nexport default function ScheduleDay(options) {\n  var ScheduleDayComponent = function (_React$Component2) {\n    _inherits(ScheduleDayComponent, _React$Component2);\n\n    var _super2 = _createSuper(ScheduleDayComponent);\n\n    function ScheduleDayComponent(props) {\n      var _this2;\n\n      _classCallCheck(this, ScheduleDayComponent);\n\n      _this2 = _super2.call(this, props);\n\n      _this2._renderSectionHeader = function (_ref) {\n        var section = _ref.section;\n        return React.createElement(View, {\n          style: styles.sectionHeader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }\n        }, React.createElement(RegularText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }\n        }, section.title));\n      };\n\n      _this2._renderItem = function (_ref2) {\n        var item = _ref2.item;\n        return React.createElement(ScheduleRow, {\n          item: item,\n          onPress: _this2._handlePressRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 14\n          }\n        });\n      };\n\n      _this2._handlePressRow = function (item) {\n        _this2.props.screenProps.parentNavigation.navigate('Details', {\n          scheduleSlot: item\n        });\n      };\n\n      var event = _this2.props.screenProps.event;\n      var FullSchedule = event.groupedSchedule;\n\n      var schedule = _.find(FullSchedule, function (schedule) {\n        return schedule.title === options.day;\n      });\n\n      var slotsByTime = _.groupBy(schedule.slots, function (slot) {\n        return slot.startDate;\n      });\n\n      _this2.slotsData = _.map(slotsByTime, function (data, time) {\n        return {\n          data: data,\n          title: convertUtcDateToEventTimezoneHour(time)\n        };\n      });\n      return _this2;\n    }\n\n    _createClass(ScheduleDayComponent, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(LoadingPlaceholder, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }\n        }, React.createElement(SectionList, {\n          renderScrollComponent: function renderScrollComponent(props) {\n            return React.createElement(ScrollView, _extends({}, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 45\n              }\n            }));\n          },\n          stickySectionHeadersEnabled: true,\n          renderItem: this._renderItem,\n          renderSectionHeader: this._renderSectionHeader,\n          sections: this.slotsData,\n          keyExtractor: function keyExtractor(item) {\n            return _.snakeCase(item.title);\n          },\n          initialNumToRender: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        }));\n      }\n    }]);\n\n    return ScheduleDayComponent;\n  }(React.Component);\n\n  return ScheduleDayComponent;\n}\nvar styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    padding: 10,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: '#eee'\n  },\n  rowStatic: {\n    backgroundColor: '#f5f5f5',\n    opacity: 0.5\n  },\n  sectionHeader: {\n    paddingHorizontal: 10,\n    paddingTop: 7,\n    paddingBottom: 5,\n    backgroundColor: '#eee',\n    borderWidth: 1,\n    borderColor: '#eee'\n  }\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/screens/ScheduleDay.js"],"names":["React","StackNavigator","ScrollView","RectButton","_","RegularText","SemiBoldText","BoldText","LoadingPlaceholder","Colors","Layout","MenuButton","SaveIconWhenSaved","convertUtcDateToEventTimezoneHour","ScheduleRow","_handlePress","props","onPress","item","content","styles","row","talk","rowStatic","title","speakers","map","speaker","id","name","room","flex","backgroundColor","Component","ScheduleDay","options","ScheduleDayComponent","_renderSectionHeader","section","sectionHeader","_renderItem","_handlePressRow","screenProps","parentNavigation","navigate","scheduleSlot","event","FullSchedule","groupedSchedule","schedule","find","day","slotsByTime","groupBy","slots","slot","startDate","slotsData","data","time","snakeCase","StyleSheet","create","padding","borderBottomWidth","hairlineWidth","borderColor","opacity","paddingHorizontal","paddingTop","paddingBottom","borderWidth"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {SectionList, StyleSheet, View} from 'react-native';\r\nimport {StackNavigator} from 'react-navigation';\r\nimport {ScrollView, RectButton} from 'react-native-gesture-handler';\r\nimport _ from 'lodash';\r\n\r\nimport {RegularText, SemiBoldText, BoldText} from '../components/StyledText';\r\nimport LoadingPlaceholder from '../components/LoadingPlaceholder';\r\nimport {Colors, Layout} from '../constants';\r\nimport MenuButton from '../components/MenuButton';\r\nimport SaveIconWhenSaved from '../components/SaveIconWhenSaved';\r\nimport {convertUtcDateToEventTimezoneHour} from '../utils';\r\n\r\nclass ScheduleRow extends React.Component {\r\n  render() {\r\n    const {item} = this.props;\r\n\r\n    const content = (\r\n      <View style={[styles.row, item.talk && styles.rowStatic]}>\r\n        <BoldText>\r\n          <SaveIconWhenSaved talk={item} />\r\n          {item.title}\r\n        </BoldText>\r\n\r\n        {item.speakers\r\n          ? item.speakers.map(speaker => (\r\n              <SemiBoldText key={speaker.id + item.title}>\r\n                {speaker.name}\r\n              </SemiBoldText>\r\n            ))\r\n          : null}\r\n        <RegularText>{item.room}</RegularText>\r\n      </View>\r\n    );\r\n\r\n    return (\r\n      <RectButton\r\n        activeOpacity={0.05}\r\n        onPress={this._handlePress}\r\n        style={{flex: 1, backgroundColor: '#fff'}}>\r\n        {content}\r\n      </RectButton>\r\n    );\r\n  }\r\n\r\n  _handlePress = () => {\r\n    this.props.onPress && this.props.onPress(this.props.item);\r\n  };\r\n}\r\n\r\nexport default function ScheduleDay(options) {\r\n  // const schedule = FullSchedule[0]\r\n  class ScheduleDayComponent extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      const event = this.props.screenProps.event;\r\n      const FullSchedule = event.groupedSchedule;\r\n      const schedule = _.find(\r\n        FullSchedule,\r\n        schedule => schedule.title === options.day\r\n      );\r\n\r\n      const slotsByTime = _.groupBy(schedule.slots, slot => slot.startDate);\r\n      this.slotsData = _.map(slotsByTime, (data, time) => {\r\n        return {data, title: convertUtcDateToEventTimezoneHour(time)};\r\n      });\r\n    }\r\n    render() {\r\n      return (\r\n        <LoadingPlaceholder>\r\n          <SectionList\r\n            renderScrollComponent={props => <ScrollView {...props} />}\r\n            stickySectionHeadersEnabled={true}\r\n            renderItem={this._renderItem}\r\n            renderSectionHeader={this._renderSectionHeader}\r\n            sections={this.slotsData}\r\n            keyExtractor={item => _.snakeCase(item.title)}\r\n            initialNumToRender={10}\r\n          />\r\n        </LoadingPlaceholder>\r\n      );\r\n    }\r\n\r\n    _renderSectionHeader = ({section}) => {\r\n      return (\r\n        <View style={styles.sectionHeader}>\r\n          <RegularText>{section.title}</RegularText>\r\n        </View>\r\n      );\r\n    };\r\n\r\n    _renderItem = ({item}) => {\r\n      return <ScheduleRow item={item} onPress={this._handlePressRow} />;\r\n    };\r\n\r\n    _handlePressRow = item => {\r\n      this.props.screenProps.parentNavigation.navigate('Details', {scheduleSlot: item});\r\n    };\r\n  }\r\n\r\n  return ScheduleDayComponent;\r\n\r\n  // return StackNavigator(\r\n  //   {\r\n  //     Day: {\r\n  //       screen: ScheduleDayComponent\r\n  //     }\r\n  //   },\r\n  //   {\r\n  //     cardStyle: {\r\n  //       backgroundColor: '#fafafa'\r\n  //     },\r\n  //     navigationOptions: {\r\n  //       headerTitleStyle: {\r\n  //         fontFamily: 'open-sans-bold'\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flex: 1,\r\n    padding: 10,\r\n    borderBottomWidth: StyleSheet.hairlineWidth,\r\n    borderColor: '#eee',\r\n  },\r\n  rowStatic: {\r\n    backgroundColor: '#f5f5f5',\r\n    opacity: 0.5,\r\n  },\r\n  sectionHeader: {\r\n    paddingHorizontal: 10,\r\n    paddingTop: 7,\r\n    paddingBottom: 5,\r\n    backgroundColor: '#eee',\r\n    borderWidth: 1,\r\n    borderColor: '#eee',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}