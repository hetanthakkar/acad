{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\node_modules\\\\react-native-maps\\\\lib\\\\components\\\\MapHeatmap.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport View from \"react-native-web/dist/exports/View\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport decorateMapComponent, { SUPPORTED, USES_DEFAULT_IMPLEMENTATION } from \"./decorateMapComponent\";\nvar viewPropTypes = ViewPropTypes || View.propTypes;\n\nvar propTypes = _objectSpread({}, viewPropTypes, {\n  points: PropTypes.arrayOf(PropTypes.shape({\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired,\n    weight: PropTypes.number\n  })),\n  radius: PropTypes.number,\n  opacity: PropTypes.number,\n  gradient: PropTypes.shape({\n    colors: PropTypes.arrayOf(PropTypes.string),\n    startPoints: PropTypes.arrayOf(PropTypes.number),\n    colorMapSize: PropTypes.number\n  })\n});\n\nvar defaultProps = {\n  strokeColor: '#000',\n  strokeWidth: 1\n};\n\nvar MapHeatmap = function (_React$Component) {\n  _inherits(MapHeatmap, _React$Component);\n\n  function MapHeatmap() {\n    _classCallCheck(this, MapHeatmap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MapHeatmap).apply(this, arguments));\n  }\n\n  _createClass(MapHeatmap, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      this.heatmap.setNativeProps(props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var AIRMapHeatmap = this.getAirComponent();\n      var gradient;\n\n      if (this.props.gradient) {\n        gradient = _extends({}, this.props.gradient);\n        gradient.colors = gradient.colors.map(function (c) {\n          return processColor(c);\n        });\n      }\n\n      return React.createElement(AIRMapHeatmap, _extends({}, this.props, {\n        gradient: gradient,\n        ref: function ref(_ref) {\n          _this.heatmap = _ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }));\n    }\n  }]);\n\n  return MapHeatmap;\n}(React.Component);\n\nMapHeatmap.propTypes = propTypes;\nMapHeatmap.defaultProps = defaultProps;\nexport default decorateMapComponent(MapHeatmap, {\n  componentType: 'Heatmap',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/node_modules/react-native-maps/lib/components/MapHeatmap.js"],"names":["PropTypes","React","decorateMapComponent","SUPPORTED","USES_DEFAULT_IMPLEMENTATION","viewPropTypes","ViewPropTypes","View","propTypes","points","arrayOf","shape","latitude","number","isRequired","longitude","weight","radius","opacity","gradient","colors","string","startPoints","colorMapSize","defaultProps","strokeColor","strokeWidth","MapHeatmap","props","heatmap","setNativeProps","AIRMapHeatmap","getAirComponent","map","c","processColor","ref","Component","componentType","providers","google","ios","android"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,oBAAP,IACEC,SADF,EAEEC,2BAFF;AAMA,IAAMC,aAAa,GAAGC,aAAa,IAAIC,IAAI,CAACC,SAA5C;;AAEA,IAAMA,SAAS,qBACVH,aADU;AAMbI,EAAAA,MAAM,EAAET,SAAS,CAACU,OAAV,CACNV,SAAS,CAACW,KAAV,CAAgB;AAIdC,IAAAA,QAAQ,EAAEZ,SAAS,CAACa,MAAV,CAAiBC,UAJb;AAKdC,IAAAA,SAAS,EAAEf,SAAS,CAACa,MAAV,CAAiBC,UALd;AAMdE,IAAAA,MAAM,EAAEhB,SAAS,CAACa;AANJ,GAAhB,CADM,CANK;AAqBbI,EAAAA,MAAM,EAAEjB,SAAS,CAACa,MArBL;AA0BbK,EAAAA,OAAO,EAAElB,SAAS,CAACa,MA1BN;AA+BbM,EAAAA,QAAQ,EAAEnB,SAAS,CAACW,KAAV,CAAgB;AAIxBS,IAAAA,MAAM,EAAEpB,SAAS,CAACU,OAAV,CAAkBV,SAAS,CAACqB,MAA5B,CAJgB;AASxBC,IAAAA,WAAW,EAAEtB,SAAS,CAACU,OAAV,CAAkBV,SAAS,CAACa,MAA5B,CATW;AAcxBU,IAAAA,YAAY,EAAEvB,SAAS,CAACa;AAdA,GAAhB;AA/BG,EAAf;;AAiDA,IAAMW,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,MADM;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;;IAKMC,U;;;;;;;;;;;mCACWC,K,EAAO;AACpB,WAAKC,OAAL,CAAaC,cAAb,CAA4BF,KAA5B;AACD;;;6BAEQ;AAAA;;AACP,UAAMG,aAAa,GAAG,KAAKC,eAAL,EAAtB;AACA,UAAIb,QAAJ;;AACA,UAAI,KAAKS,KAAL,CAAWT,QAAf,EAAyB;AACvBA,QAAAA,QAAQ,GAAG,SAAc,EAAd,EAAkB,KAAKS,KAAL,CAAWT,QAA7B,CAAX;AACAA,QAAAA,QAAQ,CAACC,MAAT,GAAkBD,QAAQ,CAACC,MAAT,CAAgBa,GAAhB,CAAoB,UAAAC,CAAC;AAAA,iBAAIC,YAAY,CAACD,CAAD,CAAhB;AAAA,SAArB,CAAlB;AACD;;AACD,aACE,oBAAC,aAAD,eACM,KAAKN,KADX;AAEE,QAAA,QAAQ,EAAET,QAFZ;AAGE,QAAA,GAAG,EAAE,aAAAiB,IAAG,EAAI;AACV,UAAA,KAAI,CAACP,OAAL,GAAeO,IAAf;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AASD;;;;EArBsBnC,KAAK,CAACoC,S;;AAwB/BV,UAAU,CAACnB,SAAX,GAAuBA,SAAvB;AACAmB,UAAU,CAACH,YAAX,GAA0BA,YAA1B;AAEA,eAAetB,oBAAoB,CAACyB,UAAD,EAAa;AAC9CW,EAAAA,aAAa,EAAE,SAD+B;AAE9CC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAEtC,SADC;AAENuC,MAAAA,OAAO,EAAEtC;AAFH;AADC;AAFmC,CAAb,CAAnC","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { ViewPropTypes, View, processColor } from 'react-native';\nimport decorateMapComponent, {\n  SUPPORTED,\n  USES_DEFAULT_IMPLEMENTATION,\n} from './decorateMapComponent';\n\n// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)\nconst viewPropTypes = ViewPropTypes || View.propTypes;\n\nconst propTypes = {\n  ...viewPropTypes,\n\n  /**\n   * Array of heatmap entries to apply towards density.\n   */\n  points: PropTypes.arrayOf(\n    PropTypes.shape({\n      /**\n       * Latitude/Longitude coordinates\n       */\n      latitude: PropTypes.number.isRequired,\n      longitude: PropTypes.number.isRequired,\n      weight: PropTypes.number,\n    })\n  ),\n\n  /**\n   * The radius of the heatmap points in pixels, between 10 and 50\n   * (default 20).\n   */\n  radius: PropTypes.number,\n\n  /**\n   * The opacity of the heatmap (default 0.7).\n   */\n  opacity: PropTypes.number,\n\n  /**\n   * Heatmap gradient configuration.\n   */\n  gradient: PropTypes.shape({\n    /**\n     * Colors (one or more) to use for gradient.\n     */\n    colors: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Array of floating point values from 0 to 1 representing\n     * where each color starts.\n     */\n    startPoints: PropTypes.arrayOf(PropTypes.number),\n    /**\n     * Resolution of color map -- number corresponding to the\n     * number of steps colors are interpolated into (default 256).\n     */\n    colorMapSize: PropTypes.number,\n  }),\n};\n\nconst defaultProps = {\n  strokeColor: '#000',\n  strokeWidth: 1,\n};\n\nclass MapHeatmap extends React.Component {\n  setNativeProps(props) {\n    this.heatmap.setNativeProps(props);\n  }\n\n  render() {\n    const AIRMapHeatmap = this.getAirComponent();\n    let gradient;\n    if (this.props.gradient) {\n      gradient = Object.assign({}, this.props.gradient);\n      gradient.colors = gradient.colors.map(c => processColor(c));\n    }\n    return (\n      <AIRMapHeatmap\n        {...this.props}\n        gradient={gradient}\n        ref={ref => {\n          this.heatmap = ref;\n        }}\n      />\n    );\n  }\n}\n\nMapHeatmap.propTypes = propTypes;\nMapHeatmap.defaultProps = defaultProps;\n\nexport default decorateMapComponent(MapHeatmap, {\n  componentType: 'Heatmap',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}