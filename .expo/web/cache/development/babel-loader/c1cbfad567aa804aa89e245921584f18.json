{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\button\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./styles\";\nexport var Button = function (_Component) {\n  _inherits(Button, _Component);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          textStyle = _this$props.textStyle,\n          onPress = _this$props.onPress,\n          text = _this$props.text;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.container, style],\n        onPress: onPress && onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [styles.buttonText, textStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }\n      }, text)));\n    }\n  }]);\n\n  return Button;\n}(Component);","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/button/index.js"],"names":["React","Component","styles","Button","props","style","textStyle","onPress","text","container","buttonText"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,MAAP;AAEA,WAAaC,MAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AAAA,wBACqC,KAAKC,KAD1C;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,SADR,eACQA,SADR;AAAA,UACmBC,OADnB,eACmBA,OADnB;AAAA,UAC4BC,IAD5B,eAC4BA,IAD5B;AAEP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE,CAACN,MAAM,CAACO,SAAR,EAAmBJ,KAAnB,CADT;AAEE,QAAA,OAAO,EAAEE,OAAO,IAAIA,OAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACL,MAAM,CAACQ,UAAR,EAAoBJ,SAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8CE,IAA9C,CAJF,CADF,CADF;AAUD;AAbH;;AAAA;AAAA,EAA4BP,SAA5B","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Text, View, TouchableOpacity } from \"react-native\";\r\nimport styles from \"./styles\";\r\n\r\nexport class Button extends Component {\r\n  render() {\r\n    const { style, textStyle, onPress, text } = this.props;\r\n    return (\r\n      <View>\r\n        <TouchableOpacity\r\n          style={[styles.container, style]}\r\n          onPress={onPress && onPress}\r\n        >\r\n          <Text style={[styles.buttonText, textStyle]}>{text}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}