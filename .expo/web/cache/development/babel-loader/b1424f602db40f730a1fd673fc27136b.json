{"ast":null,"code":"import _ from 'lodash';\nexport var Schedule = require(\"../data/schedule.json\");\nvar Event = Schedule.events[0];\nexport var Talks = Schedule.events[0].schedule;\nexport function findNextTalksAfterDate() {\n  var talks = Event.status.nextFiveScheduledItems;\n  return talks.slice(0, 3);\n}\nexport function findRandomTalk() {\n  var talks = _.filter(Talks, function (talk) {\n    return talk.type === 0;\n  });\n\n  return [_.sample(talks)];\n}\nexport function findTalkData(speakerName) {\n  return _.find(Talks, function (talk) {\n    return talk.speaker === speakerName;\n  });\n}","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/data/index.js"],"names":["_","Schedule","require","Event","events","Talks","schedule","findNextTalksAfterDate","talks","status","nextFiveScheduledItems","slice","findRandomTalk","filter","talk","type","sample","findTalkData","speakerName","find","speaker"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,OAAO,IAAMC,QAAQ,GAAGC,OAAO,yBAAxB;AAEP,IAAMC,KAAK,GAAGF,QAAQ,CAACG,MAAT,CAAgB,CAAhB,CAAd;AACA,OAAO,IAAMC,KAAK,GAAGJ,QAAQ,CAACG,MAAT,CAAgB,CAAhB,EAAmBE,QAAjC;AAEP,OAAO,SAASC,sBAAT,GAAkC;AACvC,MAAIC,KAAK,GAAGL,KAAK,CAACM,MAAN,CAAaC,sBAAzB;AACA,SAAOF,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAP;AACD;AAED,OAAO,SAASC,cAAT,GAA0B;AAC/B,MAAIJ,KAAK,GAAGR,CAAC,CAACa,MAAF,CAASR,KAAT,EAAgB,UAAAS,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAL,KAAc,CAAlB;AAAA,GAApB,CAAZ;;AACA,SAAO,CAACf,CAAC,CAACgB,MAAF,CAASR,KAAT,CAAD,CAAP;AACD;AAED,OAAO,SAASS,YAAT,CAAsBC,WAAtB,EAAmC;AACxC,SAAOlB,CAAC,CAACmB,IAAF,CAAOd,KAAP,EAAc,UAAAS,IAAI;AAAA,WAAIA,IAAI,CAACM,OAAL,KAAiBF,WAArB;AAAA,GAAlB,CAAP;AACD","sourcesContent":["import _ from 'lodash';\r\n\r\nexport const Schedule = require('../data/schedule.json');\r\n\r\nconst Event = Schedule.events[0];\r\nexport const Talks = Schedule.events[0].schedule;\r\n\r\nexport function findNextTalksAfterDate() {\r\n  let talks = Event.status.nextFiveScheduledItems;\r\n  return talks.slice(0, 3);\r\n}\r\n\r\nexport function findRandomTalk() {\r\n  let talks = _.filter(Talks, talk => talk.type === 0);\r\n  return [_.sample(talks)];\r\n}\r\n\r\nexport function findTalkData(speakerName) {\r\n  return _.find(Talks, talk => talk.speaker === speakerName);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}