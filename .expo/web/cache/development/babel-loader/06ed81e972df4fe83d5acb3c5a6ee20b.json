{"ast":null,"code":"import getTokenTypeByToken from \"./getTokenTypeByToken\";\nimport flattenInlineTokens from \"./flattenInlineTokens\";\nexport function cleanupTokens(tokens) {\n  tokens = flattenInlineTokens(tokens);\n  tokens.forEach(function (token) {\n    token.type = getTokenTypeByToken(token);\n\n    if (token.type === 'image' || token.type === 'hardbreak') {\n      token.block = true;\n    }\n  });\n  var stack = [];\n  tokens = tokens.reduce(function (acc, token, index) {\n    if (token.type === 'link' && token.nesting === 1) {\n      stack.push(token);\n    } else if (stack.length > 0 && token.type === 'link' && token.nesting === -1) {\n      if (stack.some(function (stackToken) {\n        return stackToken.block;\n      })) {\n        stack[0].type = 'blocklink';\n        stack[0].block = true;\n        token.type = 'blocklink';\n        token.block = true;\n      }\n\n      stack.push(token);\n\n      while (stack.length) {\n        acc.push(stack.shift());\n      }\n    } else if (stack.length > 0) {\n      stack.push(token);\n    } else {\n      acc.push(token);\n    }\n\n    return acc;\n  }, []);\n  return tokens;\n}","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/node_modules/react-native-markdown-renderer/src/lib/util/cleanupTokens.js"],"names":["getTokenTypeByToken","flattenInlineTokens","cleanupTokens","tokens","forEach","token","type","block","stack","reduce","acc","index","nesting","push","length","some","stackToken","shift"],"mappings":"AAAA,OAAOA,mBAAP;AACA,OAAOC,mBAAP;AAEA,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AACpCA,EAAAA,MAAM,GAAGF,mBAAmB,CAACE,MAAD,CAA5B;AACAA,EAAAA,MAAM,CAACC,OAAP,CAAe,UAAAC,KAAK,EAAI;AACtBA,IAAAA,KAAK,CAACC,IAAN,GAAaN,mBAAmB,CAACK,KAAD,CAAhC;;AAGA,QAAIA,KAAK,CAACC,IAAN,KAAe,OAAf,IAA0BD,KAAK,CAACC,IAAN,KAAe,WAA7C,EAA0D;AACxDD,MAAAA,KAAK,CAACE,KAAN,GAAc,IAAd;AACD;AACF,GAPD;AAaA,MAAMC,KAAK,GAAG,EAAd;AACAL,EAAAA,MAAM,GAAGA,MAAM,CAACM,MAAP,CAAc,UAACC,GAAD,EAAML,KAAN,EAAaM,KAAb,EAAuB;AAC5C,QAAIN,KAAK,CAACC,IAAN,KAAe,MAAf,IAAyBD,KAAK,CAACO,OAAN,KAAkB,CAA/C,EAAkD;AAChDJ,MAAAA,KAAK,CAACK,IAAN,CAAWR,KAAX;AACD,KAFD,MAEO,IAAIG,KAAK,CAACM,MAAN,GAAe,CAAf,IAAoBT,KAAK,CAACC,IAAN,KAAe,MAAnC,IAA6CD,KAAK,CAACO,OAAN,KAAkB,CAAC,CAApE,EAAuE;AAC5E,UAAIJ,KAAK,CAACO,IAAN,CAAW,UAAAC,UAAU;AAAA,eAAIA,UAAU,CAACT,KAAf;AAAA,OAArB,CAAJ,EAAgD;AAC9CC,QAAAA,KAAK,CAAC,CAAD,CAAL,CAASF,IAAT,GAAgB,WAAhB;AACAE,QAAAA,KAAK,CAAC,CAAD,CAAL,CAASD,KAAT,GAAiB,IAAjB;AACAF,QAAAA,KAAK,CAACC,IAAN,GAAa,WAAb;AACAD,QAAAA,KAAK,CAACE,KAAN,GAAc,IAAd;AACD;;AAEDC,MAAAA,KAAK,CAACK,IAAN,CAAWR,KAAX;;AAEA,aAAOG,KAAK,CAACM,MAAb,EAAqB;AACnBJ,QAAAA,GAAG,CAACG,IAAJ,CAASL,KAAK,CAACS,KAAN,EAAT;AACD;AACF,KAbM,MAaA,IAAIT,KAAK,CAACM,MAAN,GAAe,CAAnB,EAAsB;AAC3BN,MAAAA,KAAK,CAACK,IAAN,CAAWR,KAAX;AACD,KAFM,MAEA;AACLK,MAAAA,GAAG,CAACG,IAAJ,CAASR,KAAT;AACD;;AAED,WAAOK,GAAP;AACD,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,SAAOP,MAAP;AACD","sourcesContent":["import getTokenTypeByToken from './getTokenTypeByToken';\nimport flattenInlineTokens from './flattenInlineTokens';\n\nexport function cleanupTokens(tokens) {\n  tokens = flattenInlineTokens(tokens);\n  tokens.forEach(token => {\n    token.type = getTokenTypeByToken(token);\n\n    // set image and hardbreak to block elements\n    if (token.type === 'image' || token.type === 'hardbreak') {\n      token.block = true;\n    }\n  });\n\n  /**\n   * changing a link token to a blocklink to fix issue where link tokens with\n   * nested non text tokens breaks component\n   */\n  const stack = [];\n  tokens = tokens.reduce((acc, token, index) => {\n    if (token.type === 'link' && token.nesting === 1) {\n      stack.push(token);\n    } else if (stack.length > 0 && token.type === 'link' && token.nesting === -1) {\n      if (stack.some(stackToken => stackToken.block)) {\n        stack[0].type = 'blocklink';\n        stack[0].block = true;\n        token.type = 'blocklink';\n        token.block = true;\n      }\n\n      stack.push(token);\n\n      while (stack.length) {\n        acc.push(stack.shift());\n      }\n    } else if (stack.length > 0) {\n      stack.push(token);\n    } else {\n      acc.push(token);\n    }\n\n    return acc;\n  }, []);\n\n  return tokens;\n}\n"]},"metadata":{},"sourceType":"module"}