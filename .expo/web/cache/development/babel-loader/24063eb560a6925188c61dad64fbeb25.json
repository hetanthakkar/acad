{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\components\\\\CachedImage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Asset, FileSystem } from 'expo';\nimport sha256 from 'crypto-js/sha256';\n\nvar CachedImage = function (_React$Component) {\n  _inherits(CachedImage, _React$Component);\n\n  var _super = _createSuper(CachedImage);\n\n  function CachedImage() {\n    var _this;\n\n    _classCallCheck(this, CachedImage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      source: null\n    };\n    return _this;\n  }\n\n  _createClass(CachedImage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var source, name, filepath, _await$FileSystem$get, exists, _await$FileSystem$dow, uri;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              source = this.props.source;\n              _context.prev = 1;\n\n              if (!(typeof source === 'number')) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Asset.fromModule(source).downloadAsync());\n\n            case 5:\n              _context.next = 23;\n              break;\n\n            case 7:\n              if (!(source && source.uri)) {\n                _context.next = 23;\n                break;\n              }\n\n              name = sha256(source.uri);\n              filepath = \"\" + FileSystem.documentDirectory + name + \".png'\";\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(FileSystem.getInfoAsync(filepath));\n\n            case 12:\n              _await$FileSystem$get = _context.sent;\n              exists = _await$FileSystem$get.exists;\n\n              if (!exists) {\n                _context.next = 18;\n                break;\n              }\n\n              source = {\n                uri: filepath\n              };\n              _context.next = 23;\n              break;\n\n            case 18:\n              _context.next = 20;\n              return _regeneratorRuntime.awrap(FileSystem.downloadAsync(source.uri, filepath));\n\n            case 20:\n              _await$FileSystem$dow = _context.sent;\n              uri = _await$FileSystem$dow.uri;\n              source = {\n                uri: uri\n              };\n\n            case 23:\n              _context.next = 28;\n              break;\n\n            case 25:\n              _context.prev = 25;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 28:\n              _context.prev = 28;\n\n              if (!this.unmounting) {\n                this.setState({\n                  source: source\n                });\n              }\n\n              return _context.finish(28);\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[1, 25, 28, 31]], Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounting = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.source) {\n        return React.createElement(Image, _extends({}, this.props, {\n          source: this.state.source,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 14\n          }\n        }));\n      } else {\n        var safeImageStyle = _objectSpread({}, StyleSheet.flatten(this.props.style));\n\n        delete safeImageStyle.tintColor;\n        delete safeImageStyle.resizeMode;\n        return React.createElement(View, {\n          style: [{\n            backgroundColor: '#eee'\n          }, safeImageStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }]);\n\n  return CachedImage;\n}(React.Component);\n\nexport { CachedImage as default };","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/components/CachedImage.js"],"names":["React","Asset","FileSystem","sha256","CachedImage","state","source","props","fromModule","downloadAsync","uri","name","filepath","documentDirectory","getInfoAsync","exists","console","log","unmounting","setState","safeImageStyle","StyleSheet","flatten","style","tintColor","resizeMode","backgroundColor","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAAQC,KAAR,EAAeC,UAAf,QAAgC,MAAhC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;IAEqBC,W;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AADF,K;;;;;;;;;;;;;AAOFA,cAAAA,M,GAAS,KAAKC,KAAL,CAAWD,M;;;oBAGlB,OAAOA,MAAP,KAAkB,Q;;;;;;+CACdL,KAAK,CAACO,UAAN,CAAiBF,MAAjB,EAAyBG,aAAzB,E;;;;;;;oBACGH,MAAM,IAAIA,MAAM,CAACI,G;;;;;AACtBC,cAAAA,I,GAAOR,MAAM,CAACG,MAAM,CAACI,GAAR,C;AACbE,cAAAA,Q,QAAcV,UAAU,CAACW,iB,GAAoBF,I;;+CAC5BT,UAAU,CAACY,YAAX,CAAwBF,QAAxB,C;;;;AAAhBG,cAAAA,M,yBAAAA,M;;mBACDA,M;;;;;AACFT,cAAAA,MAAM,GAAG;AAACI,gBAAAA,GAAG,EAAEE;AAAN,eAAT;;;;;;+CAEkBV,UAAU,CAACO,aAAX,CAAyBH,MAAM,CAACI,GAAhC,EAAqCE,QAArC,C;;;;AAAbF,cAAAA,G,yBAAAA,G;AACLJ,cAAAA,MAAM,GAAG;AAACI,gBAAAA,GAAG,EAAHA;AAAD,eAAT;;;;;;;;;AAIJM,cAAAA,OAAO,CAACC,GAAR;;;;;AAEA,kBAAI,CAAC,KAAKC,UAAV,EAAsB;AACpB,qBAAKC,QAAL,CAAc;AAACb,kBAAAA,MAAM,EAANA;AAAD,iBAAd;AACD;;;;;;;;;;;;;2CAIkB;AACrB,WAAKY,UAAL,GAAkB,IAAlB;AACD;;;6BAEQ;AACP,UAAI,KAAKb,KAAL,CAAWC,MAAf,EAAuB;AACrB,eAAO,oBAAC,KAAD,eAAW,KAAKC,KAAhB;AAAuB,UAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAFD,MAEO;AACL,YAAIc,cAAc,qBAAOC,UAAU,CAACC,OAAX,CAAmB,KAAKf,KAAL,CAAWgB,KAA9B,CAAP,CAAlB;;AACA,eAAOH,cAAc,CAACI,SAAtB;AACA,eAAOJ,cAAc,CAACK,UAAtB;AACA,eAAO,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,CAAC;AAACC,YAAAA,eAAe,EAAE;AAAlB,WAAD,EAA4BN,cAA5B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF;;;;EA9CsCpB,KAAK,CAAC2B,S;;SAA1BvB,W","sourcesContent":["import React from 'react';\r\nimport {Image, View, StyleSheet} from 'react-native';\r\nimport {Asset, FileSystem} from 'expo';\r\nimport sha256 from 'crypto-js/sha256';\r\n\r\nexport default class CachedImage extends React.Component {\r\n  state = {\r\n    source: null,\r\n  };\r\n\r\n  unmounting: false;\r\n\r\n  async componentDidMount() {\r\n    let source = this.props.source;\r\n\r\n    try {\r\n      if (typeof source === 'number') {\r\n        await Asset.fromModule(source).downloadAsync();\r\n      } else if (source && source.uri) {\r\n        let name = sha256(source.uri);\r\n        let filepath = `${FileSystem.documentDirectory}${name}.png'`;\r\n        let {exists} = await FileSystem.getInfoAsync(filepath);\r\n        if (exists) {\r\n          source = {uri: filepath};\r\n        } else {\r\n          let {uri} = await FileSystem.downloadAsync(source.uri, filepath);\r\n          source = {uri};\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      if (!this.unmounting) {\r\n        this.setState({source});\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unmounting = true;\r\n  }\r\n\r\n  render() {\r\n    if (this.state.source) {\r\n      return <Image {...this.props} source={this.state.source} />;\r\n    } else {\r\n      let safeImageStyle = {...StyleSheet.flatten(this.props.style)};\r\n      delete safeImageStyle.tintColor;\r\n      delete safeImageStyle.resizeMode;\r\n      return <View style={[{backgroundColor: '#eee'}, safeImageStyle]} />;\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}