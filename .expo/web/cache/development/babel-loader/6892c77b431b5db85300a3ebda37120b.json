{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\components\\\\HighlightableText.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { findAll } from 'highlight-words-core';\nexport default function Highlighter(_ref) {\n  var TextComponent = _ref.TextComponent,\n      autoEscape = _ref.autoEscape,\n      highlightStyle = _ref.highlightStyle,\n      searchWords = _ref.searchWords,\n      textToHighlight = _ref.textToHighlight,\n      sanitize = _ref.sanitize,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, [\"TextComponent\", \"autoEscape\", \"highlightStyle\", \"searchWords\", \"textToHighlight\", \"sanitize\", \"style\"]);\n\n  var chunks = findAll({\n    textToHighlight: textToHighlight,\n    searchWords: searchWords,\n    sanitize: sanitize,\n    autoEscape: autoEscape\n  });\n  return React.createElement(TextComponent, _extends({\n    style: style\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }), chunks.map(function (chunk, index) {\n    var text = textToHighlight.substr(chunk.start, chunk.end - chunk.start);\n    return !chunk.highlight ? text : React.createElement(Text, {\n      key: index,\n      style: chunk.highlight && highlightStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, text);\n  }));\n}","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/components/HighlightableText.js"],"names":["React","findAll","Highlighter","TextComponent","autoEscape","highlightStyle","searchWords","textToHighlight","sanitize","style","props","chunks","map","chunk","index","text","substr","start","end","highlight"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAAQC,OAAR,QAAsB,sBAAtB;AAMA,eAAe,SAASC,WAAT,OASZ;AAAA,MARDC,aAQC,QARDA,aAQC;AAAA,MAPDC,UAOC,QAPDA,UAOC;AAAA,MANDC,cAMC,QANDA,cAMC;AAAA,MALDC,WAKC,QALDA,WAKC;AAAA,MAJDC,eAIC,QAJDA,eAIC;AAAA,MAHDC,QAGC,QAHDA,QAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADEC,KACF;;AACD,MAAMC,MAAM,GAAGV,OAAO,CAAC;AACrBM,IAAAA,eAAe,EAAfA,eADqB;AAErBD,IAAAA,WAAW,EAAXA,WAFqB;AAGrBE,IAAAA,QAAQ,EAARA,QAHqB;AAIrBJ,IAAAA,UAAU,EAAVA;AAJqB,GAAD,CAAtB;AAOA,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEK;AAAtB,KAAiCC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGC,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC5B,QAAMC,IAAI,GAAGR,eAAe,CAACS,MAAhB,CACXH,KAAK,CAACI,KADK,EAEXJ,KAAK,CAACK,GAAN,GAAYL,KAAK,CAACI,KAFP,CAAb;AAKA,WAAO,CAACJ,KAAK,CAACM,SAAP,GACLJ,IADK,GAGL,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAED,KAAX;AAAkB,MAAA,KAAK,EAAED,KAAK,CAACM,SAAN,IAAmBd,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGU,IADH,CAHF;AAOD,GAbA,CADH,CADF;AAkBD","sourcesContent":["// Local implementation of 'react-native-highlight-words'\r\nimport React from 'react';\r\nimport {Text} from 'react-native';\r\nimport {findAll} from 'highlight-words-core';\r\n\r\n/**\r\n * Highlights all occurrences of search terms (searchText) within a string (textToHighlight).\r\n * This function returns an array of strings and <Text> elements (wrapping highlighted words).\r\n */\r\nexport default function Highlighter({\r\n  TextComponent,\r\n  autoEscape,\r\n  highlightStyle,\r\n  searchWords,\r\n  textToHighlight,\r\n  sanitize,\r\n  style,\r\n  ...props\r\n}) {\r\n  const chunks = findAll({\r\n    textToHighlight,\r\n    searchWords,\r\n    sanitize,\r\n    autoEscape,\r\n  });\r\n\r\n  return (\r\n    <TextComponent style={style} {...props}>\r\n      {chunks.map((chunk, index) => {\r\n        const text = textToHighlight.substr(\r\n          chunk.start,\r\n          chunk.end - chunk.start\r\n        );\r\n\r\n        return !chunk.highlight ? (\r\n          text\r\n        ) : (\r\n          <Text key={index} style={chunk.highlight && highlightStyle}>\r\n            {text}\r\n          </Text>\r\n        );\r\n      })}\r\n    </TextComponent>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}