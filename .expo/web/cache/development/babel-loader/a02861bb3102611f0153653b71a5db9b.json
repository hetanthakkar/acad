{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _class,\n    _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\components\\\\SaveIconWhenSaved.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { withSaveState } from \"../utils/storage\";\nimport { Icons, Colors } from \"../constants\";\n\nvar SaveIconWhenSaved = withSaveState(_class = function (_React$Component) {\n  _inherits(SaveIconWhenSaved, _React$Component);\n\n  var _super = _createSuper(SaveIconWhenSaved);\n\n  function SaveIconWhenSaved() {\n    _classCallCheck(this, SaveIconWhenSaved);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SaveIconWhenSaved, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.saved) {\n        return null;\n      }\n\n      var icon = React.createElement(Ionicons, {\n        name: Icons.favoriteActive,\n        color: Colors.blue,\n        style: [{\n          backgroundColor: 'transparent'\n        }, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      });\n      return React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, icon, '  ');\n    }\n  }]);\n\n  return SaveIconWhenSaved;\n}(React.Component)) || _class;\n\nexport { SaveIconWhenSaved as default };","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/components/SaveIconWhenSaved.js"],"names":["React","Ionicons","withSaveState","Icons","Colors","SaveIconWhenSaved","props","saved","icon","favoriteActive","blue","backgroundColor","style","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,aAAR;AACA,SAAQC,KAAR,EAAeC,MAAf;;IAGqBC,iB,GADpBH,a;;;;;;;;;;;;;6BAEU;AACP,UAAI,CAAC,KAAKI,KAAL,CAAWC,KAAhB,EAAuB;AACrB,eAAO,IAAP;AACD;;AAED,UAAMC,IAAI,GACR,oBAAC,QAAD;AACE,QAAA,IAAI,EAAEL,KAAK,CAACM,cADd;AAEE,QAAA,KAAK,EAAEL,MAAM,CAACM,IAFhB;AAGE,QAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,eAAe,EAAE;AAAlB,SAAD,EAAmC,KAAKL,KAAL,CAAWM,KAA9C,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,IADH,EAEG,IAFH,CADF;AAMD;;;;EApB4CR,KAAK,CAACa,S;;SAAhCR,iB","sourcesContent":["import React from 'react';\r\nimport {Text} from 'react-native';\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport {withSaveState} from '../utils/storage';\r\nimport {Icons, Colors} from '../constants';\r\n\r\n@withSaveState\r\nexport default class SaveIconWhenSaved extends React.Component {\r\n  render() {\r\n    if (!this.props.saved) {\r\n      return null;\r\n    }\r\n\r\n    const icon = (\r\n      <Ionicons\r\n        name={Icons.favoriteActive}\r\n        color={Colors.blue}\r\n        style={[{backgroundColor: 'transparent'}, this.props.style]}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Text>\r\n        {icon}\r\n        {'  '}\r\n      </Text>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}