{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\screens\\\\Details.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport WebView from \"react-native-web/dist/exports/WebView\";\nimport { Constants, Haptic, WebBrowser } from 'expo';\nimport FadeIn from 'react-native-fade-in-image';\nimport { View as AnimatableView } from 'react-native-animatable';\nimport AnimatedScrollView from \"../components/AnimatedScrollView\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport { Colors, FontSizes, Layout } from \"../constants\";\nimport { RegularText, BoldText, SemiBoldText } from \"../components/StyledText\";\nimport { getSpeakerTalk, convertUtcDateToEventTimezoneHour } from \"../utils\";\nimport SaveButton from \"../components/SaveButton\";\nimport CachedImage from \"../components/CachedImage\";\nimport CloseButton from \"../components/CloseButton\";\nimport Markdown from 'react-native-markdown-renderer';\n\nvar SavedButtonNavigationItem = function (_React$Component) {\n  _inherits(SavedButtonNavigationItem, _React$Component);\n\n  var _super = _createSuper(SavedButtonNavigationItem);\n\n  function SavedButtonNavigationItem() {\n    _classCallCheck(this, SavedButtonNavigationItem);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SavedButtonNavigationItem, [{\n    key: \"render\",\n    value: function render() {\n      var talk = this.props.talk;\n      return React.createElement(View, {\n        style: {\n          paddingTop: Platform.OS === 'android' ? 30 : 0,\n          marginTop: Layout.notchHeight > 0 ? -5 : 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, React.createElement(SaveButton, {\n        talk: talk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SavedButtonNavigationItem;\n}(React.Component);\n\nvar Details = function (_React$Component2) {\n  _inherits(Details, _React$Component2);\n\n  var _super2 = _createSuper(Details);\n\n  function Details() {\n    var _this;\n\n    _classCallCheck(this, Details);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super2.call.apply(_super2, [this].concat(args));\n    _this.state = {\n      scrollY: new Animated.Value(0)\n    };\n\n    _this._renderTruncatedFooter = function (handlePress) {\n      return React.createElement(TouchableOpacity, {\n        hitSlop: {\n          top: 15,\n          left: 15,\n          right: 15,\n          bottom: 15\n        },\n        onPress: handlePress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 7\n        }\n      }, React.createElement(SemiBoldText, {\n        style: {\n          color: Colors.blue,\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 9\n        }\n      }, \"Read more\"));\n    };\n\n    _this._renderRevealedFooter = function (handlePress) {\n      return React.createElement(TouchableOpacity, {\n        hitSlop: {\n          top: 15,\n          left: 15,\n          right: 15,\n          bottom: 15\n        },\n        onPress: handlePress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 7\n        }\n      }, React.createElement(SemiBoldText, {\n        style: {\n          color: Colors.blue,\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 9\n        }\n      }, \"Show less\"));\n    };\n\n    _this._handlePressSpeaker = function (speaker) {\n      _this.props.navigation.navigate('Details', {\n        speaker: speaker\n      });\n    };\n\n    _this._handlePressSpeakerTwitter = function _callee(twitter) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Linking.openURL(\"twitter://user?screen_name=\" + twitter));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              WebBrowser.openBrowserAsync('https://twitter.com/' + twitter);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(Details, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (Platform.OS === 'ios') {\n        this._listener = this.state.scrollY.addListener(function (_ref) {\n          var value = _ref.value;\n\n          if (value < -150) {\n            Haptic.impact(Haptic.ImpactFeedbackStyle.Medium);\n\n            _this2.props.navigation.goBack();\n\n            if (_this2._listener) {\n              _this2.state.scrollY.removeListener(_this2._listener);\n\n              _this2._listener = null;\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var params = this.props.navigation.state.params || {};\n      var speaker;\n      var speakers;\n      var talk;\n      var talkScreen = params.scheduleSlot || params.talk;\n\n      if (talkScreen) {\n        talk = params.scheduleSlot || params.talk;\n        speakers = talk.speakers;\n      } else if (params.speaker) {\n        speaker = params.speaker;\n\n        if (speaker.talks && speaker.talks.length > 0) {\n          talk = getSpeakerTalk(speaker);\n        }\n      }\n\n      var scrollY = this.state.scrollY;\n      var scale = scrollY.interpolate({\n        inputRange: [-300, 0, 1],\n        outputRange: [2, 1, 1],\n        extrapolate: 'clamp'\n      });\n      var translateX = 0;\n      var translateY = scrollY.interpolate({\n        inputRange: [-300, 0, 1],\n        outputRange: [-50, 1, 1],\n        extrapolate: 'clamp'\n      });\n      var headerOpacity = scrollY.interpolate({\n        inputRange: [0, 30, 200],\n        outputRange: [0, 0, 1]\n      });\n      var videoURL = talk && talk.youtubeId && talk.youtubeId !== '';\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: '#fff',\n          overflow: 'hidden'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }\n      }, Platform.OS === 'ios' ? React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          top: -350,\n          left: 0,\n          right: 0,\n          height: 400,\n          transform: [{\n            translateY: scrollY.interpolate({\n              inputRange: [-1, 0, 1],\n              outputRange: [1, 0, 0]\n            })\n          }],\n          backgroundColor: Colors.blue\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }) : null, React.createElement(AnimatedScrollView, {\n        style: {\n          flex: 1,\n          backgroundColor: 'transparent'\n        },\n        scrollEventThrottle: 1,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: this.state.scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.headerContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          transform: [{\n            scale: scale\n          }, {\n            translateX: translateX\n          }, {\n            translateY: translateY\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, React.createElement(FadeIn, {\n        placeholderStyle: {\n          backgroundColor: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, talkScreen ? React.createElement(View, {\n        style: styles.headerRowSpeaker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }, speakers ? speakers.map(function (speaker) {\n        return React.createElement(View, {\n          key: speaker.id,\n          style: styles.headerColumnSpeaker,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 27\n          }\n        }, React.createElement(TouchableOpacity, {\n          key: speaker.id,\n          onPress: function onPress() {\n            return _this3._handlePressSpeaker(speaker);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }\n        }, React.createElement(CachedImage, {\n          source: {\n            uri: speaker.avatarUrl\n          },\n          style: styles.avatarMultiple,\n          key: speaker.id + talk.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 31\n          }\n        })), speaker.name.split(' ').map(function (name, index) {\n          return React.createElement(View, {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 31\n            }\n          }, React.createElement(TouchableOpacity, {\n            key: speaker.id,\n            onPress: function onPress() {\n              return _this3._handlePressSpeaker(speaker);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }\n          }, React.createElement(SemiBoldText, {\n            style: styles.headerText,\n            key: 'speakers' + speaker.id + name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 35\n            }\n          }, name)));\n        }));\n      }) : null) : React.createElement(CachedImage, {\n        source: {\n          uri: speaker.avatarUrl\n        },\n        style: styles.avatar,\n        key: speaker.avatarUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 19\n        }\n      }))), talkScreen ? null : React.createElement(SemiBoldText, {\n        style: styles.headerText,\n        key: speaker.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }\n      }, speaker.name), speaker && speaker.twitter ? React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this3._handlePressSpeakerTwitter(speaker.twitter);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }, React.createElement(RegularText, {\n        style: styles.headerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, \"@\", speaker.twitter)) : null, talk ? React.createElement(BoldText, {\n        style: styles.talkTitleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }, talk.title) : null), videoURL ? React.createElement(View, {\n        style: styles.videoWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, React.createElement(WebView, {\n        source: {\n          uri: \"https://www.youtube.com/embed/\" + talk.youtubeId\n        },\n        startInLoadingState: true,\n        scalesPageToFit: true,\n        javaScriptEnabled: true,\n        style: {\n          flex: 1,\n          height: 240\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }\n      })) : null, React.createElement(AnimatableView, {\n        animation: \"fadeIn\",\n        useNativeDriver: true,\n        delay: Platform.OS === 'ios' ? 50 : 150,\n        duration: 500,\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }\n      }, talkScreen ? null : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }\n      }, React.createElement(SemiBoldText, {\n        style: styles.sectionHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, \"Bio\"), React.createElement(Markdown, {\n        styles: markdownStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, speaker.bio)), talk ? React.createElement(SemiBoldText, {\n        style: styles.sectionHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }\n      }, talk && talk.type === 0 ? 'Talk description' : null, talk && talk.type === 1 ? 'Workshop description' : null, talk && talk.type === 6 ? 'Panel description' : null, talk && talk.type !== 6 && talk.type !== 0 && talk.type !== 1 ? 'Description' : null) : null, talk ? React.createElement(Markdown, {\n        styles: markdownStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      }, talk.description.replace('**Click here to see covered subjects**', '')) : null, talkScreen && speakers.length > 0 ? React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }\n      }, React.createElement(SemiBoldText, {\n        style: styles.sectionHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }\n      }, talk.type === 1 ? 'Trainers' : 'Speakers'), speakers.map(function (speaker) {\n        return React.createElement(View, {\n          key: speaker.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 19\n          }\n        }, React.createElement(SemiBoldText, {\n          key: speaker.id + talk.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 21\n          }\n        }, speaker.name), React.createElement(Markdown, {\n          styles: markdownStyles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 21\n          }\n        }, speaker.bio));\n      })) : null, talk ? React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }\n      }, React.createElement(SemiBoldText, {\n        style: styles.sectionHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, \"Time\"), React.createElement(RegularText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }\n      }, convertUtcDateToEventTimezoneHour(talk.startDate)), React.createElement(RegularText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }\n      }, talk.room)) : null)), React.createElement(NavigationBar, {\n        animatedBackgroundOpacity: headerOpacity,\n        style: [Platform.OS === 'android' ? {\n          height: Layout.headerHeight + Constants.statusBarHeight\n        } : null],\n        renderLeftButton: function renderLeftButton() {\n          return React.createElement(View, {\n            style: {\n              paddingTop: Platform.OS === 'android' ? 30 : 0,\n              marginTop: Layout.notchHeight > 0 ? -5 : 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 13\n            }\n          }, React.createElement(CloseButton, {\n            onPress: function onPress() {\n              return _this3.props.navigation.goBack();\n            },\n            tintColor: \"#fff\",\n            title: null,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }\n          }));\n        },\n        renderRightButton: function renderRightButton() {\n          talk ? React.createElement(SavedButtonNavigationItem, {\n            talk: talk,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 20\n            }\n          }) : null;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Details;\n}(React.Component);\n\nDetails.navigationOptions = {\n  gesturesEnabled: false\n};\nexport { Details as default };\nvar markdownStyles = {};\nvar styles = StyleSheet.create({\n  container: {},\n  avatar: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    marginBottom: 10\n  },\n  avatarMultiple: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginBottom: 10\n  },\n  content: {\n    backgroundColor: '#fff',\n    paddingBottom: 20,\n    paddingHorizontal: 20\n  },\n  markdownBio: {\n    backgroundColor: '#fff',\n    paddingBottom: 20,\n    paddingHorizontal: 20,\n    width: 300,\n    height: 200\n  },\n  markdownTalkDescription: {\n    backgroundColor: '#fff',\n    paddingBottom: 20,\n    paddingHorizontal: 20,\n    width: 300,\n    height: 600\n  },\n  headerRowSpeaker: {\n    flexDirection: 'row',\n    height: 140\n  },\n  headerColumnSpeaker: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 5\n  },\n  headerContainer: {\n    backgroundColor: Colors.blue,\n    paddingTop: Constants.statusBarHeight + Layout.notchHeight + 20,\n    paddingBottom: 20,\n    paddingHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  headerText: {\n    color: '#fff',\n    fontSize: FontSizes.subtitle\n  },\n  talkTitleText: {\n    color: '#fff',\n    fontSize: FontSizes.title,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  sectionHeader: {\n    fontSize: FontSizes.bodyTitle,\n    marginTop: 15,\n    marginBottom: 3\n  },\n  videoWrapper: {}\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/screens/Details.js"],"names":["React","Constants","Haptic","WebBrowser","FadeIn","View","AnimatableView","AnimatedScrollView","NavigationBar","Colors","FontSizes","Layout","RegularText","BoldText","SemiBoldText","getSpeakerTalk","convertUtcDateToEventTimezoneHour","SaveButton","CachedImage","CloseButton","Markdown","SavedButtonNavigationItem","talk","props","paddingTop","Platform","OS","marginTop","notchHeight","Component","Details","state","scrollY","Animated","Value","_renderTruncatedFooter","handlePress","top","left","right","bottom","color","blue","_renderRevealedFooter","_handlePressSpeaker","speaker","navigation","navigate","_handlePressSpeakerTwitter","twitter","Linking","openURL","openBrowserAsync","_listener","addListener","value","impact","ImpactFeedbackStyle","Medium","goBack","removeListener","params","speakers","talkScreen","scheduleSlot","talks","length","scale","interpolate","inputRange","outputRange","extrapolate","translateX","translateY","headerOpacity","videoURL","youtubeId","flex","backgroundColor","overflow","position","height","transform","event","nativeEvent","contentOffset","y","useNativeDriver","styles","headerContainer","headerRowSpeaker","map","id","headerColumnSpeaker","uri","avatarUrl","avatarMultiple","title","name","split","index","headerText","avatar","talkTitleText","videoWrapper","content","sectionHeader","markdownStyles","bio","type","description","replace","startDate","room","headerHeight","statusBarHeight","navigationOptions","gesturesEnabled","StyleSheet","create","container","width","borderRadius","marginBottom","paddingBottom","paddingHorizontal","markdownBio","markdownTalkDescription","flexDirection","alignItems","justifyContent","fontSize","subtitle","textAlign","bodyTitle"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Animated,\r\n  Platform,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  View,\r\n  Linking,\r\n  Text,\r\n  WebView,\r\n} from 'react-native';\r\nimport {Constants, Haptic, WebBrowser} from 'expo';\r\nimport FadeIn from 'react-native-fade-in-image';\r\nimport {View as AnimatableView} from 'react-native-animatable';\r\n\r\nimport AnimatedScrollView from '../components/AnimatedScrollView';\r\nimport NavigationBar from '../components/NavigationBar';\r\nimport {Colors, FontSizes, Layout} from '../constants';\r\nimport {RegularText, BoldText, SemiBoldText} from '../components/StyledText';\r\nimport {getSpeakerTalk, convertUtcDateToEventTimezoneHour} from '../utils';\r\nimport SaveButton from '../components/SaveButton';\r\nimport CachedImage from '../components/CachedImage';\r\nimport CloseButton from '../components/CloseButton';\r\nimport Markdown from 'react-native-markdown-renderer';\r\n\r\nclass SavedButtonNavigationItem extends React.Component {\r\n  render() {\r\n    const {talk} = this.props;\r\n\r\n    return (\r\n      <View\r\n        style={{\r\n          // gross dumb things\r\n          paddingTop: Platform.OS === 'android' ? 30 : 0,\r\n          marginTop: Layout.notchHeight > 0 ? -5 : 0,\r\n        }}>\r\n        <SaveButton talk={talk} />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class Details extends React.Component {\r\n  static navigationOptions = {\r\n    gesturesEnabled: false,\r\n  };\r\n\r\n  state = {\r\n    scrollY: new Animated.Value(0),\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (Platform.OS === 'ios') {\r\n      this._listener = this.state.scrollY.addListener(({ value }) => {\r\n        if (value < - 150) {\r\n          Haptic.impact(Haptic.ImpactFeedbackStyle.Medium);\r\n          this.props.navigation.goBack();\r\n          if (this._listener) {\r\n            this.state.scrollY.removeListener(this._listener);\r\n            this._listener = null;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let params = this.props.navigation.state.params || {};\r\n    let speaker;\r\n    let speakers;\r\n    let talk;\r\n    const talkScreen = params.scheduleSlot || params.talk;\r\n    if (talkScreen) {\r\n      talk = params.scheduleSlot || params.talk;\r\n      speakers = talk.speakers;\r\n    } else if (params.speaker) {\r\n      speaker = params.speaker;\r\n      if (speaker.talks && speaker.talks.length > 0) {\r\n        talk = getSpeakerTalk(speaker);\r\n      }\r\n    }\r\n\r\n    const {scrollY} = this.state;\r\n    const scale = scrollY.interpolate({\r\n      inputRange: [-300, 0, 1],\r\n      outputRange: [2, 1, 1],\r\n      extrapolate: 'clamp',\r\n    });\r\n    const translateX = 0;\r\n    const translateY = scrollY.interpolate({\r\n      inputRange: [-300, 0, 1],\r\n      outputRange: [-50, 1, 1],\r\n      extrapolate: 'clamp',\r\n    });\r\n\r\n    const headerOpacity = scrollY.interpolate({\r\n      inputRange: [0, 30, 200],\r\n      outputRange: [0, 0, 1],\r\n    });\r\n\r\n    const videoURL = talk && talk.youtubeId && talk.youtubeId !== '';\r\n    return (\r\n      <View style={{flex: 1, backgroundColor: '#fff', overflow: 'hidden'}}>\r\n        {Platform.OS === 'ios' ? (\r\n          <Animated.View\r\n            style={{\r\n              position: 'absolute',\r\n              top: -350,\r\n              left: 0,\r\n              right: 0,\r\n              height: 400,\r\n              transform: [\r\n                {\r\n                  translateY: scrollY.interpolate({\r\n                    inputRange: [-1, 0, 1],\r\n                    outputRange: [1, 0, 0],\r\n                  }),\r\n                },\r\n              ],\r\n              backgroundColor: Colors.blue,\r\n            }}\r\n          />\r\n        ) : null}\r\n        <AnimatedScrollView\r\n          style={{flex: 1, backgroundColor: 'transparent'}}\r\n          scrollEventThrottle={1}\r\n          onScroll={Animated.event(\r\n            [\r\n              {\r\n                nativeEvent: {contentOffset: {y: this.state.scrollY}},\r\n              },\r\n            ],\r\n            {useNativeDriver: true}\r\n          )}>\r\n          <View style={styles.headerContainer}>\r\n            <Animated.View\r\n              style={{\r\n                transform: [{scale}, {translateX}, {translateY}],\r\n              }}>\r\n              <FadeIn placeholderStyle={{backgroundColor: 'transparent'}}>\r\n                {talkScreen ? (\r\n                  <View style={styles.headerRowSpeaker}>\r\n                    {speakers\r\n                      ? speakers.map(speaker => (\r\n                          <View\r\n                            key={speaker.id}\r\n                            style={styles.headerColumnSpeaker}>\r\n                            <TouchableOpacity\r\n                              key={speaker.id}\r\n                              onPress={() => this._handlePressSpeaker(speaker)}>\r\n                              <CachedImage\r\n                                source={{uri: speaker.avatarUrl}}\r\n                                style={styles.avatarMultiple}\r\n                                key={speaker.id + talk.title}\r\n                              />\r\n                            </TouchableOpacity>\r\n                            {speaker.name.split(' ').map((name, index) => (\r\n                              <View key={index}>\r\n                                <TouchableOpacity\r\n                                  key={speaker.id}\r\n                                  onPress={() =>\r\n                                    this._handlePressSpeaker(speaker)\r\n                                  }>\r\n                                  <SemiBoldText\r\n                                    style={styles.headerText}\r\n                                    key={'speakers' + speaker.id + name}>\r\n                                    {name}\r\n                                  </SemiBoldText>\r\n                                </TouchableOpacity>\r\n                              </View>\r\n                            ))}\r\n                          </View>\r\n                        ))\r\n                      : null}\r\n                  </View>\r\n                ) : (\r\n                  <CachedImage\r\n                    source={{uri: speaker.avatarUrl}}\r\n                    style={styles.avatar}\r\n                    key={speaker.avatarUrl}\r\n                  />\r\n                )}\r\n              </FadeIn>\r\n            </Animated.View>\r\n            {talkScreen ? null : (\r\n              <SemiBoldText style={styles.headerText} key={speaker.id}>\r\n                {speaker.name}\r\n              </SemiBoldText>\r\n            )}\r\n            {speaker && speaker.twitter ? (\r\n              <TouchableOpacity\r\n                onPress={() =>\r\n                  this._handlePressSpeakerTwitter(speaker.twitter)\r\n                }>\r\n                <RegularText style={styles.headerText}>\r\n                  @{speaker.twitter}\r\n                </RegularText>\r\n              </TouchableOpacity>\r\n            ) : null}\r\n            {talk ? (\r\n              <BoldText style={styles.talkTitleText}>{talk.title}</BoldText>\r\n            ) : null}\r\n          </View>\r\n          {videoURL ? (\r\n            <View style={styles.videoWrapper}>\r\n              <WebView\r\n                source={{\r\n                  uri: `https://www.youtube.com/embed/${talk.youtubeId}`,\r\n                }}\r\n                startInLoadingState\r\n                scalesPageToFit\r\n                javaScriptEnabled\r\n                style={{flex: 1, height: 240}}\r\n              />\r\n            </View>\r\n          ) : null}\r\n          <AnimatableView\r\n            animation=\"fadeIn\"\r\n            useNativeDriver\r\n            delay={Platform.OS === 'ios' ? 50 : 150}\r\n            duration={500}\r\n            style={styles.content}>\r\n            {talkScreen ? null : (\r\n              <View>\r\n                <SemiBoldText style={styles.sectionHeader}>Bio</SemiBoldText>\r\n                <Markdown styles={markdownStyles}>{speaker.bio}</Markdown>\r\n              </View>\r\n            )}\r\n            {talk ? (\r\n              <SemiBoldText style={styles.sectionHeader}>\r\n                {talk && talk.type === 0 ? 'Talk description' : null}\r\n                {talk && talk.type === 1 ? 'Workshop description' : null}\r\n                {talk && talk.type === 6 ? 'Panel description' : null}\r\n                {talk && talk.type !== 6 && talk.type !== 0 && talk.type !== 1\r\n                  ? 'Description'\r\n                  : null}\r\n              </SemiBoldText>\r\n            ) : null}\r\n            {talk ? (\r\n              <Markdown styles={markdownStyles}>\r\n                {talk.description.replace(\r\n                  '**Click here to see covered subjects**',\r\n                  ''\r\n                )}\r\n              </Markdown>\r\n            ) : null}\r\n            {talkScreen && speakers.length > 0 ? (\r\n              <View>\r\n                <SemiBoldText style={styles.sectionHeader}>\r\n                  {talk.type === 1 ? 'Trainers' : 'Speakers'}\r\n                </SemiBoldText>\r\n\r\n                {speakers.map(speaker => (\r\n                  <View key={speaker.id}>\r\n                    <SemiBoldText key={speaker.id + talk.title}>\r\n                      {speaker.name}\r\n                    </SemiBoldText>\r\n                    <Markdown styles={markdownStyles}>{speaker.bio}</Markdown>\r\n                  </View>\r\n                ))}\r\n              </View>\r\n            ) : null}\r\n            {talk ? (\r\n              <View>\r\n                <SemiBoldText style={styles.sectionHeader}>Time</SemiBoldText>\r\n                <RegularText>\r\n                  {convertUtcDateToEventTimezoneHour(talk.startDate)}\r\n                </RegularText>\r\n                <RegularText>{talk.room}</RegularText>\r\n              </View>\r\n            ) : null}\r\n          </AnimatableView>\r\n        </AnimatedScrollView>\r\n\r\n        <NavigationBar\r\n          animatedBackgroundOpacity={headerOpacity}\r\n          style={[\r\n            Platform.OS === 'android'\r\n              ? {height: Layout.headerHeight + Constants.statusBarHeight}\r\n              : null,\r\n          ]}\r\n          renderLeftButton={() => (\r\n            <View\r\n              style={{\r\n                // gross dumb things\r\n                paddingTop: Platform.OS === 'android' ? 30 : 0,\r\n                marginTop: Layout.notchHeight > 0 ? -5 : 0,\r\n              }}>\r\n              <CloseButton\r\n                onPress={() => this.props.navigation.goBack()}\r\n                tintColor=\"#fff\"\r\n                title={null}\r\n              />\r\n            </View>\r\n          )}\r\n          renderRightButton={() => {\r\n            talk ? <SavedButtonNavigationItem talk={talk} /> : null;\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  _renderTruncatedFooter = handlePress => {\r\n    return (\r\n      <TouchableOpacity\r\n        hitSlop={{top: 15, left: 15, right: 15, bottom: 15}}\r\n        onPress={handlePress}>\r\n        <SemiBoldText style={{color: Colors.blue, marginTop: 5}}>\r\n          Read more\r\n        </SemiBoldText>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  _renderRevealedFooter = handlePress => {\r\n    return (\r\n      <TouchableOpacity\r\n        hitSlop={{top: 15, left: 15, right: 15, bottom: 15}}\r\n        onPress={handlePress}>\r\n        <SemiBoldText style={{color: Colors.blue, marginTop: 5}}>\r\n          Show less\r\n        </SemiBoldText>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  _handlePressSpeaker = speaker => {\r\n    this.props.navigation.navigate('Details', {speaker});\r\n  };\r\n\r\n  _handlePressSpeakerTwitter = async twitter => {\r\n    try {\r\n      await Linking.openURL(`twitter://user?screen_name=` + twitter);\r\n    } catch (e) {\r\n      WebBrowser.openBrowserAsync('https://twitter.com/' + twitter);\r\n    }\r\n  };\r\n}\r\nconst markdownStyles = {\r\n  // text: {},\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  avatar: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50,\r\n    marginBottom: 10,\r\n  },\r\n  avatarMultiple: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    marginBottom: 10,\r\n  },\r\n  content: {\r\n    backgroundColor: '#fff',\r\n    paddingBottom: 20,\r\n    paddingHorizontal: 20,\r\n  },\r\n  markdownBio: {\r\n    backgroundColor: '#fff',\r\n    paddingBottom: 20,\r\n    paddingHorizontal: 20,\r\n    width: 300,\r\n    height: 200,\r\n  },\r\n  markdownTalkDescription: {\r\n    backgroundColor: '#fff',\r\n    paddingBottom: 20,\r\n    paddingHorizontal: 20,\r\n    width: 300,\r\n    height: 600,\r\n  },\r\n  headerRowSpeaker: {\r\n    flexDirection: 'row',\r\n    height: 140,\r\n  },\r\n  headerColumnSpeaker: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 5,\r\n  },\r\n  headerContainer: {\r\n    backgroundColor: Colors.blue,\r\n    paddingTop: Constants.statusBarHeight + Layout.notchHeight + 20,\r\n    paddingBottom: 20,\r\n    paddingHorizontal: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  headerText: {\r\n    color: '#fff',\r\n    fontSize: FontSizes.subtitle,\r\n  },\r\n  talkTitleText: {\r\n    color: '#fff',\r\n    fontSize: FontSizes.title,\r\n    textAlign: 'center',\r\n    marginTop: 10,\r\n  },\r\n  sectionHeader: {\r\n    fontSize: FontSizes.bodyTitle,\r\n    marginTop: 15,\r\n    marginBottom: 3,\r\n  },\r\n  videoWrapper: {},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}