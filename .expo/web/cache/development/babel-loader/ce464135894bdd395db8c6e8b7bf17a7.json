{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\components\\\\Tickets.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { RegularText } from \"./StyledText\";\nimport TicketCard from \"./TicketCard\";\nimport { Colors, FontSizes } from \"../constants\";\nimport { convertUtcDateToEventTimezoneDaytime, conferenceHasEnded } from \"../utils\";\nimport { Title } from 'react-native-paper';\n\nvar Tickets = function (_React$Component) {\n  _inherits(Tickets, _React$Component);\n\n  var _super = _createSuper(Tickets);\n\n  function Tickets() {\n    _classCallCheck(this, Tickets);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Tickets, [{\n    key: \"render\",\n    value: function render() {\n      var tix = this.props.tickets || [];\n      return React.createElement(View, {\n        style: [{\n          marginHorizontal: 10\n        }, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, \"My Tickets\"), tix.map(function (ticket) {\n        return ticket ? React.createElement(TicketCard, {\n          key: ticket.ref,\n          ticket: ticket,\n          style: {\n            marginTop: 10,\n            marginBottom: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }\n        }) : null;\n      }));\n    }\n  }, {\n    key: \"_renderDateTime\",\n    value: function _renderDateTime() {\n      if (conferenceHasEnded()) {\n        return null;\n      }\n\n      var dateTime = this.state.dateTime;\n\n      if (dateTime) {\n        return React.createElement(RegularText, {\n          style: styles.time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }\n        }, convertUtcDateToEventTimezoneDaytime(dateTime));\n      } else {}\n    }\n  }]);\n\n  return Tickets;\n}(React.Component);\n\nexport { Tickets as default };\nvar styles = StyleSheet.create({\n  time: {\n    color: Colors.faint,\n    fontSize: FontSizes.subtitle\n  }\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/components/Tickets.js"],"names":["React","RegularText","TicketCard","Colors","FontSizes","convertUtcDateToEventTimezoneDaytime","conferenceHasEnded","Title","Tickets","tix","props","tickets","marginHorizontal","style","map","ticket","ref","marginTop","marginBottom","dateTime","state","styles","time","Component","StyleSheet","create","color","faint","fontSize","subtitle"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,SAAQC,WAAR;AACA,OAAOC,UAAP;AACA,SAAQC,MAAR,EAAgBC,SAAhB;AACA,SACEC,oCADF,EAEEC,kBAFF;AAIA,SAAQC,KAAR,QAAoB,oBAApB;;IAEqBC,O;;;;;;;;;;;;;6BACV;AACP,UAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWC,OAAX,IAAsB,EAAhC;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,gBAAgB,EAAE;AAAnB,SAAD,EAAyB,KAAKF,KAAL,CAAWG,KAApC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGJ,GAAG,CAACK,GAAJ,CAAQ,UAAAC,MAAM;AAAA,eACbA,MAAM,GACJ,oBAAC,UAAD;AACE,UAAA,GAAG,EAAEA,MAAM,CAACC,GADd;AAEE,UAAA,MAAM,EAAED,MAFV;AAGE,UAAA,KAAK,EAAE;AAACE,YAAAA,SAAS,EAAE,EAAZ;AAAgBC,YAAAA,YAAY,EAAE;AAA9B,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADI,GAMF,IAPS;AAAA,OAAd,CAFH,CADF;AAcD;;;sCAEiB;AAChB,UAAIZ,kBAAkB,EAAtB,EAA0B;AACxB,eAAO,IAAP;AACD;;AAHe,UAKTa,QALS,GAKG,KAAKC,KALR,CAKTD,QALS;;AAOhB,UAAIA,QAAJ,EAAc;AACZ,eACE,oBAAC,WAAD;AAAa,UAAA,KAAK,EAAEE,MAAM,CAACC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGjB,oCAAoC,CAACc,QAAD,CADvC,CADF;AAKD,OAND,MAMO,CAEN;AACF;;;;EAnCkCnB,KAAK,CAACuB,S;;SAAtBf,O;AAsCrB,IAAMa,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,IAAI,EAAE;AACJI,IAAAA,KAAK,EAAEvB,MAAM,CAACwB,KADV;AAEJC,IAAAA,QAAQ,EAAExB,SAAS,CAACyB;AAFhB;AADyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport {StyleSheet, View, AsyncStorage} from 'react-native';\r\n\r\nimport {RegularText} from './StyledText';\r\nimport TicketCard from './TicketCard';\r\nimport {Colors, FontSizes} from '../constants';\r\nimport {\r\n  convertUtcDateToEventTimezoneDaytime,\r\n  conferenceHasEnded,\r\n} from '../utils';\r\nimport {Title} from 'react-native-paper';\r\n\r\nexport default class Tickets extends React.Component {\r\n  render() {\r\n    let tix = this.props.tickets || [];\r\n    return (\r\n      <View style={[{marginHorizontal: 10}, this.props.style]}>\r\n        <Title>My Tickets</Title>\r\n        {tix.map(ticket =>\r\n          ticket ? (\r\n            <TicketCard\r\n              key={ticket.ref}\r\n              ticket={ticket}\r\n              style={{marginTop: 10, marginBottom: 10}}\r\n            />\r\n          ) : null\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n\r\n  _renderDateTime() {\r\n    if (conferenceHasEnded()) {\r\n      return null;\r\n    }\r\n\r\n    const {dateTime} = this.state;\r\n\r\n    if (dateTime) {\r\n      return (\r\n        <RegularText style={styles.time}>\r\n          {convertUtcDateToEventTimezoneDaytime(dateTime)}\r\n        </RegularText>\r\n      );\r\n    } else {\r\n      // handle after conf thing\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  time: {\r\n    color: Colors.faint,\r\n    fontSize: FontSizes.subtitle,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}