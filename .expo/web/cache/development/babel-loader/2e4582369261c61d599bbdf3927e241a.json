{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\node_modules\\\\react-native-maps\\\\lib\\\\web\\\\Leaflet\\\\Polygon.js\";\nimport * as React from 'react';\nimport { Polygon } from 'react-leaflet';\nimport createLogger from \"../utils/createLogger\";\nimport { transformProps } from \"./utils/transformProps\";\nvar logger = createLogger('Leaflet', 'Polygon');\n\nfunction localTransformProps(props) {\n  var strokeColor = props.strokeColor,\n      strokeColors = props.strokeColors;\n\n  if (Array.isArray(strokeColors) && strokeColor.length) {\n    logger.warn('`strokeColors` is not supported');\n  }\n\n  return transformProps(props);\n}\n\nvar ExpoPolygon = function (_React$Component) {\n  _inherits(ExpoPolygon, _React$Component);\n\n  function ExpoPolygon() {\n    _classCallCheck(this, ExpoPolygon);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ExpoPolygon).apply(this, arguments));\n  }\n\n  _createClass(ExpoPolygon, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      this.ref.setStyleIfChanged(this.props, localTransformProps(props));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var props = localTransformProps(this.props);\n      return React.createElement(Polygon, _extends({\n        ref: function ref(_ref) {\n          return _this.ref = _ref;\n        }\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        }\n      }));\n    }\n  }]);\n\n  return ExpoPolygon;\n}(React.Component);\n\nexport { ExpoPolygon as default };","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/node_modules/react-native-maps/lib/web/Leaflet/Polygon.js"],"names":["React","Polygon","createLogger","transformProps","logger","localTransformProps","props","strokeColor","strokeColors","Array","isArray","length","warn","ExpoPolygon","ref","setStyleIfChanged","Component"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAOC,YAAP;AACA,SAASC,cAAT;AAEA,IAAMC,MAAM,GAAGF,YAAY,CAAC,SAAD,EAAY,SAAZ,CAA3B;;AAEA,SAASG,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA,MAC1BC,WAD0B,GACID,KADJ,CAC1BC,WAD0B;AAAA,MACbC,YADa,GACIF,KADJ,CACbE,YADa;;AAElC,MAAIC,KAAK,CAACC,OAAN,CAAcF,YAAd,KAA+BD,WAAW,CAACI,MAA/C,EAAuD;AACrDP,IAAAA,MAAM,CAACQ,IAAP,CAAY,iCAAZ;AACD;;AAED,SAAOT,cAAc,CAACG,KAAD,CAArB;AACD;;IAEoBO,W;;;;;;;;;;;mCACJP,K,EAAO;AACpB,WAAKQ,GAAL,CAASC,iBAAT,CAA2B,KAAKT,KAAhC,EAAuCD,mBAAmB,CAACC,KAAD,CAA1D;AACD;;;6BAEQ;AAAA;;AACP,UAAMA,KAAK,GAAGD,mBAAmB,CAAC,KAAKC,KAAN,CAAjC;AAEA,aAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAE,aAAAQ,IAAG;AAAA,iBAAK,KAAI,CAACA,GAAL,GAAWA,IAAhB;AAAA;AAAjB,SAA2CR,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EATsCN,KAAK,CAACgB,S;;SAA1BH,W","sourcesContent":["import * as React from 'react';\r\nimport { Polygon } from 'react-leaflet';\r\n\r\nimport createLogger from '../utils/createLogger';\r\nimport { transformProps } from './utils/transformProps';\r\n\r\nconst logger = createLogger('Leaflet', 'Polygon');\r\n\r\nfunction localTransformProps(props) {\r\n  const { strokeColor, strokeColors } = props;\r\n  if (Array.isArray(strokeColors) && strokeColor.length) {\r\n    logger.warn('`strokeColors` is not supported');\r\n  }\r\n\r\n  return transformProps(props);\r\n}\r\n\r\nexport default class ExpoPolygon extends React.Component {\r\n  setNativeProps(props) {\r\n    this.ref.setStyleIfChanged(this.props, localTransformProps(props));\r\n  }\r\n\r\n  render() {\r\n    const props = localTransformProps(this.props);\r\n\r\n    return <Polygon ref={ref => (this.ref = ref)} {...props} />;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}