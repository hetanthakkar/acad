{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\components\\\\SaveButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { BorderlessButton } from 'react-native-gesture-handler';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Icons } from \"../constants\";\nimport { toggleSaved, withSaveState } from \"../utils/storage\";\n\nvar SaveButton = withSaveState(_class = (_temp = function (_React$Component) {\n  _inherits(SaveButton, _React$Component);\n\n  var _super = _createSuper(SaveButton);\n\n  function SaveButton() {\n    var _this;\n\n    _classCallCheck(this, SaveButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._handlePress = function () {\n      toggleSaved(_this.props.talk);\n    };\n\n    return _this;\n  }\n\n  _createClass(SaveButton, [{\n    key: \"render\",\n    value: function render() {\n      var saved = this.props.saved;\n      return React.createElement(BorderlessButton, {\n        onPress: this._handlePress,\n        style: {\n          alignSelf: 'flex-start',\n          backgroundColor: 'transparent',\n          paddingLeft: 15,\n          paddingRight: 15\n        },\n        hitSlop: {\n          left: 30,\n          top: 30,\n          right: 30,\n          bottom: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, React.createElement(Ionicons, {\n        name: saved ? Icons.favoriteActive : Icons.favorite,\n        size: 25,\n        color: \"#fff\",\n        style: {\n          backgroundColor: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SaveButton;\n}(React.Component), _temp)) || _class;\n\nexport { SaveButton as default };","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/components/SaveButton.js"],"names":["React","BorderlessButton","Ionicons","Icons","toggleSaved","withSaveState","SaveButton","_handlePress","props","talk","saved","alignSelf","backgroundColor","paddingLeft","paddingRight","left","top","right","bottom","favoriteActive","favorite","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,QAA+B,8BAA/B;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,KAAR;AACA,SAAQC,WAAR,EAAqBC,aAArB;;IAGqBC,U,GADpBD,a;;;;;;;;;;;;;;;;UAyBCE,Y,GAAe,YAAM;AACnBH,MAAAA,WAAW,CAAC,MAAKI,KAAL,CAAWC,IAAZ,CAAX;AACD,K;;;;;;;6BAzBQ;AAAA,UACAC,KADA,GACS,KAAKF,KADd,CACAE,KADA;AAGP,aACE,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE,KAAKH,YADhB;AAEE,QAAA,KAAK,EAAE;AACLI,UAAAA,SAAS,EAAE,YADN;AAELC,UAAAA,eAAe,EAAE,aAFZ;AAGLC,UAAAA,WAAW,EAAE,EAHR;AAILC,UAAAA,YAAY,EAAE;AAJT,SAFT;AAQE,QAAA,OAAO,EAAE;AAACC,UAAAA,IAAI,EAAE,EAAP;AAAWC,UAAAA,GAAG,EAAE,EAAhB;AAAoBC,UAAAA,KAAK,EAAE,EAA3B;AAA+BC,UAAAA,MAAM,EAAE;AAAvC,SARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAER,KAAK,GAAGP,KAAK,CAACgB,cAAT,GAA0BhB,KAAK,CAACiB,QAD7C;AAEE,QAAA,IAAI,EAAE,EAFR;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,KAAK,EAAE;AAACR,UAAAA,eAAe,EAAE;AAAlB,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAkBD;;;;EAtBqCZ,KAAK,CAACqB,S;;SAAzBf,U","sourcesContent":["import React from 'react';\r\nimport {BorderlessButton} from 'react-native-gesture-handler';\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport {Icons} from '../constants';\r\nimport {toggleSaved, withSaveState} from '../utils/storage';\r\n\r\n@withSaveState\r\nexport default class SaveButton extends React.Component {\r\n  render() {\r\n    const {saved} = this.props;\r\n\r\n    return (\r\n      <BorderlessButton\r\n        onPress={this._handlePress}\r\n        style={{\r\n          alignSelf: 'flex-start',\r\n          backgroundColor: 'transparent',\r\n          paddingLeft: 15,\r\n          paddingRight: 15,\r\n        }}\r\n        hitSlop={{left: 30, top: 30, right: 30, bottom: 30}}>\r\n        <Ionicons\r\n          name={saved ? Icons.favoriteActive : Icons.favorite}\r\n          size={25}\r\n          color=\"#fff\"\r\n          style={{backgroundColor: 'transparent'}}\r\n        />\r\n      </BorderlessButton>\r\n    );\r\n  }\r\n\r\n  _handlePress = () => {\r\n    toggleSaved(this.props.talk);\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}