{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\node_modules\\\\react-native-htmlview\\\\HTMLView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport htmlToElement from \"./htmlToElement\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nvar boldStyle = {\n  fontWeight: 'bold'\n};\nvar italicStyle = {\n  fontStyle: 'italic'\n};\nvar underlineStyle = {\n  textDecorationLine: 'underline'\n};\nvar strikethroughStyle = {\n  textDecorationLine: 'line-through'\n};\nvar codeStyle = {\n  fontFamily: Platform.OS === 'ios' ? 'Menlo' : 'monospace'\n};\nvar baseStyles = StyleSheet.create({\n  b: boldStyle,\n  strong: boldStyle,\n  i: italicStyle,\n  em: italicStyle,\n  u: underlineStyle,\n  s: strikethroughStyle,\n  strike: strikethroughStyle,\n  pre: codeStyle,\n  code: codeStyle,\n  a: {\n    fontWeight: 'bold',\n    color: '#007AFF'\n  },\n  h1: {\n    fontWeight: 'bold',\n    fontSize: 36\n  },\n  h2: {\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  h3: {\n    fontWeight: 'bold',\n    fontSize: 24\n  },\n  h4: {\n    fontWeight: 'bold',\n    fontSize: 18\n  },\n  h5: {\n    fontWeight: 'bold',\n    fontSize: 14\n  },\n  h6: {\n    fontWeight: 'bold',\n    fontSize: 12\n  }\n});\nvar htmlToElementOptKeys = ['lineBreak', 'paragraphBreak', 'bullet', 'TextComponent', 'textComponentProps', 'NodeComponent', 'nodeComponentProps'];\n\nvar HtmlView = function (_PureComponent) {\n  _inherits(HtmlView, _PureComponent);\n\n  var _super = _createSuper(HtmlView);\n\n  function HtmlView() {\n    var _this;\n\n    _classCallCheck(this, HtmlView);\n\n    _this = _super.call(this);\n    _this.state = {\n      element: null\n    };\n    return _this;\n  }\n\n  _createClass(HtmlView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n      this.startHtmlRender(this.props.value);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.value !== prevProps.value || this.props.stylesheet !== prevProps.stylesheet || this.props.textComponentProps !== prevProps.textComponentProps || this.props.nodeComponentProps !== prevProps.nodeComponentProps) {\n        this.startHtmlRender(this.props.value, this.props.stylesheet, this.props.textComponentProps, this.props.nodeComponentProps);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"startHtmlRender\",\n    value: function startHtmlRender(value, style, textComponentProps, nodeComponentProps) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          addLineBreaks = _this$props.addLineBreaks,\n          onLinkPress = _this$props.onLinkPress,\n          onLinkLongPress = _this$props.onLinkLongPress,\n          stylesheet = _this$props.stylesheet,\n          renderNode = _this$props.renderNode,\n          onError = _this$props.onError;\n\n      if (!value) {\n        this.setState({\n          element: null\n        });\n      }\n\n      var opts = {\n        addLineBreaks: addLineBreaks,\n        linkHandler: onLinkPress,\n        linkLongPressHandler: onLinkLongPress,\n        styles: _objectSpread(_objectSpread(_objectSpread({}, baseStyles), stylesheet), style),\n        customRenderer: renderNode\n      };\n      htmlToElementOptKeys.forEach(function (key) {\n        if (typeof _this2.props[key] !== 'undefined') {\n          opts[key] = _this2.props[key];\n        }\n      });\n\n      if (textComponentProps) {\n        opts.textComponentProps = textComponentProps;\n      }\n\n      if (nodeComponentProps) {\n        opts.nodeComponentProps = nodeComponentProps;\n      }\n\n      htmlToElement(value, opts, function (err, element) {\n        if (err) {\n          onError(err);\n        }\n\n        if (_this2.mounted) {\n          _this2.setState({\n            element: element\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          RootComponent = _this$props2.RootComponent,\n          style = _this$props2.style;\n      var element = this.state.element;\n\n      if (element) {\n        return React.createElement(RootComponent, _extends({}, this.props.rootComponentProps, {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          }\n        }), element);\n      }\n\n      return React.createElement(RootComponent, _extends({}, this.props.rootComponentProps, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return HtmlView;\n}(PureComponent);\n\nHtmlView.propTypes = {\n  addLineBreaks: PropTypes.bool,\n  bullet: PropTypes.string,\n  lineBreak: PropTypes.string,\n  NodeComponent: PropTypes.func,\n  nodeComponentProps: PropTypes.object,\n  onError: PropTypes.func,\n  onLinkPress: PropTypes.func,\n  onLinkLongPress: PropTypes.func,\n  paragraphBreak: PropTypes.string,\n  renderNode: PropTypes.func,\n  RootComponent: PropTypes.func,\n  rootComponentProps: PropTypes.object,\n  style: ViewPropTypes.style,\n  stylesheet: PropTypes.object,\n  TextComponent: PropTypes.func,\n  textComponentProps: PropTypes.object,\n  value: PropTypes.string\n};\nHtmlView.defaultProps = {\n  addLineBreaks: true,\n  onLinkPress: function onLinkPress(url) {\n    return Linking.openURL(url);\n  },\n  onLinkLongPress: null,\n  onError: console.error.bind(console),\n  RootComponent: function RootComponent(element) {\n    return React.createElement(View, _extends({}, element, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }));\n  }\n};\nexport default HtmlView;","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/node_modules/react-native-htmlview/HTMLView.js"],"names":["React","PureComponent","PropTypes","htmlToElement","boldStyle","fontWeight","italicStyle","fontStyle","underlineStyle","textDecorationLine","strikethroughStyle","codeStyle","fontFamily","Platform","OS","baseStyles","StyleSheet","create","b","strong","i","em","u","s","strike","pre","code","a","color","h1","fontSize","h2","h3","h4","h5","h6","htmlToElementOptKeys","HtmlView","state","element","mounted","startHtmlRender","props","value","prevProps","stylesheet","textComponentProps","nodeComponentProps","style","addLineBreaks","onLinkPress","onLinkLongPress","renderNode","onError","setState","opts","linkHandler","linkLongPressHandler","styles","customRenderer","forEach","key","err","RootComponent","rootComponentProps","propTypes","bool","bullet","string","lineBreak","NodeComponent","func","object","paragraphBreak","ViewPropTypes","TextComponent","defaultProps","url","Linking","openURL","console","error","bind"],"mappings":"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","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport htmlToElement from './htmlToElement';\nimport {Linking, Platform, StyleSheet, View, ViewPropTypes} from 'react-native';\n\nconst boldStyle = {fontWeight: 'bold'};\nconst italicStyle = {fontStyle: 'italic'};\nconst underlineStyle = {textDecorationLine: 'underline'};\nconst strikethroughStyle = {textDecorationLine: 'line-through'};\nconst codeStyle = {fontFamily: Platform.OS === 'ios' ? 'Menlo' : 'monospace'};\n\nconst baseStyles = StyleSheet.create({\n  b: boldStyle,\n  strong: boldStyle,\n  i: italicStyle,\n  em: italicStyle,\n  u: underlineStyle,\n  s: strikethroughStyle,\n  strike: strikethroughStyle,\n  pre: codeStyle,\n  code: codeStyle,\n  a: {\n    fontWeight: 'bold',\n    color: '#007AFF',\n  },\n  h1: {fontWeight: 'bold', fontSize: 36},\n  h2: {fontWeight: 'bold', fontSize: 30},\n  h3: {fontWeight: 'bold', fontSize: 24},\n  h4: {fontWeight: 'bold', fontSize: 18},\n  h5: {fontWeight: 'bold', fontSize: 14},\n  h6: {fontWeight: 'bold', fontSize: 12},\n});\n\nconst htmlToElementOptKeys = [\n  'lineBreak',\n  'paragraphBreak',\n  'bullet',\n  'TextComponent',\n  'textComponentProps',\n  'NodeComponent',\n  'nodeComponentProps',\n];\n\nclass HtmlView extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      element: null,\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.startHtmlRender(this.props.value);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value || this.props.stylesheet !== prevProps.stylesheet || this.props.textComponentProps !== prevProps.textComponentProps || this.props.nodeComponentProps !== prevProps.nodeComponentProps) {\n      this.startHtmlRender(this.props.value, this.props.stylesheet, this.props.textComponentProps, this.props.nodeComponentProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  startHtmlRender(value, style, textComponentProps, nodeComponentProps) {\n    const {\n      addLineBreaks,\n      onLinkPress,\n      onLinkLongPress,\n      stylesheet,\n      renderNode,\n      onError,\n    } = this.props;\n\n    if (!value) {\n      this.setState({element: null});\n    }\n\n    const opts = {\n      addLineBreaks,\n      linkHandler: onLinkPress,\n      linkLongPressHandler: onLinkLongPress,\n      styles: {...baseStyles, ...stylesheet, ...style},\n      customRenderer: renderNode,\n    };\n\n    htmlToElementOptKeys.forEach(key => {\n      if (typeof this.props[key] !== 'undefined') {\n        opts[key] = this.props[key];\n      }\n    });\n\n    if (textComponentProps) {\n      opts.textComponentProps = textComponentProps;\n    }\n\n    if (nodeComponentProps) {\n      opts.nodeComponentProps = nodeComponentProps;\n    }\n\n    htmlToElement(value, opts, (err, element) => {\n      if (err) {\n        onError(err);\n      }\n\n      if (this.mounted) {\n        this.setState({element});\n      }\n    });\n  }\n\n  render() {\n    const {RootComponent, style} = this.props;\n    const {element} = this.state;\n    if (element) {\n      return (\n        <RootComponent\n          {...this.props.rootComponentProps}\n          style={style}\n        >\n          {element}\n        </RootComponent>\n      );\n    }\n    return (\n      <RootComponent\n        {...this.props.rootComponentProps}\n        style={style}\n      />\n    );\n  }\n}\n\nHtmlView.propTypes = {\n  addLineBreaks: PropTypes.bool,\n  bullet: PropTypes.string,\n  lineBreak: PropTypes.string,\n  NodeComponent: PropTypes.func,\n  nodeComponentProps: PropTypes.object,\n  onError: PropTypes.func,\n  onLinkPress: PropTypes.func,\n  onLinkLongPress: PropTypes.func,\n  paragraphBreak: PropTypes.string,\n  renderNode: PropTypes.func,\n  RootComponent: PropTypes.func,\n  rootComponentProps: PropTypes.object,\n  style: ViewPropTypes.style,\n  stylesheet: PropTypes.object,\n  TextComponent: PropTypes.func,\n  textComponentProps: PropTypes.object,\n  value: PropTypes.string,\n};\n\nHtmlView.defaultProps = {\n  addLineBreaks: true,\n  onLinkPress: url => Linking.openURL(url),\n  onLinkLongPress: null,\n  onError: console.error.bind(console),\n  RootComponent: element => <View {...element} />, // eslint-disable-line react/display-name\n};\n\nexport default HtmlView;\n"]},"metadata":{},"sourceType":"module"}