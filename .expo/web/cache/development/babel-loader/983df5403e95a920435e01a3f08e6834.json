{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\screens\\\\AttendeeDetail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { View as AnimatableView } from 'react-native-animatable';\nimport { Button } from 'react-native-paper';\nimport { Constants } from 'expo';\nimport FadeIn from 'react-native-fade-in-image';\nimport _ from 'lodash';\nimport AnimatedScrollView from \"../components/AnimatedScrollView\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport { Colors, FontSizes, Layout } from \"../constants\";\nimport { RegularText, SemiBoldText } from \"../components/StyledText\";\nimport GravatarImage from \"../components/GravatarImage\";\nimport CloseButton from \"../components/CloseButton\";\nimport { sendEmail, openTwitter, addContact, getContactTwitter } from \"../utils\";\n\nvar AttendeeDetail = function (_React$Component) {\n  _inherits(AttendeeDetail, _React$Component);\n\n  var _super = _createSuper(AttendeeDetail);\n\n  function AttendeeDetail() {\n    var _this;\n\n    _classCallCheck(this, AttendeeDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      scrollY: new Animated.Value(0)\n    };\n\n    _this._handlePressTwitter = function () {\n      var attendee = _this.props.navigation.state.params.attendee;\n      var twitter = getContactTwitter(attendee);\n      openTwitter(twitter);\n    };\n\n    _this._handlePressEmail = function () {\n      var emailTo = _this.props.navigation.state.params.attendee.email;\n      var tickets = _this.props.tickets;\n      var fromName = {\n        firstName: '',\n        lastName: ''\n      };\n\n      if (tickets && tickets[0] && tickets[0].firstName) {\n        fromName = tickets[0];\n      }\n\n      sendEmail(emailTo, fromName);\n    };\n\n    _this._handleAddToContacts = function _callee() {\n      var navigation, attendee;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              attendee = navigation.state.params.attendee;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(addContact(attendee));\n\n            case 4:\n              navigation.navigate('Contacts');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(AttendeeDetail, [{\n    key: \"render\",\n    value: function render() {\n      var params = this.props.navigation.state.params || {};\n      var attendee = params.attendee;\n\n      if (!attendee || !_.has(attendee, 'email')) {\n        this.props.navigation.goBack();\n        return null;\n      }\n\n      var twitter = getContactTwitter(attendee);\n      var scrollY = this.state.scrollY;\n      var scale = scrollY.interpolate({\n        inputRange: [-300, 0, 1],\n        outputRange: [2, 1, 1],\n        extrapolate: 'clamp'\n      });\n      var translateX = 0;\n      var translateY = scrollY.interpolate({\n        inputRange: [-300, 0, 1],\n        outputRange: [-50, 1, 1],\n        extrapolate: 'clamp'\n      });\n      var headerOpacity = scrollY.interpolate({\n        inputRange: [0, 30, 200],\n        outputRange: [0, 0, 1]\n      });\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: '#fff',\n          overflow: 'hidden'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, Platform.OS === 'ios' ? React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          top: -350,\n          left: 0,\n          right: 0,\n          height: 400,\n          transform: [{\n            translateY: scrollY.interpolate({\n              inputRange: [-1, 0, 1],\n              outputRange: [1, 0, 0]\n            })\n          }],\n          backgroundColor: Colors.blue\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }) : null, React.createElement(AnimatedScrollView, {\n        style: {\n          flex: 1,\n          backgroundColor: 'transparent'\n        },\n        scrollEventThrottle: 1,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: this.state.scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.headerContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          transform: [{\n            scale: scale\n          }, {\n            translateX: translateX\n          }, {\n            translateY: translateY\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, React.createElement(FadeIn, {\n        placeholderStyle: {\n          backgroundColor: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }, React.createElement(GravatarImage, {\n        style: styles.avatar,\n        email: attendee.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }))), React.createElement(SemiBoldText, {\n        style: styles.headerText,\n        key: attendee.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, attendee.firstName, \" \", attendee.lastName), twitter ? React.createElement(TouchableOpacity, {\n        onPress: this._handlePressTwitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, React.createElement(RegularText, {\n        style: styles.headerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, \"@\", twitter)) : null), React.createElement(AnimatableView, {\n        animation: \"fadeIn\",\n        useNativeDriver: true,\n        delay: 50,\n        duration: 250,\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        raised: true,\n        primary: true,\n        onPress: this._handleAddToContacts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }, \"Add to contacts\")))), React.createElement(NavigationBar, {\n        animatedBackgroundOpacity: headerOpacity,\n        style: [Platform.OS === 'android' ? {\n          height: Layout.headerHeight + Constants.statusBarHeight\n        } : null],\n        renderLeftButton: function renderLeftButton() {\n          return React.createElement(View, {\n            style: {\n              paddingTop: Platform.OS === 'android' ? 30 : 0,\n              marginTop: Layout.notchHeight > 0 ? -5 : 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return AttendeeDetail;\n}(React.Component);\n\nAttendeeDetail.navigationOptions = {\n  title: 'Attendee Details'\n};\nexport { AttendeeDetail as default };\nvar styles = StyleSheet.create({\n  container: {},\n  avatar: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    marginBottom: 10\n  },\n  content: {\n    backgroundColor: '#fff',\n    paddingTop: 20,\n    paddingBottom: 20,\n    paddingHorizontal: 20\n  },\n  headerContainer: {\n    backgroundColor: Colors.blue,\n    paddingTop: Constants.statusBarHeight + Layout.notchHeight + 20,\n    paddingBottom: 20,\n    paddingHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  headerText: {\n    color: '#fff',\n    fontSize: FontSizes.subtitle\n  }\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/screens/AttendeeDetail.js"],"names":["React","View","AnimatableView","Button","Constants","FadeIn","_","AnimatedScrollView","NavigationBar","Colors","FontSizes","Layout","RegularText","SemiBoldText","GravatarImage","CloseButton","sendEmail","openTwitter","addContact","getContactTwitter","AttendeeDetail","state","scrollY","Animated","Value","_handlePressTwitter","attendee","props","navigation","params","twitter","_handlePressEmail","emailTo","email","tickets","fromName","firstName","lastName","_handleAddToContacts","navigate","has","goBack","scale","interpolate","inputRange","outputRange","extrapolate","translateX","translateY","headerOpacity","flex","backgroundColor","overflow","Platform","OS","position","top","left","right","height","transform","blue","event","nativeEvent","contentOffset","y","useNativeDriver","styles","headerContainer","avatar","headerText","id","content","headerHeight","statusBarHeight","paddingTop","marginTop","notchHeight","Component","navigationOptions","title","StyleSheet","create","container","width","borderRadius","marginBottom","paddingBottom","paddingHorizontal","alignItems","justifyContent","color","fontSize","subtitle"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Animated,\r\n  Platform,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  View,\r\n} from 'react-native';\r\nimport {View as AnimatableView} from 'react-native-animatable';\r\nimport {Button} from 'react-native-paper';\r\nimport {Constants} from 'expo';\r\nimport FadeIn from 'react-native-fade-in-image';\r\nimport _ from 'lodash';\r\n\r\nimport AnimatedScrollView from '../components/AnimatedScrollView';\r\nimport NavigationBar from '../components/NavigationBar';\r\nimport {Colors, FontSizes, Layout} from '../constants';\r\nimport {RegularText, SemiBoldText} from '../components/StyledText';\r\nimport GravatarImage from '../components/GravatarImage';\r\nimport CloseButton from '../components/CloseButton';\r\nimport {sendEmail, openTwitter, addContact, getContactTwitter} from '../utils';\r\n\r\nexport default class AttendeeDetail extends React.Component {\r\n  static navigationOptions = {\r\n    title: 'Attendee Details',\r\n  };\r\n\r\n  state = {\r\n    scrollY: new Animated.Value(0),\r\n  };\r\n\r\n  _handlePressTwitter = () => {\r\n    const {attendee} = this.props.navigation.state.params;\r\n    const twitter = getContactTwitter(attendee);\r\n    openTwitter(twitter);\r\n  };\r\n\r\n  _handlePressEmail = () => {\r\n    const {\r\n      attendee: {email: emailTo},\r\n    } = this.props.navigation.state.params;\r\n    const {tickets} = this.props;\r\n    let fromName = {firstName: '', lastName: ''};\r\n    if (tickets && tickets[0] && tickets[0].firstName) {\r\n      fromName = tickets[0];\r\n    }\r\n    sendEmail(emailTo, fromName);\r\n  };\r\n\r\n  _handleAddToContacts = async () => {\r\n    const {navigation} = this.props;\r\n    const {attendee} = navigation.state.params;\r\n    await addContact(attendee);\r\n    navigation.navigate('Contacts');\r\n  };\r\n\r\n  render() {\r\n    const params = this.props.navigation.state.params || {};\r\n    const attendee = params.attendee;\r\n\r\n    if (!attendee || !_.has(attendee, 'email')) {\r\n      this.props.navigation.goBack();\r\n      return null;\r\n    }\r\n\r\n    const twitter = getContactTwitter(attendee);\r\n\r\n    const {scrollY} = this.state;\r\n    const scale = scrollY.interpolate({\r\n      inputRange: [-300, 0, 1],\r\n      outputRange: [2, 1, 1],\r\n      extrapolate: 'clamp',\r\n    });\r\n    const translateX = 0;\r\n    const translateY = scrollY.interpolate({\r\n      inputRange: [-300, 0, 1],\r\n      outputRange: [-50, 1, 1],\r\n      extrapolate: 'clamp',\r\n    });\r\n\r\n    const headerOpacity = scrollY.interpolate({\r\n      inputRange: [0, 30, 200],\r\n      outputRange: [0, 0, 1],\r\n    });\r\n\r\n    return (\r\n      <View style={{flex: 1, backgroundColor: '#fff', overflow: 'hidden'}}>\r\n        {Platform.OS === 'ios' ? (\r\n          <Animated.View\r\n            style={{\r\n              position: 'absolute',\r\n              top: -350,\r\n              left: 0,\r\n              right: 0,\r\n              height: 400,\r\n              transform: [\r\n                {\r\n                  translateY: scrollY.interpolate({\r\n                    inputRange: [-1, 0, 1],\r\n                    outputRange: [1, 0, 0],\r\n                  }),\r\n                },\r\n              ],\r\n              backgroundColor: Colors.blue,\r\n            }}\r\n          />\r\n        ) : null}\r\n        <AnimatedScrollView\r\n          style={{flex: 1, backgroundColor: 'transparent'}}\r\n          scrollEventThrottle={1}\r\n          onScroll={Animated.event(\r\n            [\r\n              {\r\n                nativeEvent: {contentOffset: {y: this.state.scrollY}},\r\n              },\r\n            ],\r\n            {useNativeDriver: true}\r\n          )}>\r\n          <View style={styles.headerContainer}>\r\n            <Animated.View\r\n              style={{transform: [{scale}, {translateX}, {translateY}]}}>\r\n              <FadeIn placeholderStyle={{backgroundColor: 'transparent'}}>\r\n                <GravatarImage style={styles.avatar} email={attendee.email} />\r\n              </FadeIn>\r\n            </Animated.View>\r\n            <SemiBoldText style={styles.headerText} key={attendee.id}>\r\n              {attendee.firstName} {attendee.lastName}\r\n            </SemiBoldText>\r\n            {twitter ? (\r\n              <TouchableOpacity onPress={this._handlePressTwitter}>\r\n                <RegularText style={styles.headerText}>@{twitter}</RegularText>\r\n              </TouchableOpacity>\r\n            ) : null}\r\n          </View>\r\n          <AnimatableView\r\n            animation=\"fadeIn\"\r\n            useNativeDriver\r\n            delay={50}\r\n            duration={250}\r\n            style={styles.content}>\r\n            <View>\r\n              <Button raised primary onPress={this._handleAddToContacts}>\r\n                Add to contacts\r\n              </Button>\r\n            </View>\r\n          </AnimatableView>\r\n        </AnimatedScrollView>\r\n\r\n        <NavigationBar\r\n          animatedBackgroundOpacity={headerOpacity}\r\n          style={[\r\n            Platform.OS === 'android'\r\n              ? {height: Layout.headerHeight + Constants.statusBarHeight}\r\n              : null,\r\n          ]}\r\n          renderLeftButton={() => (\r\n            <View\r\n              style={{\r\n                // gross dumb things\r\n                paddingTop: Platform.OS === 'android' ? 30 : 0,\r\n                marginTop: Layout.notchHeight > 0 ? -5 : 0,\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  avatar: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50,\r\n    marginBottom: 10,\r\n  },\r\n  content: {\r\n    backgroundColor: '#fff',\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n    paddingHorizontal: 20,\r\n  },\r\n  headerContainer: {\r\n    backgroundColor: Colors.blue,\r\n    paddingTop: Constants.statusBarHeight + Layout.notchHeight + 20,\r\n    paddingBottom: 20,\r\n    paddingHorizontal: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  headerText: {\r\n    color: '#fff',\r\n    fontSize: FontSizes.subtitle,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}