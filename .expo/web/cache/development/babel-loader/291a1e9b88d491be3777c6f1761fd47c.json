{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\screens\\\\TicketInstructions.js\",\n    _class,\n    _temp;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { View as AnimatableView } from 'react-native-animatable';\nimport { withNavigation } from 'react-navigation';\nimport AnimatedScrollView from \"../components/AnimatedScrollView\";\nimport { Colors, Layout } from \"../constants\";\nimport { Button, Card, CardContent, Title } from 'react-native-paper';\nimport Markdown from 'react-native-markdown-renderer';\n\nvar TicketInstructions = function (_React$Component) {\n  _inherits(TicketInstructions, _React$Component);\n\n  var _super = _createSuper(TicketInstructions);\n\n  function TicketInstructions() {\n    var _this;\n\n    _classCallCheck(this, TicketInstructions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      scrollY: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(TicketInstructions, [{\n    key: \"render\",\n    value: function render() {\n      var scrollY = this.state.scrollY;\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, React.createElement(AnimatedScrollView, {\n        style: {\n          flex: 1\n        },\n        contentContainerStyle: {\n          paddingBottom: 20 + Layout.notchHeight / 2\n        },\n        scrollEventThrottle: 1,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: Colors.blue,\n          padding: 10,\n          paddingTop: Layout.headerHeight - 10,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }), React.createElement(DeferredTicketInstructionsContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }), React.createElement(OverscrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return TicketInstructions;\n}(React.Component);\n\nvar DeferredTicketInstructionsContent = withNavigation(_class = (_temp = function (_React$Component2) {\n  _inherits(DeferredTicketInstructionsContent, _React$Component2);\n\n  var _super2 = _createSuper(DeferredTicketInstructionsContent);\n\n  _createClass(DeferredTicketInstructionsContent, [{\n    key: \"getTickets\",\n    value: function getTickets() {\n      var value;\n      return _regeneratorRuntime.async(function getTickets$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@MySuperStore2019:tickets'));\n\n            case 3:\n              value = _context.sent;\n              this.setState({\n                tickets: JSON.parse(value)\n              });\n              _context.next = 11;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n              return _context.abrupt(\"return\", []);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 7]], Promise);\n    }\n  }]);\n\n  function DeferredTicketInstructionsContent(props) {\n    var _this2;\n\n    _classCallCheck(this, DeferredTicketInstructionsContent);\n\n    _this2 = _super2.call(this, props);\n    _this2.state = {\n      tickets: [],\n      ready: Platform.OS === 'android' ? false : true\n    };\n\n    _this2.getTickets();\n\n    return _this2;\n  }\n\n  _createClass(DeferredTicketInstructionsContent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (this.state.ready) {\n        return;\n      }\n\n      setTimeout(function () {\n        _this3.setState({\n          ready: true\n        });\n      }, 200);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var params = this.props.navigation.state.params || {};\n      var ticket = params.ticket;\n      console.log('params', params);\n\n      if (!this.state.ready) {\n        return null;\n      }\n\n      return React.createElement(AnimatableView, {\n        animation: \"fadeIn\",\n        useNativeDriver: true,\n        duration: 800,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, ticket.firstName + ' ' + ticket.lastName, \" \"), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, \"Ticket Ref: \", ticket.ref, \" \"), React.createElement(Markdown, {\n        styles: markdownStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, ticket.mobileMessage))), React.createElement(Button, {\n        raised: true,\n        onPress: function onPress() {\n          return _this4.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, \"Close\"));\n    }\n  }]);\n\n  return DeferredTicketInstructionsContent;\n}(React.Component), _temp)) || _class;\n\nvar OverscrollView = function OverscrollView() {\n  return React.createElement(View, {\n    style: {\n      position: 'absolute',\n      top: -400,\n      height: 400,\n      left: 0,\n      right: 0,\n      backgroundColor: Colors.blue\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 3\n    }\n  });\n};\n\nvar markdownStyles = {\n  text: {}\n};\nexport default TicketInstructions;","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/screens/TicketInstructions.js"],"names":["React","View","AnimatableView","withNavigation","AnimatedScrollView","Colors","Layout","Button","Card","CardContent","Title","Markdown","TicketInstructions","state","scrollY","Animated","Value","flex","paddingBottom","notchHeight","event","nativeEvent","contentOffset","y","useNativeDriver","backgroundColor","blue","padding","paddingTop","headerHeight","justifyContent","alignItems","Component","DeferredTicketInstructionsContent","AsyncStorage","getItem","value","setState","tickets","JSON","parse","console","log","props","ready","Platform","OS","getTickets","setTimeout","params","navigation","ticket","firstName","lastName","ref","markdownStyles","mobileMessage","goBack","OverscrollView","position","top","height","left","right","text"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Animated, Platform, View, AsyncStorage} from 'react-native';\r\nimport {View as AnimatableView} from 'react-native-animatable';\r\nimport {withNavigation} from 'react-navigation';\r\n\r\nimport AnimatedScrollView from '../components/AnimatedScrollView';\r\nimport {Colors, Layout} from '../constants';\r\nimport {Button, Card, CardContent, Title} from 'react-native-paper';\r\nimport Markdown from 'react-native-markdown-renderer';\r\n\r\nclass TicketInstructions extends React.Component {\r\n  state = {\r\n    scrollY: new Animated.Value(0),\r\n  };\r\n\r\n  render() {\r\n    const {scrollY} = this.state;\r\n\r\n    return (\r\n      <View style={{flex: 1}}>\r\n        <AnimatedScrollView\r\n          style={{flex: 1}}\r\n          contentContainerStyle={{paddingBottom: 20 + Layout.notchHeight / 2}}\r\n          scrollEventThrottle={1}\r\n          onScroll={Animated.event(\r\n            [\r\n              {\r\n                nativeEvent: {contentOffset: {y: scrollY}},\r\n              },\r\n            ],\r\n            {useNativeDriver: true}\r\n          )}>\r\n          <View\r\n            style={{\r\n              backgroundColor: Colors.blue,\r\n              padding: 10,\r\n              paddingTop: Layout.headerHeight - 10,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}\r\n          />\r\n\r\n          <DeferredTicketInstructionsContent />\r\n          <OverscrollView />\r\n        </AnimatedScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n@withNavigation\r\nclass DeferredTicketInstructionsContent extends React.Component {\r\n  state = {\r\n    tickets: [],\r\n    ready: Platform.OS === 'android' ? false : true,\r\n  };\r\n  async getTickets() {\r\n    try {\r\n      const value = await AsyncStorage.getItem('@MySuperStore2019:tickets');\r\n      this.setState({tickets: JSON.parse(value)});\r\n    } catch (err) {\r\n      console.log(err);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getTickets();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.ready) {\r\n      return;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.setState({ready: true});\r\n    }, 200);\r\n  }\r\n\r\n  render() {\r\n    const params = this.props.navigation.state.params || {};\r\n    const ticket = params.ticket;\r\n    console.log('params', params);\r\n    if (!this.state.ready) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <AnimatableView animation=\"fadeIn\" useNativeDriver duration={800}>\r\n        <Card>\r\n          <CardContent>\r\n            <Title>{ticket.firstName + ' ' + ticket.lastName} </Title>\r\n            <Title>Ticket Ref: {ticket.ref} </Title>\r\n            <Markdown styles={markdownStyles}>{ticket.mobileMessage}</Markdown>\r\n          </CardContent>\r\n        </Card>\r\n        <Button raised onPress={() => this.props.navigation.goBack()}>\r\n          Close\r\n        </Button>\r\n      </AnimatableView>\r\n    );\r\n  }\r\n}\r\n\r\nconst OverscrollView = () => (\r\n  <View\r\n    style={{\r\n      position: 'absolute',\r\n      top: -400,\r\n      height: 400,\r\n      left: 0,\r\n      right: 0,\r\n      backgroundColor: Colors.blue,\r\n    }}\r\n  />\r\n);\r\n\r\nconst markdownStyles = {\r\n  text: {},\r\n};\r\n\r\nexport default TicketInstructions;\r\n"]},"metadata":{},"sourceType":"module"}