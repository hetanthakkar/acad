{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\blood.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport * as Device from \"expo-device\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Font from \"expo-font\";\nimport { Block } from \"./components\";\nimport * as theme from \"./theme\";\nimport * as mocks from \"./mocks\";\nimport Constants from \"expo-constants\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fontsLoaded: false,\n      device: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadFonts\",\n    value: function loadFonts() {\n      return Font.loadAsync({\n        \"Montserrat-Regular\": require(\"./assets/fonts/Montserrat-Regular.ttf\"),\n        \"Montserrat-Bold\": require(\"./assets/fonts/Montserrat-Bold.ttf\"),\n        \"Montserrat-SemiBold\": require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\n        \"Montserrat-Medium\": require(\"./assets/fonts/Montserrat-Medium.ttf\"),\n        \"Montserrat-Light\": require(\"./assets/fonts/Montserrat-Light.ttf\")\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(console.log(\"sldnfsdf\" + JSON.stringify(Constants.platform.web.ua.includes(\"Windows\"))));\n\n            case 2:\n              this.setState({\n                device: Device.brand\n              });\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(this.loadFonts());\n\n            case 5:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"renderRequest\",\n    value: function renderRequest(request) {\n      return React.createElement(Chats, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"renderRequests\",\n    value: function renderRequests() {\n      var _this2 = this;\n\n      var requests = this.props.requests;\n      return React.createElement(Block, {\n        flex: 0.8,\n        column: true,\n        color: \"gray2\",\n        style: styles.requests,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, requests.map(function (request) {\n        return React.createElement(TouchableOpacity, {\n          activeOpacity: 0.8,\n          key: \"request-\" + request.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }\n        }, _this2.renderRequest(request));\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.fontsLoaded && !this.state.device) {\n        return React.createElement(Block, {\n          center: true,\n          middle: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }\n        }, React.createElement(Image, {\n          style: {\n            width: 140,\n            height: 140\n          },\n          source: require(\"./assets/icon.png\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      if (true) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 32\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }\n        }, this.state.device));\n      }\n\n      if (this.state.device == 10) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 32\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }\n        }, \"Het phone\"));\n      }\n\n      if (this.state.device == 6.0) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 32\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }\n        }, \"Pc\"));\n      }\n\n      return React.createElement(SafeAreaView, {\n        style: styles.safe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, this.renderRequests());\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nApp.defaultProps = {\n  user: mocks.user,\n  requests: mocks.requests,\n  chart: mocks.chart\n};\nexport default App;\nvar styles = StyleSheet.create({\n  safe: {\n    flex: 1,\n    backgroundColor: theme.colors.primary\n  },\n  headerChart: {\n    paddingTop: 30,\n    paddingBottom: 30,\n    zIndex: 1\n  },\n  avatar: {\n    width: 25,\n    height: 25,\n    borderRadius: 25 / 2,\n    marginRight: 5\n  },\n  requests: {\n    marginTop: -55,\n    paddingTop: 55 + 20,\n    paddingHorizontal: 15,\n    zIndex: -1\n  }\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/blood.js"],"names":["React","Device","Font","Block","theme","mocks","Constants","App","state","fontsLoaded","device","loadAsync","require","console","log","JSON","stringify","platform","web","ua","includes","setState","brand","loadFonts","request","requests","props","styles","map","id","renderRequest","width","height","fontSize","safe","renderRequests","Component","defaultProps","user","chart","StyleSheet","create","flex","backgroundColor","colors","primary","headerChart","paddingTop","paddingBottom","zIndex","avatar","borderRadius","marginRight","marginTop","paddingHorizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport * as Device from \"expo-device\";\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Image,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n// import Chats from \"./screens/profile1\";\r\nimport * as Font from \"expo-font\";\r\nimport { Block } from \"./components\";\r\nimport * as theme from \"./theme\";\r\nimport * as mocks from \"./mocks\";\r\nimport Constants from \"expo-constants\";\r\nclass App extends React.Component {\r\n  state = {\r\n    fontsLoaded: false,\r\n    device: \"\",\r\n  };\r\n\r\n  loadFonts() {\r\n    return Font.loadAsync({\r\n      \"Montserrat-Regular\": require(\"./assets/fonts/Montserrat-Regular.ttf\"),\r\n      \"Montserrat-Bold\": require(\"./assets/fonts/Montserrat-Bold.ttf\"),\r\n      \"Montserrat-SemiBold\": require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\r\n      \"Montserrat-Medium\": require(\"./assets/fonts/Montserrat-Medium.ttf\"),\r\n      \"Montserrat-Light\": require(\"./assets/fonts/Montserrat-Light.ttf\"),\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await console.log(\r\n      \"sldnfsdf\" + JSON.stringify(Constants.platform.web.ua.includes(\"Windows\"))\r\n    );\r\n    this.setState({ device: Device.brand });\r\n    await this.loadFonts();\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  renderRequest(request) {\r\n    return <Chats />;\r\n  }\r\n\r\n  renderRequests() {\r\n    const { requests } = this.props;\r\n\r\n    return (\r\n      <Block flex={0.8} column color=\"gray2\" style={styles.requests}>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          {requests.map((request) => (\r\n            <TouchableOpacity activeOpacity={0.8} key={`request-${request.id}`}>\r\n              {this.renderRequest(request)}\r\n            </TouchableOpacity>\r\n          ))}\r\n        </ScrollView>\r\n      </Block>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.fontsLoaded && !this.state.device) {\r\n      return (\r\n        <Block center middle>\r\n          <Image\r\n            style={{ width: 140, height: 140 }}\r\n            source={require(\"./assets/icon.png\")}\r\n          />\r\n        </Block>\r\n      );\r\n    }\r\n    if (true) {\r\n      return (\r\n        <View>\r\n          <Text style={{ fontSize: 32 }}>{this.state.device}</Text>\r\n        </View>\r\n      );\r\n    }\r\n    if (this.state.device == 10) {\r\n      return (\r\n        <View>\r\n          <Text style={{ fontSize: 32 }}>Het phone</Text>\r\n        </View>\r\n      );\r\n    }\r\n    if (this.state.device == 6.0) {\r\n      return (\r\n        <View>\r\n          <Text style={{ fontSize: 32 }}>Pc</Text>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <SafeAreaView style={styles.safe}>{this.renderRequests()}</SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nApp.defaultProps = {\r\n  user: mocks.user,\r\n  requests: mocks.requests,\r\n  chart: mocks.chart,\r\n};\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  safe: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.primary,\r\n  },\r\n  headerChart: {\r\n    paddingTop: 30,\r\n    paddingBottom: 30,\r\n    zIndex: 1,\r\n  },\r\n  avatar: {\r\n    width: 25,\r\n    height: 25,\r\n    borderRadius: 25 / 2,\r\n    marginRight: 5,\r\n  },\r\n  requests: {\r\n    marginTop: -55,\r\n    paddingTop: 55 + 20,\r\n    paddingHorizontal: 15,\r\n    zIndex: -1,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}