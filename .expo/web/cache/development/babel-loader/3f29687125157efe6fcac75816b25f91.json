{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\screens\\\\Menu.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Constants } from \"react-native-web/dist/index\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Navigationbar from \"../components/NavigationBar\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { Colors, Layout } from \"../constants\";\nimport CachedImage from \"../components/CachedImage\";\n\nvar MenuScreen = function (_Component) {\n  _inherits(MenuScreen, _Component);\n\n  var _super = _createSuper(MenuScreen);\n\n  function MenuScreen() {\n    var _this;\n\n    _classCallCheck(this, MenuScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getIconName = function (key) {\n      if (key === 'Speakers') return 'ios-microphone';\n      if (key === 'Crew') return 'ios-information-circle';\n      if (key === 'Sponsors') return 'ios-beer';\n      if (key === 'Attendees') return 'ios-people';\n    };\n\n    return _this;\n  }\n\n  _createClass(MenuScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }), React.createElement(FlatList, {\n        data: [{\n          key: 'Speakers'\n        }, {\n          key: 'Crew'\n        }, {\n          key: 'Sponsors'\n        }, {\n          key: 'Attendees'\n        }],\n        ListHeaderComponent: function ListHeaderComponent() {\n          return React.createElement(View, {\n            style: {\n              flex: 1,\n              alignItems: 'center',\n              justifyContent: 'center',\n              height: 240 + Layout.notchHeight\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }\n          }, React.createElement(CachedImage, {\n            source: require(\"../assets/hero.png\"),\n            style: {\n              height: 240 + Layout.notchHeight,\n              width: Layout.window.width,\n              resizeMode: 'cover',\n              position: 'absolute'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }\n          }), React.createElement(View, {\n            style: [StyleSheet.absoluteFill, {\n              backgroundColor: 'rgba(0,0,0,0.5)'\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }\n          }), React.createElement(Image, {\n            source: require(\"../assets/logo.png\"),\n            style: [{\n              width: 220,\n              height: 100,\n              resizeMode: 'contain'\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }\n          }));\n        },\n        ItemSeparatorComponent: function ItemSeparatorComponent() {\n          return React.createElement(View, {\n            style: {\n              height: StyleSheet.hairlineWidth,\n              backgroundColor: '#cdcdcd'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }\n          });\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this2.props.navigation.navigate(item.key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }\n          }, React.createElement(View, {\n            style: {\n              flex: 1,\n              paddingVertical: 12,\n              paddingHorizontal: 16,\n              flexDirection: 'row',\n              alignItems: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }\n          }, React.createElement(Ionicons, {\n            name: \"\" + _this2.getIconName(item.key),\n            size: 24,\n            color: Colors.blue,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }\n          }), React.createElement(Text, {\n            style: {\n              fontSize: 20,\n              marginHorizontal: 16,\n              flex: 1\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }\n          }, item.key), React.createElement(Ionicons, {\n            name: \"ios-arrow-forward\",\n            size: 24,\n            color: \"#999\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }\n          })));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return MenuScreen;\n}(Component);\n\nMenuScreen.navigationOptions = {\n  title: 'Menu'\n};\nexport default MenuScreen;","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/screens/Menu.js"],"names":["React","Component","Constants","Navigationbar","Ionicons","Colors","Layout","CachedImage","MenuScreen","getIconName","key","flex","alignItems","justifyContent","height","notchHeight","require","width","window","resizeMode","position","StyleSheet","absoluteFill","backgroundColor","hairlineWidth","item","props","navigation","navigate","paddingVertical","paddingHorizontal","flexDirection","blue","fontSize","marginHorizontal","navigationOptions","title"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  View,\r\n  Image,\r\n  Text,\r\n  Button,\r\n  Platform,\r\n  Constants,\r\n  FlatList,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  StatusBar,\r\n} from 'react-native';\r\nimport Navigationbar from '../components/NavigationBar';\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport {Colors, Layout} from '../constants';\r\nimport CachedImage from '../components/CachedImage';\r\n\r\nclass MenuScreen extends Component {\r\n  static navigationOptions = {\r\n    title: 'Menu',\r\n  };\r\n\r\n  getIconName = key => {\r\n    if (key === 'Speakers') return 'ios-microphone';\r\n    if (key === 'Crew') return 'ios-information-circle';\r\n    if (key === 'Sponsors') return 'ios-beer';\r\n    if (key === 'Attendees') return 'ios-people';\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={{flex: 1}}>\r\n        <StatusBar barStyle=\"light-content\" />\r\n        <FlatList\r\n          data={[\r\n            {key: 'Speakers'},\r\n            {key: 'Crew'},\r\n            {key: 'Sponsors'},\r\n            {key: 'Attendees'},\r\n          ]}\r\n          ListHeaderComponent={() => (\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                height: 240 + Layout.notchHeight,\r\n              }}>\r\n              <CachedImage\r\n                source={require('../assets/hero.png')}\r\n                style={{\r\n                  height: 240 + Layout.notchHeight,\r\n                  width: Layout.window.width,\r\n                  resizeMode: 'cover',\r\n                  position: 'absolute',\r\n                }}\r\n              />\r\n              <View\r\n                style={[\r\n                  StyleSheet.absoluteFill,\r\n                  {\r\n                    backgroundColor: 'rgba(0,0,0,0.5)',\r\n                  },\r\n                ]}\r\n              />\r\n              <Image\r\n                source={require('../assets/logo.png')}\r\n                style={[\r\n                  {\r\n                    width: 220,\r\n                    height: 100,\r\n                    resizeMode: 'contain',\r\n                  },\r\n                ]}\r\n              />\r\n            </View>\r\n          )}\r\n          ItemSeparatorComponent={() => (\r\n            <View\r\n              style={{\r\n                height: StyleSheet.hairlineWidth,\r\n                backgroundColor: '#cdcdcd',\r\n              }}\r\n            />\r\n          )}\r\n          renderItem={({item}) => (\r\n            <TouchableOpacity\r\n              onPress={() => this.props.navigation.navigate(item.key)}>\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  paddingVertical: 12,\r\n                  paddingHorizontal: 16,\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center',\r\n                }}>\r\n                <Ionicons\r\n                  name={`${this.getIconName(item.key)}`}\r\n                  size={24}\r\n                  color={Colors.blue}\r\n                />\r\n                <Text style={{fontSize: 20, marginHorizontal: 16, flex: 1}}>\r\n                  {item.key}\r\n                </Text>\r\n                <Ionicons\r\n                  name=\"ios-arrow-forward\"\r\n                  size={24}\r\n                  color=\"#999\"\r\n                />\r\n              </View>\r\n            </TouchableOpacity>\r\n          )}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuScreen;\r\n"]},"metadata":{},"sourceType":"module"}