{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\screens\\\\QRScreens\\\\QRScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { BarCodeScanner, Permissions } from 'expo';\nimport { withNavigation, SafeAreaView } from 'react-navigation';\n\nvar QRScreen = withNavigation(_class = (_temp = function (_React$Component) {\n  _inherits(QRScreen, _React$Component);\n\n  var _super = _createSuper(QRScreen);\n\n  function QRScreen() {\n    var _this;\n\n    _classCallCheck(this, QRScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      showQRScanner: true,\n      hasCameraPermission: null\n    };\n\n    _this._requestCameraPermission = function _callee() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermission: status === 'granted'\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._onBarCodeRead = function (data) {\n      _this.setState({\n        showQRScanner: false\n      }, function () {\n        _this.props.onBarCodeScanned(data);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(QRScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._requestCameraPermission();\n\n      this.didBlurSubscription = this.props.navigation.addListener('didBlur', function (payload) {\n        console.debug('didBlur', payload);\n\n        _this2.setState({\n          showQRScanner: false\n        });\n      });\n      this.didFocusSubscription = this.props.navigation.addListener('didFocus', function (payload) {\n        console.debug('didfocus', payload);\n\n        _this2.setState({\n          showQRScanner: true\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.didBlurSubscription && this.didBlurSubscription.remove();\n      this.didFocusSubscription && this.didFocusSubscription.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }, this.state.showQRScanner && this.state.hasCameraPermission ? React.createElement(BarCodeScanner, {\n        onBarCodeScanned: this.props.loading ? null : this._onBarCodeRead,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }) : null, React.createElement(SafeAreaView, {\n        forceInset: {\n          top: 'always'\n        },\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20,\n          marginTop: Platform.OS === 'ios' ? 15 : 40,\n          textAlign: 'center',\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, this.props.title)), React.createElement(SafeAreaView, {\n        forceInset: {\n          bottom: 'always'\n        },\n        style: {\n          position: 'absolute',\n          bottom: 10,\n          paddingBottom: Platform.OS === 'ios' ? 0 : 15,\n          left: 0,\n          right: 0,\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          return _this3.props.navigation.goBack();\n        },\n        color: Platform.OS === 'ios' ? '#fff' : null,\n        title: \"Dismiss\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      })), this.props.loading ? React.createElement(View, {\n        style: [StyleSheet.absoluteFill, {\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'transparent'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, React.createElement(ActivityIndicator, {\n        color: \"#fff\",\n        size: \"large\",\n        style: {\n          backgroundColor: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      })) : null);\n    }\n  }]);\n\n  return QRScreen;\n}(React.Component), _temp)) || _class;\n\nexport { QRScreen as default };","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/screens/QRScreens/QRScreen.js"],"names":["React","BarCodeScanner","Permissions","withNavigation","SafeAreaView","QRScreen","state","showQRScanner","hasCameraPermission","_requestCameraPermission","askAsync","CAMERA","status","setState","_onBarCodeRead","data","props","onBarCodeScanned","didBlurSubscription","navigation","addListener","payload","console","debug","didFocusSubscription","remove","flex","backgroundColor","loading","top","position","left","right","fontSize","marginTop","Platform","OS","textAlign","color","title","bottom","paddingBottom","alignItems","goBack","StyleSheet","absoluteFill","justifyContent","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  ActivityIndicator,\r\n  Button,\r\n  Platform,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n} from 'react-native';\r\nimport {BarCodeScanner, Permissions} from 'expo';\r\nimport {withNavigation, SafeAreaView} from 'react-navigation';\r\n\r\n@withNavigation\r\nexport default class QRScreen extends React.Component {\r\n  state = {\r\n    showQRScanner: true,\r\n    hasCameraPermission: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._requestCameraPermission();\r\n    this.didBlurSubscription = this.props.navigation.addListener(\r\n      'didBlur',\r\n      payload => {\r\n        console.debug('didBlur', payload);\r\n        this.setState({showQRScanner: false});\r\n      }\r\n    );\r\n    this.didFocusSubscription = this.props.navigation.addListener(\r\n      'didFocus',\r\n      payload => {\r\n        console.debug('didfocus', payload);\r\n        this.setState({showQRScanner: true});\r\n      }\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.didBlurSubscription && this.didBlurSubscription.remove();\r\n    this.didFocusSubscription && this.didFocusSubscription.remove();\r\n  }\r\n\r\n  _requestCameraPermission = async () => {\r\n    const {status} = await Permissions.askAsync(Permissions.CAMERA);\r\n    this.setState({\r\n      hasCameraPermission: status === 'granted',\r\n    });\r\n  };\r\n\r\n  _onBarCodeRead = data => {\r\n    this.setState({showQRScanner: false}, () => {\r\n      this.props.onBarCodeScanned(data);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={{flex: 1, backgroundColor: 'black'}}>\r\n        {this.state.showQRScanner && this.state.hasCameraPermission ? (\r\n          <BarCodeScanner\r\n            onBarCodeScanned={this.props.loading ? null : this._onBarCodeRead}\r\n            style={{flex: 1}}\r\n          />\r\n        ) : null}\r\n\r\n        <SafeAreaView\r\n          forceInset={{top: 'always'}}\r\n          style={{position: 'absolute', top: 0, left: 0, right: 0}}>\r\n          <Text\r\n            style={{\r\n              fontSize: 20,\r\n              marginTop: Platform.OS === 'ios' ? 15 : 40,\r\n              textAlign: 'center',\r\n              color: '#fff',\r\n            }}>\r\n            {this.props.title}\r\n          </Text>\r\n        </SafeAreaView>\r\n\r\n        <SafeAreaView\r\n          forceInset={{bottom: 'always'}}\r\n          style={{\r\n            position: 'absolute',\r\n            bottom: 10,\r\n            paddingBottom: Platform.OS === 'ios' ? 0 : 15,\r\n            left: 0,\r\n            right: 0,\r\n            alignItems: 'center',\r\n          }}>\r\n          <Button\r\n            onPress={() => this.props.navigation.goBack()}\r\n            color={Platform.OS === 'ios' ? '#fff' : null}\r\n            title=\"Dismiss\"\r\n          />\r\n        </SafeAreaView>\r\n        {this.props.loading ? (\r\n          <View\r\n            style={[\r\n              StyleSheet.absoluteFill,\r\n              {\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                backgroundColor: 'transparent',\r\n              },\r\n            ]}>\r\n            <ActivityIndicator\r\n              color=\"#fff\"\r\n              size=\"large\"\r\n              style={{backgroundColor: 'transparent'}}\r\n            />\r\n          </View>\r\n        ) : null}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}