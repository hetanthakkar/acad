{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\node_modules\\\\react-native-camera\\\\src\\\\RNCamera.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nvar Rationale = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  buttonPositive: PropTypes.string,\n  buttonNegative: PropTypes.string,\n  buttonNeutral: PropTypes.string\n});\n\nvar requestPermissions = function requestPermissions(captureAudio, CameraManager, androidCameraPermissionOptions, androidRecordAudioPermissionOptions) {\n  var hasCameraPermissions, hasRecordAudioPermissions, cameraPermissionResult, audioPermissionResult;\n  return _regeneratorRuntime.async(function requestPermissions$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          hasCameraPermissions = false;\n          hasRecordAudioPermissions = false;\n\n          if (!(Platform.OS === 'ios')) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(CameraManager.checkVideoAuthorizationStatus());\n\n        case 5:\n          hasCameraPermissions = _context.sent;\n          _context.next = 19;\n          break;\n\n        case 8:\n          if (!(Platform.OS === 'android')) {\n            _context.next = 15;\n            break;\n          }\n\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.CAMERA, androidCameraPermissionOptions));\n\n        case 11:\n          cameraPermissionResult = _context.sent;\n\n          if (typeof cameraPermissionResult === 'boolean') {\n            hasCameraPermissions = cameraPermissionResult;\n          } else {\n            hasCameraPermissions = cameraPermissionResult === PermissionsAndroid.RESULTS.GRANTED;\n          }\n\n          _context.next = 19;\n          break;\n\n        case 15:\n          if (!(Platform.OS === 'windows')) {\n            _context.next = 19;\n            break;\n          }\n\n          _context.next = 18;\n          return _regeneratorRuntime.awrap(CameraManager.checkMediaCapturePermission());\n\n        case 18:\n          hasCameraPermissions = _context.sent;\n\n        case 19:\n          if (!captureAudio) {\n            _context.next = 43;\n            break;\n          }\n\n          if (!(Platform.OS === 'ios')) {\n            _context.next = 26;\n            break;\n          }\n\n          _context.next = 23;\n          return _regeneratorRuntime.awrap(CameraManager.checkRecordAudioAuthorizationStatus());\n\n        case 23:\n          hasRecordAudioPermissions = _context.sent;\n          _context.next = 43;\n          break;\n\n        case 26:\n          if (!(Platform.OS === 'android')) {\n            _context.next = 39;\n            break;\n          }\n\n          _context.next = 29;\n          return _regeneratorRuntime.awrap(CameraManager.checkIfRecordAudioPermissionsAreDefined());\n\n        case 29:\n          if (!_context.sent) {\n            _context.next = 36;\n            break;\n          }\n\n          _context.next = 32;\n          return _regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.RECORD_AUDIO, androidRecordAudioPermissionOptions));\n\n        case 32:\n          audioPermissionResult = _context.sent;\n\n          if (typeof audioPermissionResult === 'boolean') {\n            hasRecordAudioPermissions = audioPermissionResult;\n          } else {\n            hasRecordAudioPermissions = audioPermissionResult === PermissionsAndroid.RESULTS.GRANTED;\n          }\n\n          _context.next = 37;\n          break;\n\n        case 36:\n          if (__DEV__) {\n            console.warn(\"The 'captureAudio' property set on RNCamera instance but 'RECORD_AUDIO' permissions not defined in the applications 'AndroidManifest.xml'. \" + \"If you want to record audio you will have to add '<uses-permission android:name=\\\"android.permission.RECORD_AUDIO\\\"/>' to your 'AndroidManifest.xml'. \" + \"Otherwise you should set the 'captureAudio' property on the component instance to 'false'.\");\n          }\n\n        case 37:\n          _context.next = 43;\n          break;\n\n        case 39:\n          if (!(Platform.OS === 'windows')) {\n            _context.next = 43;\n            break;\n          }\n\n          _context.next = 42;\n          return _regeneratorRuntime.awrap(CameraManager.checkMediaCapturePermission());\n\n        case 42:\n          hasRecordAudioPermissions = _context.sent;\n\n        case 43:\n          return _context.abrupt(\"return\", {\n            hasCameraPermissions: hasCameraPermissions,\n            hasRecordAudioPermissions: hasRecordAudioPermissions\n          });\n\n        case 44:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar styles = StyleSheet.create({\n  authorizationContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  notAuthorizedText: {\n    textAlign: 'center',\n    fontSize: 16\n  }\n});\nvar CameraStatus = {\n  READY: 'READY',\n  PENDING_AUTHORIZATION: 'PENDING_AUTHORIZATION',\n  NOT_AUTHORIZED: 'NOT_AUTHORIZED'\n};\nvar RecordAudioPermissionStatusEnum = {\n  AUTHORIZED: 'AUTHORIZED',\n  PENDING_AUTHORIZATION: 'PENDING_AUTHORIZATION',\n  NOT_AUTHORIZED: 'NOT_AUTHORIZED'\n};\nvar CameraManager = NativeModules.RNCameraManager || NativeModules.RNCameraModule || {\n  stubbed: true,\n  Type: {\n    back: 1\n  },\n  AutoFocus: {\n    on: 1\n  },\n  FlashMode: {\n    off: 1\n  },\n  WhiteBalance: {},\n  BarCodeType: {},\n  FaceDetection: {\n    fast: 1,\n    Mode: {},\n    Landmarks: {\n      none: 0\n    },\n    Classifications: {\n      none: 0\n    }\n  },\n  GoogleVisionBarcodeDetection: {\n    BarcodeType: 0,\n    BarcodeMode: 0\n  }\n};\nvar EventThrottleMs = 500;\n\nvar mapValues = function mapValues(input, mapper) {\n  var result = {};\n  Object.entries(input).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    result[key] = mapper(value, key);\n  });\n  return result;\n};\n\nvar Camera = function (_React$Component) {\n  _inherits(Camera, _React$Component);\n\n  var _super = _createSuper(Camera);\n\n  function Camera(props) {\n    var _this;\n\n    _classCallCheck(this, Camera);\n\n    _this = _super.call(this, props);\n\n    _this.getSupportedPreviewFpsRange = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(Platform.OS === 'android')) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(CameraManager.getSupportedPreviewFpsRange(_this._cameraHandle));\n\n            case 3:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n              throw new Error('getSupportedPreviewFpsRange is not supported on iOS');\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getAvailablePictureSizes = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(CameraManager.getAvailablePictureSizes(_this.props.ratio, _this._cameraHandle));\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._onMountError = function (_ref3) {\n      var nativeEvent = _ref3.nativeEvent;\n\n      if (_this.props.onMountError) {\n        _this.props.onMountError(nativeEvent);\n      }\n    };\n\n    _this._onCameraReady = function () {\n      if (_this.props.onCameraReady) {\n        _this.props.onCameraReady();\n      }\n    };\n\n    _this._onAudioInterrupted = function () {\n      if (_this.props.onAudioInterrupted) {\n        _this.props.onAudioInterrupted();\n      }\n    };\n\n    _this._onTouch = function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n\n      if (_this.props.onTap && !nativeEvent.isDoubleTap) {\n        _this.props.onTap(nativeEvent.touchOrigin);\n      }\n\n      if (_this.props.onDoubleTap && nativeEvent.isDoubleTap) {\n        _this.props.onTap(nativeEvent.touchOrigin);\n      }\n    };\n\n    _this._onAudioConnected = function () {\n      if (_this.props.onAudioConnected) {\n        _this.props.onAudioConnected();\n      }\n    };\n\n    _this._onStatusChange = function () {\n      if (_this.props.onStatusChange) {\n        _this.props.onStatusChange({\n          cameraStatus: _this.getStatus(),\n          recordAudioPermissionStatus: _this.state.recordAudioPermissionStatus\n        });\n      }\n    };\n\n    _this._onPictureSaved = function (_ref5) {\n      var nativeEvent = _ref5.nativeEvent;\n\n      if (_this.props.onPictureSaved) {\n        _this.props.onPictureSaved(nativeEvent);\n      }\n    };\n\n    _this._onObjectDetected = function (callback) {\n      return function (_ref6) {\n        var nativeEvent = _ref6.nativeEvent;\n        var type = nativeEvent.type;\n\n        if (_this._lastEvents[type] && _this._lastEventsTimes[type] && JSON.stringify(nativeEvent) === _this._lastEvents[type] && new Date() - _this._lastEventsTimes[type] < EventThrottleMs) {\n          return;\n        }\n\n        if (callback) {\n          callback(nativeEvent);\n          _this._lastEventsTimes[type] = new Date();\n          _this._lastEvents[type] = JSON.stringify(nativeEvent);\n        }\n      };\n    };\n\n    _this._onSubjectAreaChanged = function (e) {\n      if (_this.props.onSubjectAreaChanged) {\n        _this.props.onSubjectAreaChanged(e);\n      }\n    };\n\n    _this._setReference = function (ref) {\n      if (ref) {\n        _this._cameraRef = ref;\n        _this._cameraHandle = findNodeHandle(ref);\n      } else {\n        _this._cameraRef = null;\n        _this._cameraHandle = null;\n      }\n    };\n\n    _this.getStatus = function () {\n      var _this$state = _this.state,\n          isAuthorized = _this$state.isAuthorized,\n          isAuthorizationChecked = _this$state.isAuthorizationChecked;\n\n      if (isAuthorizationChecked === false) {\n        return CameraStatus.PENDING_AUTHORIZATION;\n      }\n\n      return isAuthorized ? CameraStatus.READY : CameraStatus.NOT_AUTHORIZED;\n    };\n\n    _this.hasFaCC = function () {\n      return typeof _this.props.children === 'function';\n    };\n\n    _this.renderChildren = function () {\n      if (_this.hasFaCC()) {\n        return _this.props.children({\n          camera: _assertThisInitialized(_this),\n          status: _this.getStatus(),\n          recordAudioPermissionStatus: _this.state.recordAudioPermissionStatus\n        });\n      }\n\n      return _this.props.children;\n    };\n\n    _this._lastEvents = {};\n    _this._lastEventsTimes = {};\n    _this._isMounted = true;\n    _this.state = {\n      isAuthorized: false,\n      isAuthorizationChecked: false,\n      recordAudioPermissionStatus: RecordAudioPermissionStatusEnum.PENDING_AUTHORIZATION\n    };\n    return _this;\n  }\n\n  _createClass(Camera, [{\n    key: \"takePictureAsync\",\n    value: function takePictureAsync(options) {\n      var _options, orientation;\n\n      return _regeneratorRuntime.async(function takePictureAsync$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!options) {\n                options = {};\n              }\n\n              if (!options.quality) {\n                options.quality = 1;\n              }\n\n              if (options.orientation) {\n                if (typeof options.orientation !== 'number') {\n                  _options = options, orientation = _options.orientation;\n                  options.orientation = CameraManager.Orientation[orientation];\n\n                  if (__DEV__) {\n                    if (typeof options.orientation !== 'number') {\n                      console.warn(\"Orientation '\" + orientation + \"' is invalid.\");\n                    }\n                  }\n                }\n              }\n\n              if (options.pauseAfterCapture === undefined) {\n                options.pauseAfterCapture = false;\n              }\n\n              if (this._cameraHandle) {\n                _context4.next = 6;\n                break;\n              }\n\n              throw 'Camera handle cannot be null';\n\n            case 6:\n              _context4.next = 8;\n              return _regeneratorRuntime.awrap(CameraManager.takePicture(options, this._cameraHandle));\n\n            case 8:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getSupportedRatiosAsync\",\n    value: function getSupportedRatiosAsync() {\n      return _regeneratorRuntime.async(function getSupportedRatiosAsync$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(Platform.OS === 'android')) {\n                _context5.next = 6;\n                break;\n              }\n\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(CameraManager.getSupportedRatios(this._cameraHandle));\n\n            case 3:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 6:\n              throw new Error('Ratio is not supported on iOS');\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getCameraIdsAsync\",\n    value: function getCameraIdsAsync() {\n      return _regeneratorRuntime.async(function getCameraIdsAsync$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(Platform.OS === 'android')) {\n                _context6.next = 6;\n                break;\n              }\n\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(CameraManager.getCameraIds(this._cameraHandle));\n\n            case 3:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 6:\n              _context6.next = 8;\n              return _regeneratorRuntime.awrap(CameraManager.getCameraIds());\n\n            case 8:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"recordAsync\",\n    value: function recordAsync(options) {\n      var _options2, orientation, recordAudioPermissionStatus, captureAudio;\n\n      return _regeneratorRuntime.async(function recordAsync$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!options || typeof options !== 'object') {\n                options = {};\n              } else if (typeof options.quality === 'string') {\n                options.quality = Camera.Constants.VideoQuality[options.quality];\n              }\n\n              if (options.orientation) {\n                if (typeof options.orientation !== 'number') {\n                  _options2 = options, orientation = _options2.orientation;\n                  options.orientation = CameraManager.Orientation[orientation];\n\n                  if (__DEV__) {\n                    if (typeof options.orientation !== 'number') {\n                      console.warn(\"Orientation '\" + orientation + \"' is invalid.\");\n                    }\n                  }\n                }\n              }\n\n              if (__DEV__) {\n                if (options.videoBitrate && typeof options.videoBitrate !== 'number') {\n                  console.warn('Video Bitrate should be a positive integer');\n                }\n              }\n\n              recordAudioPermissionStatus = this.state.recordAudioPermissionStatus;\n              captureAudio = this.props.captureAudio;\n\n              if (!captureAudio || recordAudioPermissionStatus !== RecordAudioPermissionStatusEnum.AUTHORIZED) {\n                options.mute = true;\n              }\n\n              if (__DEV__) {\n                if ((!options.mute || captureAudio) && recordAudioPermissionStatus !== RecordAudioPermissionStatusEnum.AUTHORIZED) {\n                  console.warn('Recording with audio not possible. Permissions are missing.');\n                }\n              }\n\n              _context7.next = 9;\n              return _regeneratorRuntime.awrap(CameraManager.record(options, this._cameraHandle));\n\n            case 9:\n              return _context7.abrupt(\"return\", _context7.sent);\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"stopRecording\",\n    value: function stopRecording() {\n      CameraManager.stopRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"pauseRecording\",\n    value: function pauseRecording() {\n      CameraManager.pauseRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"resumeRecording\",\n    value: function resumeRecording() {\n      CameraManager.resumeRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"pausePreview\",\n    value: function pausePreview() {\n      CameraManager.pausePreview(this._cameraHandle);\n    }\n  }, {\n    key: \"isRecording\",\n    value: function isRecording() {\n      return CameraManager.isRecording(this._cameraHandle);\n    }\n  }, {\n    key: \"resumePreview\",\n    value: function resumePreview() {\n      CameraManager.resumePreview(this._cameraHandle);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"arePermissionsGranted\",\n    value: function arePermissionsGranted() {\n      var _this$props, permissionDialogTitle, permissionDialogMessage, androidCameraPermissionOptions, androidRecordAudioPermissionOptions, cameraPermissions, audioPermissions, _await$requestPermiss, hasCameraPermissions, hasRecordAudioPermissions, recordAudioPermissionStatus;\n\n      return _regeneratorRuntime.async(function arePermissionsGranted$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _this$props = this.props, permissionDialogTitle = _this$props.permissionDialogTitle, permissionDialogMessage = _this$props.permissionDialogMessage, androidCameraPermissionOptions = _this$props.androidCameraPermissionOptions, androidRecordAudioPermissionOptions = _this$props.androidRecordAudioPermissionOptions;\n              cameraPermissions = androidCameraPermissionOptions;\n              audioPermissions = androidRecordAudioPermissionOptions;\n\n              if (permissionDialogTitle || permissionDialogMessage) {\n                console.warn('permissionDialogTitle and permissionDialogMessage are deprecated. Please use androidCameraPermissionOptions instead.');\n                cameraPermissions = _objectSpread(_objectSpread({}, cameraPermissions), {}, {\n                  title: permissionDialogTitle,\n                  message: permissionDialogMessage\n                });\n                audioPermissions = _objectSpread(_objectSpread({}, audioPermissions), {}, {\n                  title: permissionDialogTitle,\n                  message: permissionDialogMessage\n                });\n              }\n\n              _context8.next = 6;\n              return _regeneratorRuntime.awrap(requestPermissions(this.props.captureAudio, CameraManager, cameraPermissions, audioPermissions));\n\n            case 6:\n              _await$requestPermiss = _context8.sent;\n              hasCameraPermissions = _await$requestPermiss.hasCameraPermissions;\n              hasRecordAudioPermissions = _await$requestPermiss.hasRecordAudioPermissions;\n              recordAudioPermissionStatus = hasRecordAudioPermissions ? RecordAudioPermissionStatusEnum.AUTHORIZED : RecordAudioPermissionStatusEnum.NOT_AUTHORIZED;\n              return _context8.abrupt(\"return\", {\n                hasCameraPermissions: hasCameraPermissions,\n                recordAudioPermissionStatus: recordAudioPermissionStatus\n              });\n\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"refreshAuthorizationStatus\",\n    value: function refreshAuthorizationStatus() {\n      var _await$this$arePermis, hasCameraPermissions, recordAudioPermissionStatus;\n\n      return _regeneratorRuntime.async(function refreshAuthorizationStatus$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return _regeneratorRuntime.awrap(this.arePermissionsGranted());\n\n            case 2:\n              _await$this$arePermis = _context9.sent;\n              hasCameraPermissions = _await$this$arePermis.hasCameraPermissions;\n              recordAudioPermissionStatus = _await$this$arePermis.recordAudioPermissionStatus;\n\n              if (!(this._isMounted === false)) {\n                _context9.next = 7;\n                break;\n              }\n\n              return _context9.abrupt(\"return\");\n\n            case 7:\n              this.setState({\n                isAuthorized: hasCameraPermissions,\n                isAuthorizationChecked: true,\n                recordAudioPermissionStatus: recordAudioPermissionStatus\n              });\n\n            case 8:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _await$this$arePermis2, hasCameraPermissions, recordAudioPermissionStatus;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return _regeneratorRuntime.awrap(this.arePermissionsGranted());\n\n            case 2:\n              _await$this$arePermis2 = _context10.sent;\n              hasCameraPermissions = _await$this$arePermis2.hasCameraPermissions;\n              recordAudioPermissionStatus = _await$this$arePermis2.recordAudioPermissionStatus;\n\n              if (!(this._isMounted === false)) {\n                _context10.next = 7;\n                break;\n              }\n\n              return _context10.abrupt(\"return\");\n\n            case 7:\n              this.setState({\n                isAuthorized: hasCameraPermissions,\n                isAuthorizationChecked: true,\n                recordAudioPermissionStatus: recordAudioPermissionStatus\n              }, this._onStatusChange);\n\n            case 8:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$_convertNativeP = this._convertNativeProps(this.props),\n          style = _this$_convertNativeP.style,\n          nativeProps = _objectWithoutProperties(_this$_convertNativeP, [\"style\"]);\n\n      if (this.state.isAuthorized || this.hasFaCC()) {\n        return React.createElement(View, {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 9\n          }\n        }, React.createElement(RNCamera, _extends({}, nativeProps, {\n          style: StyleSheet.absoluteFill,\n          ref: this._setReference,\n          onMountError: this._onMountError,\n          onCameraReady: this._onCameraReady,\n          onAudioInterrupted: this._onAudioInterrupted,\n          onAudioConnected: this._onAudioConnected,\n          onGoogleVisionBarcodesDetected: this._onObjectDetected(this.props.onGoogleVisionBarcodesDetected),\n          onBarCodeRead: this._onObjectDetected(this.props.onBarCodeRead),\n          onTouch: this._onTouch,\n          onFacesDetected: this._onObjectDetected(this.props.onFacesDetected),\n          onTextRecognized: this._onObjectDetected(this.props.onTextRecognized),\n          onPictureSaved: this._onPictureSaved,\n          onSubjectAreaChanged: this._onSubjectAreaChanged,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 11\n          }\n        })), this.renderChildren());\n      } else if (!this.state.isAuthorizationChecked) {\n        return this.props.pendingAuthorizationView;\n      } else {\n        return this.props.notAuthorizedView;\n      }\n    }\n  }, {\n    key: \"_convertNativeProps\",\n    value: function _convertNativeProps(_ref7) {\n      var children = _ref7.children,\n          props = _objectWithoutProperties(_ref7, [\"children\"]);\n\n      var newProps = mapValues(props, this._convertProp);\n\n      if (props.onBarCodeRead) {\n        newProps.barCodeScannerEnabled = true;\n      }\n\n      if (props.onGoogleVisionBarcodesDetected) {\n        newProps.googleVisionBarcodeDetectorEnabled = true;\n      }\n\n      if (props.onFacesDetected) {\n        newProps.faceDetectorEnabled = true;\n      }\n\n      if (props.onTap || props.onDoubleTap) {\n        newProps.touchDetectorEnabled = true;\n      }\n\n      if (props.onTextRecognized) {\n        newProps.textRecognizerEnabled = true;\n      }\n\n      if (Platform.OS === 'ios') {\n        delete newProps.ratio;\n      }\n\n      return newProps;\n    }\n  }, {\n    key: \"_convertProp\",\n    value: function _convertProp(value, key) {\n      if (typeof value === 'string' && Camera.ConversionTables[key]) {\n        return Camera.ConversionTables[key][value];\n      }\n\n      return value;\n    }\n  }]);\n\n  return Camera;\n}(React.Component);\n\nCamera.Constants = {\n  Type: CameraManager.Type,\n  FlashMode: CameraManager.FlashMode,\n  AutoFocus: CameraManager.AutoFocus,\n  WhiteBalance: CameraManager.WhiteBalance,\n  VideoQuality: CameraManager.VideoQuality,\n  VideoCodec: CameraManager.VideoCodec,\n  BarCodeType: CameraManager.BarCodeType,\n  GoogleVisionBarcodeDetection: CameraManager.GoogleVisionBarcodeDetection,\n  FaceDetection: CameraManager.FaceDetection,\n  CameraStatus: CameraStatus,\n  CaptureTarget: CameraManager.CaptureTarget,\n  RecordAudioPermissionStatus: RecordAudioPermissionStatusEnum,\n  VideoStabilization: CameraManager.VideoStabilization,\n  Orientation: {\n    auto: 'auto',\n    landscapeLeft: 'landscapeLeft',\n    landscapeRight: 'landscapeRight',\n    portrait: 'portrait',\n    portraitUpsideDown: 'portraitUpsideDown'\n  }\n};\nCamera.ConversionTables = {\n  type: CameraManager.Type,\n  flashMode: CameraManager.FlashMode,\n  exposure: CameraManager.Exposure,\n  autoFocus: CameraManager.AutoFocus,\n  whiteBalance: CameraManager.WhiteBalance,\n  faceDetectionMode: (CameraManager.FaceDetection || {}).Mode,\n  faceDetectionLandmarks: (CameraManager.FaceDetection || {}).Landmarks,\n  faceDetectionClassifications: (CameraManager.FaceDetection || {}).Classifications,\n  googleVisionBarcodeType: (CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeType,\n  googleVisionBarcodeMode: (CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeMode,\n  videoStabilizationMode: CameraManager.VideoStabilization || {}\n};\nCamera.propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  zoom: PropTypes.number,\n  useNativeZoom: PropTypes.bool,\n  maxZoom: PropTypes.number,\n  ratio: PropTypes.string,\n  focusDepth: PropTypes.number,\n  onMountError: PropTypes.func,\n  onCameraReady: PropTypes.func,\n  onAudioInterrupted: PropTypes.func,\n  onAudioConnected: PropTypes.func,\n  onStatusChange: PropTypes.func,\n  onBarCodeRead: PropTypes.func,\n  onPictureTaken: PropTypes.func,\n  onPictureSaved: PropTypes.func,\n  onRecordingStart: PropTypes.func,\n  onRecordingEnd: PropTypes.func,\n  onTap: PropTypes.func,\n  onDoubleTap: PropTypes.func,\n  onGoogleVisionBarcodesDetected: PropTypes.func,\n  onFacesDetected: PropTypes.func,\n  onTextRecognized: PropTypes.func,\n  onSubjectAreaChanged: PropTypes.func,\n  trackingEnabled: PropTypes.bool,\n  faceDetectionMode: PropTypes.number,\n  faceDetectionLandmarks: PropTypes.number,\n  faceDetectionClassifications: PropTypes.number,\n  barCodeTypes: PropTypes.arrayOf(PropTypes.string),\n  googleVisionBarcodeType: PropTypes.number,\n  googleVisionBarcodeMode: PropTypes.number,\n  type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  cameraId: PropTypes.string,\n  flashMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  exposure: PropTypes.number,\n  whiteBalance: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.shape({\n    temperature: PropTypes.number,\n    tint: PropTypes.number,\n    redGainOffset: PropTypes.number,\n    greenGainOffset: PropTypes.number,\n    blueGainOffset: PropTypes.number\n  })]),\n  autoFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  autoFocusPointOfInterest: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number\n  }),\n  permissionDialogTitle: PropTypes.string,\n  permissionDialogMessage: PropTypes.string,\n  androidCameraPermissionOptions: Rationale,\n  androidRecordAudioPermissionOptions: Rationale,\n  notAuthorizedView: PropTypes.element,\n  pendingAuthorizationView: PropTypes.element,\n  captureAudio: PropTypes.bool,\n  keepAudioSession: PropTypes.bool,\n  useCamera2Api: PropTypes.bool,\n  playSoundOnCapture: PropTypes.bool,\n  videoStabilizationMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  pictureSize: PropTypes.string,\n  mirrorVideo: PropTypes.bool,\n  rectOfInterest: PropTypes.any,\n  defaultVideoQuality: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n});\nCamera.defaultProps = {\n  zoom: 0,\n  useNativeZoom: false,\n  maxZoom: 0,\n  ratio: '4:3',\n  focusDepth: 0,\n  type: CameraManager.Type.back,\n  cameraId: null,\n  autoFocus: CameraManager.AutoFocus.on,\n  flashMode: CameraManager.FlashMode.off,\n  exposure: -1,\n  whiteBalance: CameraManager.WhiteBalance.auto,\n  faceDetectionMode: (CameraManager.FaceDetection || {}).fast,\n  barCodeTypes: Object.values(CameraManager.BarCodeType),\n  googleVisionBarcodeType: ((CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeType || {}).None,\n  googleVisionBarcodeMode: ((CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeMode || {}).NORMAL,\n  faceDetectionLandmarks: ((CameraManager.FaceDetection || {}).Landmarks || {}).none,\n  faceDetectionClassifications: ((CameraManager.FaceDetection || {}).Classifications || {}).none,\n  permissionDialogTitle: '',\n  permissionDialogMessage: '',\n  androidCameraPermissionOptions: null,\n  androidRecordAudioPermissionOptions: null,\n  notAuthorizedView: React.createElement(View, {\n    style: styles.authorizationContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.notAuthorizedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 9\n    }\n  }, \"Camera not authorized\")),\n  pendingAuthorizationView: React.createElement(View, {\n    style: styles.authorizationContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 9\n    }\n  })),\n  captureAudio: true,\n  keepAudioSession: false,\n  useCamera2Api: false,\n  playSoundOnCapture: false,\n  pictureSize: 'None',\n  videoStabilizationMode: 0,\n  mirrorVideo: false\n};\nexport { Camera as default };\nexport var Constants = Camera.Constants;\nvar RNCamera = requireNativeComponent('RNCamera', Camera, {\n  nativeOnly: {\n    accessibilityComponentType: true,\n    accessibilityLabel: true,\n    accessibilityLiveRegion: true,\n    barCodeScannerEnabled: true,\n    touchDetectorEnabled: true,\n    googleVisionBarcodeDetectorEnabled: true,\n    faceDetectorEnabled: true,\n    textRecognizerEnabled: true,\n    importantForAccessibility: true,\n    onBarCodeRead: true,\n    onGoogleVisionBarcodesDetected: true,\n    onCameraReady: true,\n    onAudioInterrupted: true,\n    onAudioConnected: true,\n    onPictureSaved: true,\n    onFaceDetected: true,\n    onTouch: true,\n    onLayout: true,\n    onMountError: true,\n    onSubjectAreaChanged: true,\n    renderToHardwareTextureAndroid: true,\n    testID: true\n  }\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/node_modules/react-native-camera/src/RNCamera.js"],"names":["React","PropTypes","requireNativeComponent","Rationale","shape","title","string","isRequired","message","buttonPositive","buttonNegative","buttonNeutral","requestPermissions","captureAudio","CameraManager","androidCameraPermissionOptions","androidRecordAudioPermissionOptions","hasCameraPermissions","hasRecordAudioPermissions","Platform","OS","checkVideoAuthorizationStatus","PermissionsAndroid","request","PERMISSIONS","CAMERA","cameraPermissionResult","RESULTS","GRANTED","checkMediaCapturePermission","checkRecordAudioAuthorizationStatus","checkIfRecordAudioPermissionsAreDefined","RECORD_AUDIO","audioPermissionResult","__DEV__","console","warn","styles","StyleSheet","create","authorizationContainer","flex","alignItems","justifyContent","notAuthorizedText","textAlign","fontSize","CameraStatus","READY","PENDING_AUTHORIZATION","NOT_AUTHORIZED","RecordAudioPermissionStatusEnum","AUTHORIZED","NativeModules","RNCameraManager","RNCameraModule","stubbed","Type","back","AutoFocus","on","FlashMode","off","WhiteBalance","BarCodeType","FaceDetection","fast","Mode","Landmarks","none","Classifications","GoogleVisionBarcodeDetection","BarcodeType","BarcodeMode","EventThrottleMs","mapValues","input","mapper","result","Object","entries","map","key","value","Camera","props","getSupportedPreviewFpsRange","_cameraHandle","Error","getAvailablePictureSizes","ratio","_onMountError","nativeEvent","onMountError","_onCameraReady","onCameraReady","_onAudioInterrupted","onAudioInterrupted","_onTouch","onTap","isDoubleTap","touchOrigin","onDoubleTap","_onAudioConnected","onAudioConnected","_onStatusChange","onStatusChange","cameraStatus","getStatus","recordAudioPermissionStatus","state","_onPictureSaved","onPictureSaved","_onObjectDetected","callback","type","_lastEvents","_lastEventsTimes","JSON","stringify","Date","_onSubjectAreaChanged","e","onSubjectAreaChanged","_setReference","ref","_cameraRef","findNodeHandle","isAuthorized","isAuthorizationChecked","hasFaCC","children","renderChildren","camera","status","_isMounted","options","quality","orientation","Orientation","pauseAfterCapture","undefined","takePicture","getSupportedRatios","getCameraIds","Constants","VideoQuality","videoBitrate","mute","record","stopRecording","pauseRecording","resumeRecording","pausePreview","isRecording","resumePreview","permissionDialogTitle","permissionDialogMessage","cameraPermissions","audioPermissions","arePermissionsGranted","setState","_convertNativeProps","style","nativeProps","absoluteFill","onGoogleVisionBarcodesDetected","onBarCodeRead","onFacesDetected","onTextRecognized","pendingAuthorizationView","notAuthorizedView","newProps","_convertProp","barCodeScannerEnabled","googleVisionBarcodeDetectorEnabled","faceDetectorEnabled","touchDetectorEnabled","textRecognizerEnabled","ConversionTables","Component","VideoCodec","CaptureTarget","RecordAudioPermissionStatus","VideoStabilization","auto","landscapeLeft","landscapeRight","portrait","portraitUpsideDown","flashMode","exposure","Exposure","autoFocus","whiteBalance","faceDetectionMode","faceDetectionLandmarks","faceDetectionClassifications","googleVisionBarcodeType","googleVisionBarcodeMode","videoStabilizationMode","propTypes","ViewPropTypes","zoom","number","useNativeZoom","bool","maxZoom","focusDepth","func","onPictureTaken","onRecordingStart","onRecordingEnd","trackingEnabled","barCodeTypes","arrayOf","oneOfType","cameraId","temperature","tint","redGainOffset","greenGainOffset","blueGainOffset","autoFocusPointOfInterest","x","y","element","keepAudioSession","useCamera2Api","playSoundOnCapture","pictureSize","mirrorVideo","rectOfInterest","any","defaultVideoQuality","defaultProps","values","None","NORMAL","RNCamera","nativeOnly","accessibilityComponentType","accessibilityLabel","accessibilityLiveRegion","importantForAccessibility","onFaceDetected","onTouch","onLayout","renderToHardwareTextureAndroid","testID"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  findNodeHandle,\n  Platform,\n  NativeModules,\n  ViewPropTypes,\n  requireNativeComponent,\n  View,\n  ActivityIndicator,\n  Text,\n  StyleSheet,\n  PermissionsAndroid,\n} from 'react-native';\n\nimport type { FaceFeature } from './FaceDetector';\n\nconst Rationale = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  buttonPositive: PropTypes.string,\n  buttonNegative: PropTypes.string,\n  buttonNeutral: PropTypes.string,\n});\n\nconst requestPermissions = async (\n  captureAudio: boolean,\n  CameraManager: any,\n  androidCameraPermissionOptions: Rationale | null,\n  androidRecordAudioPermissionOptions: Rationale | null,\n): Promise<{ hasCameraPermissions: boolean, hasRecordAudioPermissions: boolean }> => {\n  let hasCameraPermissions = false;\n  let hasRecordAudioPermissions = false;\n\n  if (Platform.OS === 'ios') {\n    hasCameraPermissions = await CameraManager.checkVideoAuthorizationStatus();\n  } else if (Platform.OS === 'android') {\n    const cameraPermissionResult = await PermissionsAndroid.request(\n      PermissionsAndroid.PERMISSIONS.CAMERA,\n      androidCameraPermissionOptions,\n    );\n    if (typeof cameraPermissionResult === 'boolean') {\n      hasCameraPermissions = cameraPermissionResult;\n    } else {\n      hasCameraPermissions = cameraPermissionResult === PermissionsAndroid.RESULTS.GRANTED;\n    }\n  } else if (Platform.OS === 'windows') {\n    hasCameraPermissions = await CameraManager.checkMediaCapturePermission();\n  }\n\n  if (captureAudio) {\n    if (Platform.OS === 'ios') {\n      hasRecordAudioPermissions = await CameraManager.checkRecordAudioAuthorizationStatus();\n    } else if (Platform.OS === 'android') {\n      if (await CameraManager.checkIfRecordAudioPermissionsAreDefined()) {\n        const audioPermissionResult = await PermissionsAndroid.request(\n          PermissionsAndroid.PERMISSIONS.RECORD_AUDIO,\n          androidRecordAudioPermissionOptions,\n        );\n        if (typeof audioPermissionResult === 'boolean') {\n          hasRecordAudioPermissions = audioPermissionResult;\n        } else {\n          hasRecordAudioPermissions = audioPermissionResult === PermissionsAndroid.RESULTS.GRANTED;\n        }\n      } else if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `The 'captureAudio' property set on RNCamera instance but 'RECORD_AUDIO' permissions not defined in the applications 'AndroidManifest.xml'. ` +\n            `If you want to record audio you will have to add '<uses-permission android:name=\"android.permission.RECORD_AUDIO\"/>' to your 'AndroidManifest.xml'. ` +\n            `Otherwise you should set the 'captureAudio' property on the component instance to 'false'.`,\n        );\n      }\n    } else if (Platform.OS === 'windows') {\n      hasRecordAudioPermissions = await CameraManager.checkMediaCapturePermission();\n    }\n  }\n\n  return {\n    hasCameraPermissions,\n    hasRecordAudioPermissions,\n  };\n};\n\nconst styles = StyleSheet.create({\n  authorizationContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  notAuthorizedText: {\n    textAlign: 'center',\n    fontSize: 16,\n  },\n});\n\ntype Orientation = 'auto' | 'landscapeLeft' | 'landscapeRight' | 'portrait' | 'portraitUpsideDown';\ntype OrientationNumber = 1 | 2 | 3 | 4;\n\ntype PictureOptions = {\n  quality?: number,\n  orientation?: Orientation | OrientationNumber,\n  base64?: boolean,\n  mirrorImage?: boolean,\n  exif?: boolean,\n  writeExif?: boolean | { [name: string]: any },\n  width?: number,\n  fixOrientation?: boolean,\n  forceUpOrientation?: boolean,\n  pauseAfterCapture?: boolean,\n};\n\ntype TrackedFaceFeature = FaceFeature & {\n  faceID?: number,\n};\n\ntype TrackedTextFeature = {\n  type: string,\n  bounds: {\n    size: {\n      width: number,\n      height: number,\n    },\n    origin: {\n      x: number,\n      y: number,\n    },\n  },\n  value: string,\n  components: Array<TrackedTextFeature>,\n};\n\ntype TrackedBarcodeFeature = {\n  bounds: {\n    size: {\n      width: number,\n      height: number,\n    },\n    origin: {\n      x: number,\n      y: number,\n    },\n  },\n  data: string,\n  dataRaw: string,\n  type: BarcodeType,\n  format?: string,\n  addresses?: {\n    addressesType?: 'UNKNOWN' | 'Work' | 'Home',\n    addressLines?: string[],\n  }[],\n  emails?: Email[],\n  phones?: Phone[],\n  urls: ?(string[]),\n  name?: {\n    firstName?: string,\n    lastName?: string,\n    middleName?: string,\n    prefix?: string,\n    pronounciation?: string,\n    suffix?: string,\n    formattedName?: string,\n  },\n  phone?: Phone,\n  organization?: string,\n  latitude?: number,\n  longitude?: number,\n  ssid?: string,\n  password?: string,\n  encryptionType?: string,\n  title?: string,\n  url?: string,\n  firstName?: string,\n  middleName?: string,\n  lastName?: string,\n  gender?: string,\n  addressCity?: string,\n  addressState?: string,\n  addressStreet?: string,\n  addressZip?: string,\n  birthDate?: string,\n  documentType?: string,\n  licenseNumber?: string,\n  expiryDate?: string,\n  issuingDate?: string,\n  issuingCountry?: string,\n  eventDescription?: string,\n  location?: string,\n  organizer?: string,\n  status?: string,\n  summary?: string,\n  start?: string,\n  end?: string,\n  email?: Email,\n  phoneNumber?: string,\n  message?: string,\n};\n\ntype BarcodeType =\n  | 'EMAIL'\n  | 'PHONE'\n  | 'CALENDAR_EVENT'\n  | 'DRIVER_LICENSE'\n  | 'GEO'\n  | 'SMS'\n  | 'CONTACT_INFO'\n  | 'WIFI'\n  | 'TEXT'\n  | 'ISBN'\n  | 'PRODUCT'\n  | 'URL';\n\ntype Email = {\n  address?: string,\n  body?: string,\n  subject?: string,\n  emailType?: 'UNKNOWN' | 'Work' | 'Home',\n};\n\ntype Phone = {\n  number?: string,\n  phoneType?: 'UNKNOWN' | 'Work' | 'Home' | 'Fax' | 'Mobile',\n};\n\ntype RecordingOptions = {\n  maxDuration?: number,\n  maxFileSize?: number,\n  orientation?: Orientation,\n  quality?: number | string,\n  fps?: number,\n  codec?: string,\n  mute?: boolean,\n  path?: string,\n  videoBitrate?: number,\n};\n\ntype EventCallbackArgumentsType = {\n  nativeEvent: Object,\n};\n\ntype Rect = {\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n};\n\ntype PropsType = typeof View.props & {\n  zoom?: number,\n  useNativeZoom?: boolean,\n  maxZoom?: number,\n  ratio?: string,\n  focusDepth?: number,\n  type?: number | string,\n  onCameraReady?: Function,\n  onAudioInterrupted?: Function,\n  onAudioConnected?: Function,\n  onStatusChange?: Function,\n  onBarCodeRead?: Function,\n  onPictureTaken?: Function,\n  onPictureSaved?: Function,\n  onRecordingStart?: Function,\n  onRecordingEnd?: Function,\n  onTap?: Function,\n  onDoubleTap?: Function,\n  onGoogleVisionBarcodesDetected?: ({ barcodes: Array<TrackedBarcodeFeature> }) => void,\n  onSubjectAreaChanged?: ({ nativeEvent: { prevPoint: {| x: number, y: number |} } }) => void,\n  faceDetectionMode?: number,\n  trackingEnabled?: boolean,\n  flashMode?: number | string,\n  exposure?: number,\n  barCodeTypes?: Array<string>,\n  googleVisionBarcodeType?: number,\n  googleVisionBarcodeMode?: number,\n  whiteBalance?: number | string | {temperature: number, tint: number, redGainOffset?: number, greenGainOffset?: number, blueGainOffset?: number },\n  faceDetectionLandmarks?: number,\n  autoFocus?: string | boolean | number,\n  autoFocusPointOfInterest?: { x: number, y: number },\n  faceDetectionClassifications?: number,\n  onFacesDetected?: ({ faces: Array<TrackedFaceFeature> }) => void,\n  onTextRecognized?: ({ textBlocks: Array<TrackedTextFeature> }) => void,\n  captureAudio?: boolean,\n  keepAudioSession?: boolean,\n  useCamera2Api?: boolean,\n  playSoundOnCapture?: boolean,\n  videoStabilizationMode?: number | string,\n  pictureSize?: string,\n  rectOfInterest: Rect,\n};\n\ntype StateType = {\n  isAuthorized: boolean,\n  isAuthorizationChecked: boolean,\n  recordAudioPermissionStatus: RecordAudioPermissionStatus,\n};\n\nexport type Status = 'READY' | 'PENDING_AUTHORIZATION' | 'NOT_AUTHORIZED';\n\nconst CameraStatus: { [key: Status]: Status } = {\n  READY: 'READY',\n  PENDING_AUTHORIZATION: 'PENDING_AUTHORIZATION',\n  NOT_AUTHORIZED: 'NOT_AUTHORIZED',\n};\n\nexport type RecordAudioPermissionStatus = 'AUTHORIZED' | 'NOT_AUTHORIZED' | 'PENDING_AUTHORIZATION';\n\nconst RecordAudioPermissionStatusEnum: {\n  [key: RecordAudioPermissionStatus]: RecordAudioPermissionStatus,\n} = {\n  AUTHORIZED: 'AUTHORIZED',\n  PENDING_AUTHORIZATION: 'PENDING_AUTHORIZATION',\n  NOT_AUTHORIZED: 'NOT_AUTHORIZED',\n};\n\nconst CameraManager: Object = NativeModules.RNCameraManager ||\n  NativeModules.RNCameraModule || {\n    stubbed: true,\n    Type: {\n      back: 1,\n    },\n    AutoFocus: {\n      on: 1,\n    },\n    FlashMode: {\n      off: 1,\n    },\n    WhiteBalance: {},\n    BarCodeType: {},\n    FaceDetection: {\n      fast: 1,\n      Mode: {},\n      Landmarks: {\n        none: 0,\n      },\n      Classifications: {\n        none: 0,\n      },\n    },\n    GoogleVisionBarcodeDetection: {\n      BarcodeType: 0,\n      BarcodeMode: 0,\n    },\n  };\n\nconst EventThrottleMs = 500;\n\nconst mapValues = (input, mapper) => {\n  const result = {};\n  Object.entries(input).map(([key, value]) => {\n    result[key] = mapper(value, key);\n  });\n  return result;\n};\n\nexport default class Camera extends React.Component<PropsType, StateType> {\n  static Constants = {\n    Type: CameraManager.Type,\n    FlashMode: CameraManager.FlashMode,\n    AutoFocus: CameraManager.AutoFocus,\n    WhiteBalance: CameraManager.WhiteBalance,\n    VideoQuality: CameraManager.VideoQuality,\n    VideoCodec: CameraManager.VideoCodec,\n    BarCodeType: CameraManager.BarCodeType,\n    GoogleVisionBarcodeDetection: CameraManager.GoogleVisionBarcodeDetection,\n    FaceDetection: CameraManager.FaceDetection,\n    CameraStatus,\n    CaptureTarget: CameraManager.CaptureTarget,\n    RecordAudioPermissionStatus: RecordAudioPermissionStatusEnum,\n    VideoStabilization: CameraManager.VideoStabilization,\n    Orientation: {\n      auto: 'auto',\n      landscapeLeft: 'landscapeLeft',\n      landscapeRight: 'landscapeRight',\n      portrait: 'portrait',\n      portraitUpsideDown: 'portraitUpsideDown',\n    },\n  };\n\n  // Values under keys from this object will be transformed to native options\n  static ConversionTables = {\n    type: CameraManager.Type,\n    flashMode: CameraManager.FlashMode,\n    exposure: CameraManager.Exposure,\n    autoFocus: CameraManager.AutoFocus,\n    whiteBalance: CameraManager.WhiteBalance,\n    faceDetectionMode: (CameraManager.FaceDetection || {}).Mode,\n    faceDetectionLandmarks: (CameraManager.FaceDetection || {}).Landmarks,\n    faceDetectionClassifications: (CameraManager.FaceDetection || {}).Classifications,\n    googleVisionBarcodeType: (CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeType,\n    googleVisionBarcodeMode: (CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeMode,\n    videoStabilizationMode: CameraManager.VideoStabilization || {},\n  };\n\n  static propTypes = {\n    ...ViewPropTypes,\n    zoom: PropTypes.number,\n    useNativeZoom: PropTypes.bool,\n    maxZoom: PropTypes.number,\n    ratio: PropTypes.string,\n    focusDepth: PropTypes.number,\n    onMountError: PropTypes.func,\n    onCameraReady: PropTypes.func,\n    onAudioInterrupted: PropTypes.func,\n    onAudioConnected: PropTypes.func,\n    onStatusChange: PropTypes.func,\n    onBarCodeRead: PropTypes.func,\n    onPictureTaken: PropTypes.func,\n    onPictureSaved: PropTypes.func,\n    onRecordingStart: PropTypes.func,\n    onRecordingEnd: PropTypes.func,\n    onTap: PropTypes.func,\n    onDoubleTap: PropTypes.func,\n    onGoogleVisionBarcodesDetected: PropTypes.func,\n    onFacesDetected: PropTypes.func,\n    onTextRecognized: PropTypes.func,\n    onSubjectAreaChanged: PropTypes.func,\n    trackingEnabled: PropTypes.bool,\n    faceDetectionMode: PropTypes.number,\n    faceDetectionLandmarks: PropTypes.number,\n    faceDetectionClassifications: PropTypes.number,\n    barCodeTypes: PropTypes.arrayOf(PropTypes.string),\n    googleVisionBarcodeType: PropTypes.number,\n    googleVisionBarcodeMode: PropTypes.number,\n    type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    cameraId: PropTypes.string,\n    flashMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    exposure: PropTypes.number,\n    whiteBalance: PropTypes.oneOfType([PropTypes.string, PropTypes.number,\n      PropTypes.shape({ temperature: PropTypes.number, tint: PropTypes.number,\n        redGainOffset: PropTypes.number,\n        greenGainOffset: PropTypes.number,\n        blueGainOffset: PropTypes.number })]),\n    autoFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n    autoFocusPointOfInterest: PropTypes.shape({ x: PropTypes.number, y: PropTypes.number }),\n    permissionDialogTitle: PropTypes.string,\n    permissionDialogMessage: PropTypes.string,\n    androidCameraPermissionOptions: Rationale,\n    androidRecordAudioPermissionOptions: Rationale,\n    notAuthorizedView: PropTypes.element,\n    pendingAuthorizationView: PropTypes.element,\n    captureAudio: PropTypes.bool,\n    keepAudioSession: PropTypes.bool,\n    useCamera2Api: PropTypes.bool,\n    playSoundOnCapture: PropTypes.bool,\n    videoStabilizationMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    pictureSize: PropTypes.string,\n    mirrorVideo: PropTypes.bool,\n    rectOfInterest: PropTypes.any,\n    defaultVideoQuality: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  };\n\n  static defaultProps: Object = {\n    zoom: 0,\n    useNativeZoom: false,\n    maxZoom: 0,\n    ratio: '4:3',\n    focusDepth: 0,\n    type: CameraManager.Type.back,\n    cameraId: null,\n    autoFocus: CameraManager.AutoFocus.on,\n    flashMode: CameraManager.FlashMode.off,\n    exposure: -1,\n    whiteBalance: CameraManager.WhiteBalance.auto,\n    faceDetectionMode: (CameraManager.FaceDetection || {}).fast,\n    barCodeTypes: Object.values(CameraManager.BarCodeType),\n    googleVisionBarcodeType: ((CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeType || {})\n      .None,\n    googleVisionBarcodeMode: ((CameraManager.GoogleVisionBarcodeDetection || {}).BarcodeMode || {})\n      .NORMAL,\n    faceDetectionLandmarks: ((CameraManager.FaceDetection || {}).Landmarks || {}).none,\n    faceDetectionClassifications: ((CameraManager.FaceDetection || {}).Classifications || {}).none,\n    permissionDialogTitle: '',\n    permissionDialogMessage: '',\n    androidCameraPermissionOptions: null,\n    androidRecordAudioPermissionOptions: null,\n    notAuthorizedView: (\n      <View style={styles.authorizationContainer}>\n        <Text style={styles.notAuthorizedText}>Camera not authorized</Text>\n      </View>\n    ),\n    pendingAuthorizationView: (\n      <View style={styles.authorizationContainer}>\n        <ActivityIndicator size=\"small\" />\n      </View>\n    ),\n    captureAudio: true,\n    keepAudioSession: false,\n    useCamera2Api: false,\n    playSoundOnCapture: false,\n    pictureSize: 'None',\n    videoStabilizationMode: 0,\n    mirrorVideo: false,\n  };\n\n  _cameraRef: ?Object;\n  _cameraHandle: ?number;\n  _lastEvents: { [string]: string };\n  _lastEventsTimes: { [string]: Date };\n  _isMounted: boolean;\n\n  constructor(props: PropsType) {\n    super(props);\n    this._lastEvents = {};\n    this._lastEventsTimes = {};\n    this._isMounted = true;\n    this.state = {\n      isAuthorized: false,\n      isAuthorizationChecked: false,\n      recordAudioPermissionStatus: RecordAudioPermissionStatusEnum.PENDING_AUTHORIZATION,\n    };\n  }\n\n  async takePictureAsync(options?: PictureOptions) {\n    if (!options) {\n      options = {};\n    }\n    if (!options.quality) {\n      options.quality = 1;\n    }\n\n    if (options.orientation) {\n      if (typeof options.orientation !== 'number') {\n        const { orientation } = options;\n        options.orientation = CameraManager.Orientation[orientation];\n        if (__DEV__) {\n          if (typeof options.orientation !== 'number') {\n            // eslint-disable-next-line no-console\n            console.warn(`Orientation '${orientation}' is invalid.`);\n          }\n        }\n      }\n    }\n\n    if (options.pauseAfterCapture === undefined) {\n      options.pauseAfterCapture = false;\n    }\n\n    if (!this._cameraHandle) {\n      throw 'Camera handle cannot be null';\n    }\n\n    return await CameraManager.takePicture(options, this._cameraHandle);\n  }\n\n  async getSupportedRatiosAsync() {\n    if (Platform.OS === 'android') {\n      return await CameraManager.getSupportedRatios(this._cameraHandle);\n    } else {\n      throw new Error('Ratio is not supported on iOS');\n    }\n  }\n\n  async getCameraIdsAsync() {\n    if (Platform.OS === 'android') {\n      return await CameraManager.getCameraIds(this._cameraHandle);\n    } else {\n      return await CameraManager.getCameraIds(); // iOS does not need a camera instance\n    }\n  }\n\n  getSupportedPreviewFpsRange = async (): Promise<[]> => {\n    if (Platform.OS === 'android') {\n      return await CameraManager.getSupportedPreviewFpsRange(this._cameraHandle);\n    } else {\n      throw new Error('getSupportedPreviewFpsRange is not supported on iOS');\n    }\n  };\n\n  getAvailablePictureSizes = async (): string[] => {\n    //$FlowFixMe\n    return await CameraManager.getAvailablePictureSizes(this.props.ratio, this._cameraHandle);\n  };\n\n  async recordAsync(options?: RecordingOptions) {\n    if (!options || typeof options !== 'object') {\n      options = {};\n    } else if (typeof options.quality === 'string') {\n      options.quality = Camera.Constants.VideoQuality[options.quality];\n    }\n    if (options.orientation) {\n      if (typeof options.orientation !== 'number') {\n        const { orientation } = options;\n        options.orientation = CameraManager.Orientation[orientation];\n        if (__DEV__) {\n          if (typeof options.orientation !== 'number') {\n            // eslint-disable-next-line no-console\n            console.warn(`Orientation '${orientation}' is invalid.`);\n          }\n        }\n      }\n    }\n\n    if (__DEV__) {\n      if (options.videoBitrate && typeof options.videoBitrate !== 'number') {\n        // eslint-disable-next-line no-console\n        console.warn('Video Bitrate should be a positive integer');\n      }\n    }\n\n    const { recordAudioPermissionStatus } = this.state;\n    const { captureAudio } = this.props;\n\n    if (\n      !captureAudio ||\n      recordAudioPermissionStatus !== RecordAudioPermissionStatusEnum.AUTHORIZED\n    ) {\n      options.mute = true;\n    }\n\n    if (__DEV__) {\n      if (\n        (!options.mute || captureAudio) &&\n        recordAudioPermissionStatus !== RecordAudioPermissionStatusEnum.AUTHORIZED\n      ) {\n        // eslint-disable-next-line no-console\n        console.warn('Recording with audio not possible. Permissions are missing.');\n      }\n    }\n\n    return await CameraManager.record(options, this._cameraHandle);\n  }\n\n  stopRecording() {\n    CameraManager.stopRecording(this._cameraHandle);\n  }\n\n  pauseRecording() {\n    CameraManager.pauseRecording(this._cameraHandle);\n  }\n\n  resumeRecording() {\n    CameraManager.resumeRecording(this._cameraHandle);\n  }\n\n  pausePreview() {\n    CameraManager.pausePreview(this._cameraHandle);\n  }\n\n  isRecording() {\n    return CameraManager.isRecording(this._cameraHandle);\n  }\n\n  resumePreview() {\n    CameraManager.resumePreview(this._cameraHandle);\n  }\n\n  _onMountError = ({ nativeEvent }: EventCallbackArgumentsType) => {\n    if (this.props.onMountError) {\n      this.props.onMountError(nativeEvent);\n    }\n  };\n\n  _onCameraReady = () => {\n    if (this.props.onCameraReady) {\n      this.props.onCameraReady();\n    }\n  };\n\n  _onAudioInterrupted = () => {\n    if (this.props.onAudioInterrupted) {\n      this.props.onAudioInterrupted();\n    }\n  };\n  _onTouch = ({ nativeEvent }: EventCallbackArgumentsType) => {\n    if (this.props.onTap && !nativeEvent.isDoubleTap) {\n      this.props.onTap(nativeEvent.touchOrigin);\n    }\n    if (this.props.onDoubleTap && nativeEvent.isDoubleTap) {\n      this.props.onTap(nativeEvent.touchOrigin);\n    }\n  };\n  _onAudioConnected = () => {\n    if (this.props.onAudioConnected) {\n      this.props.onAudioConnected();\n    }\n  };\n\n  _onStatusChange = () => {\n    if (this.props.onStatusChange) {\n      this.props.onStatusChange({\n        cameraStatus: this.getStatus(),\n        recordAudioPermissionStatus: this.state.recordAudioPermissionStatus,\n      });\n    }\n  };\n\n  _onPictureSaved = ({ nativeEvent }: EventCallbackArgumentsType) => {\n    if (this.props.onPictureSaved) {\n      this.props.onPictureSaved(nativeEvent);\n    }\n  };\n\n  _onObjectDetected = (callback: ?Function) => ({ nativeEvent }: EventCallbackArgumentsType) => {\n    const { type } = nativeEvent;\n    if (\n      this._lastEvents[type] &&\n      this._lastEventsTimes[type] &&\n      JSON.stringify(nativeEvent) === this._lastEvents[type] &&\n      new Date() - this._lastEventsTimes[type] < EventThrottleMs\n    ) {\n      return;\n    }\n\n    if (callback) {\n      callback(nativeEvent);\n      this._lastEventsTimes[type] = new Date();\n      this._lastEvents[type] = JSON.stringify(nativeEvent);\n    }\n  };\n\n  _onSubjectAreaChanged = e => {\n    if (this.props.onSubjectAreaChanged) {\n      this.props.onSubjectAreaChanged(e);\n    }\n  };\n\n  _setReference = (ref: ?Object) => {\n    if (ref) {\n      this._cameraRef = ref;\n      this._cameraHandle = findNodeHandle(ref);\n    } else {\n      this._cameraRef = null;\n      this._cameraHandle = null;\n    }\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  async arePermissionsGranted() {\n    const {\n      permissionDialogTitle,\n      permissionDialogMessage,\n      androidCameraPermissionOptions,\n      androidRecordAudioPermissionOptions,\n    } = this.props;\n\n    let cameraPermissions = androidCameraPermissionOptions;\n    let audioPermissions = androidRecordAudioPermissionOptions;\n    if (permissionDialogTitle || permissionDialogMessage) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'permissionDialogTitle and permissionDialogMessage are deprecated. Please use androidCameraPermissionOptions instead.',\n      );\n      cameraPermissions = {\n        ...cameraPermissions,\n        title: permissionDialogTitle,\n        message: permissionDialogMessage,\n      };\n      audioPermissions = {\n        ...audioPermissions,\n        title: permissionDialogTitle,\n        message: permissionDialogMessage,\n      };\n    }\n\n    const { hasCameraPermissions, hasRecordAudioPermissions } = await requestPermissions(\n      this.props.captureAudio,\n      CameraManager,\n      cameraPermissions,\n      audioPermissions,\n    );\n\n    const recordAudioPermissionStatus = hasRecordAudioPermissions\n      ? RecordAudioPermissionStatusEnum.AUTHORIZED\n      : RecordAudioPermissionStatusEnum.NOT_AUTHORIZED;\n    return { hasCameraPermissions, recordAudioPermissionStatus };\n  }\n\n  async refreshAuthorizationStatus() {\n    const {\n      hasCameraPermissions,\n      recordAudioPermissionStatus,\n    } = await this.arePermissionsGranted();\n    if (this._isMounted === false) {\n      return;\n    }\n\n    this.setState({\n      isAuthorized: hasCameraPermissions,\n      isAuthorizationChecked: true,\n      recordAudioPermissionStatus,\n    });\n  }\n\n  async componentDidMount() {\n    const {\n      hasCameraPermissions,\n      recordAudioPermissionStatus,\n    } = await this.arePermissionsGranted();\n    if (this._isMounted === false) {\n      return;\n    }\n\n    this.setState(\n      {\n        isAuthorized: hasCameraPermissions,\n        isAuthorizationChecked: true,\n        recordAudioPermissionStatus,\n      },\n      this._onStatusChange,\n    );\n  }\n\n  getStatus = (): Status => {\n    const { isAuthorized, isAuthorizationChecked } = this.state;\n    if (isAuthorizationChecked === false) {\n      return CameraStatus.PENDING_AUTHORIZATION;\n    }\n    return isAuthorized ? CameraStatus.READY : CameraStatus.NOT_AUTHORIZED;\n  };\n\n  // FaCC = Function as Child Component;\n  hasFaCC = (): * => typeof this.props.children === 'function';\n\n  renderChildren = (): * => {\n    if (this.hasFaCC()) {\n      return this.props.children({\n        camera: this,\n        status: this.getStatus(),\n        recordAudioPermissionStatus: this.state.recordAudioPermissionStatus,\n      });\n    }\n    return this.props.children;\n  };\n\n  render() {\n    const { style, ...nativeProps } = this._convertNativeProps(this.props);\n\n    if (this.state.isAuthorized || this.hasFaCC()) {\n      return (\n        <View style={style}>\n          <RNCamera\n            {...nativeProps}\n            style={StyleSheet.absoluteFill}\n            ref={this._setReference}\n            onMountError={this._onMountError}\n            onCameraReady={this._onCameraReady}\n            onAudioInterrupted={this._onAudioInterrupted}\n            onAudioConnected={this._onAudioConnected}\n            onGoogleVisionBarcodesDetected={this._onObjectDetected(\n              this.props.onGoogleVisionBarcodesDetected,\n            )}\n            onBarCodeRead={this._onObjectDetected(this.props.onBarCodeRead)}\n            onTouch={this._onTouch}\n            onFacesDetected={this._onObjectDetected(this.props.onFacesDetected)}\n            onTextRecognized={this._onObjectDetected(this.props.onTextRecognized)}\n            onPictureSaved={this._onPictureSaved}\n            onSubjectAreaChanged={this._onSubjectAreaChanged}\n          />\n          {this.renderChildren()}\n        </View>\n      );\n    } else if (!this.state.isAuthorizationChecked) {\n      return this.props.pendingAuthorizationView;\n    } else {\n      return this.props.notAuthorizedView;\n    }\n  }\n\n  _convertNativeProps({ children, ...props }: PropsType) {\n    const newProps = mapValues(props, this._convertProp);\n\n    if (props.onBarCodeRead) {\n      newProps.barCodeScannerEnabled = true;\n    }\n\n    if (props.onGoogleVisionBarcodesDetected) {\n      newProps.googleVisionBarcodeDetectorEnabled = true;\n    }\n\n    if (props.onFacesDetected) {\n      newProps.faceDetectorEnabled = true;\n    }\n\n    if (props.onTap || props.onDoubleTap) {\n      newProps.touchDetectorEnabled = true;\n    }\n\n    if (props.onTextRecognized) {\n      newProps.textRecognizerEnabled = true;\n    }\n\n    if (Platform.OS === 'ios') {\n      delete newProps.ratio;\n    }\n\n    return newProps;\n  }\n\n  _convertProp(value: *, key: string): * {\n    if (typeof value === 'string' && Camera.ConversionTables[key]) {\n      return Camera.ConversionTables[key][value];\n    }\n\n    return value;\n  }\n}\n\nexport const Constants = Camera.Constants;\n\nconst RNCamera = requireNativeComponent('RNCamera', Camera, {\n  nativeOnly: {\n    accessibilityComponentType: true,\n    accessibilityLabel: true,\n    accessibilityLiveRegion: true,\n    barCodeScannerEnabled: true,\n    touchDetectorEnabled: true,\n    googleVisionBarcodeDetectorEnabled: true,\n    faceDetectorEnabled: true,\n    textRecognizerEnabled: true,\n    importantForAccessibility: true,\n    onBarCodeRead: true,\n    onGoogleVisionBarcodesDetected: true,\n    onCameraReady: true,\n    onAudioInterrupted: true,\n    onAudioConnected: true,\n    onPictureSaved: true,\n    onFaceDetected: true,\n    onTouch: true,\n    onLayout: true,\n    onMountError: true,\n    onSubjectAreaChanged: true,\n    renderToHardwareTextureAndroid: true,\n    testID: true,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}