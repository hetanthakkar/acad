{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\chats.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FadeIn from \"react-native-fade-in-image\";\nimport { ScrollView, RectButton } from \"react-native-gesture-handler\";\nimport { getSpeakerTalk } from \"./utils\";\nimport CachedImage from \"./components/CachedImage\";\nimport { BoldText, SemiBoldText, RegularText } from \"./components/StyledText\";\nimport LoadingPlaceholder from \"./components/LoadingPlaceholder\";\n\nvar SpeakerRow = function (_React$Component) {\n  _inherits(SpeakerRow, _React$Component);\n\n  var _super = _createSuper(SpeakerRow);\n\n  function SpeakerRow() {\n    var _this;\n\n    _classCallCheck(this, SpeakerRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._handlePress = function () {\n      _this.props.onPress(_this.props.item);\n    };\n\n    return _this;\n  }\n\n  _createClass(SpeakerRow, [{\n    key: \"render\",\n    value: function render() {\n      var speaker = this.props.item;\n      return React.createElement(RectButton, {\n        onPress: this._handlePress,\n        activeOpacity: 0.05,\n        style: {\n          flex: 1,\n          backgroundColor: \"#fff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.rowAvatarContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, React.createElement(FadeIn, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(CachedImage, {\n        source: {\n          uri: speaker.avatarUrl\n        },\n        style: {\n          width: 50,\n          height: 50,\n          borderRadius: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }))), React.createElement(View, {\n        style: styles.rowData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, React.createElement(BoldText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, speaker.name), speaker.twitter ? React.createElement(SemiBoldText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, \"@\", speaker.twitter) : null, speaker.talks && speaker.talks.length > 0 ? React.createElement(RegularText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, getSpeakerTalk(speaker).title) : null)));\n    }\n  }]);\n\n  return SpeakerRow;\n}(React.Component);\n\nvar Speakers = function (_React$Component2) {\n  _inherits(Speakers, _React$Component2);\n\n  var _super2 = _createSuper(Speakers);\n\n  function Speakers() {\n    var _this2;\n\n    _classCallCheck(this, Speakers);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n\n    _this2._renderSectionHeader = function (_ref) {\n      var section = _ref.section;\n      return React.createElement(View, {\n        style: styles.sectionHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, React.createElement(RegularText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, section.title));\n    };\n\n    _this2._renderItem = function (_ref2) {\n      var item = _ref2.item;\n      return React.createElement(SpeakerRow, {\n        item: item,\n        onPress: _this2._handlePressRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 12\n        }\n      });\n    };\n\n    _this2._handlePressRow = function (speaker) {\n      _this2.props.navigation.navigate(\"Details\", {\n        speaker: speaker\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(Speakers, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LoadingPlaceholder, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, React.createElement(SectionList, {\n        renderScrollComponent: function renderScrollComponent(props) {\n          return React.createElement(ScrollView, _extends({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 45\n            }\n          }));\n        },\n        stickySectionHeadersEnabled: true,\n        renderItem: this._renderItem,\n        renderSectionHeader: this._renderSectionHeader,\n        sections: [{\n          data: this.props.screenProps.event.speakers,\n          title: \"Speakers\"\n        }],\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Speakers;\n}(React.Component);\n\nSpeakers.navigationOptions = {\n  title: \"Speakers\"\n};\nexport { Speakers as default };\nvar styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    padding: 10,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: \"#eee\",\n    flexDirection: \"row\"\n  },\n  rowAvatarContainer: {\n    paddingVertical: 5,\n    paddingRight: 10,\n    paddingLeft: 0\n  },\n  rowData: {\n    flex: 1\n  },\n  sectionHeader: {\n    paddingHorizontal: 10,\n    paddingTop: 7,\n    paddingBottom: 5,\n    backgroundColor: \"#eee\",\n    borderWidth: 1,\n    borderColor: \"#eee\"\n  }\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/chats.js"],"names":["React","FadeIn","ScrollView","RectButton","getSpeakerTalk","CachedImage","BoldText","SemiBoldText","RegularText","LoadingPlaceholder","SpeakerRow","_handlePress","props","onPress","item","speaker","flex","backgroundColor","styles","row","rowAvatarContainer","uri","avatarUrl","width","height","borderRadius","rowData","name","twitter","talks","length","title","Component","Speakers","_renderSectionHeader","section","sectionHeader","_renderItem","_handlePressRow","navigation","navigate","data","screenProps","event","speakers","index","toString","navigationOptions","StyleSheet","create","padding","borderBottomWidth","hairlineWidth","borderColor","flexDirection","paddingVertical","paddingRight","paddingLeft","paddingHorizontal","paddingTop","paddingBottom","borderWidth"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,8BAAvC;AACA,SAASC,cAAT;AACA,OAAOC,WAAP;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,WAAjC;AACA,OAAOC,kBAAP;;IAEMC,U;;;;;;;;;;;;;;;;UAiCJC,Y,GAAe,YAAM;AACnB,YAAKC,KAAL,CAAWC,OAAX,CAAmB,MAAKD,KAAL,CAAWE,IAA9B;AACD,K;;;;;;;6BAlCQ;AAAA,UACOC,OADP,GACmB,KAAKH,KADxB,CACCE,IADD;AAGP,aACE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE,KAAKH,YADhB;AAEE,QAAA,aAAa,EAAE,IAFjB;AAGE,QAAA,KAAK,EAAE;AAAEK,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,eAAe,EAAE;AAA5B,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEN,OAAO,CAACO;AAAf,SADV;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,MAAM,EAAE,EAArB;AAAyBC,UAAAA,YAAY,EAAE;AAAvC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EASE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWX,OAAO,CAACY,IAAnB,CADF,EAEGZ,OAAO,CAACa,OAAR,GACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgBb,OAAO,CAACa,OAAxB,CADD,GAEG,IAJN,EAKGb,OAAO,CAACc,KAAR,IAAiBd,OAAO,CAACc,KAAR,CAAcC,MAAd,GAAuB,CAAxC,GACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc1B,cAAc,CAACW,OAAD,CAAd,CAAwBgB,KAAtC,CADD,GAEG,IAPN,CATF,CALF,CADF;AA2BD;;;;EA/BsB/B,KAAK,CAACgC,S;;IAsCVC,Q;;;;;;;;;;;;;;;;WAsBnBC,oB,GAAuB,gBAAiB;AAAA,UAAdC,OAAc,QAAdA,OAAc;AACtC,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACkB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAcD,OAAO,CAACJ,KAAtB,CADF,CADF;AAKD,K;;WAEDM,W,GAAc,iBAAc;AAAA,UAAXvB,IAAW,SAAXA,IAAW;AAC1B,aAAO,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEA,IAAlB;AAAwB,QAAA,OAAO,EAAE,OAAKwB,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,K;;WAEDA,e,GAAkB,UAACvB,OAAD,EAAa;AAC7B,aAAKH,KAAL,CAAW2B,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B,EAA0C;AAAEzB,QAAAA,OAAO,EAAPA;AAAF,OAA1C;AACD,K;;;;;;;6BA/BQ;AACP,aACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,qBAAqB,EAAE,+BAACH,KAAD;AAAA,iBAAW,oBAAC,UAAD,eAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAX;AAAA,SADzB;AAEE,QAAA,2BAA2B,EAAE,IAF/B;AAGE,QAAA,UAAU,EAAE,KAAKyB,WAHnB;AAIE,QAAA,mBAAmB,EAAE,KAAKH,oBAJ5B;AAKE,QAAA,QAAQ,EAAE,CACR;AAAEO,UAAAA,IAAI,EAAE,KAAK7B,KAAL,CAAW8B,WAAX,CAAuBC,KAAvB,CAA6BC,QAArC;AAA+Cb,UAAAA,KAAK,EAAE;AAAtD,SADQ,CALZ;AAQE,QAAA,YAAY,EAAE,sBAACjB,IAAD,EAAO+B,KAAP;AAAA,iBAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,SARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAcD;;;;EApBmC9C,KAAK,CAACgC,S;;AAAvBC,Q,CACZc,iB,GAAoB;AACzBhB,EAAAA,KAAK,EAAE;AADkB,C;SADRE,Q;AAuCrB,IAAMf,MAAM,GAAG8B,UAAU,CAACC,MAAX,CAAkB;AAC/B9B,EAAAA,GAAG,EAAE;AACHH,IAAAA,IAAI,EAAE,CADH;AAEHkC,IAAAA,OAAO,EAAE,EAFN;AAGHC,IAAAA,iBAAiB,EAAEH,UAAU,CAACI,aAH3B;AAIHC,IAAAA,WAAW,EAAE,MAJV;AAKHC,IAAAA,aAAa,EAAE;AALZ,GAD0B;AAQ/BlC,EAAAA,kBAAkB,EAAE;AAClBmC,IAAAA,eAAe,EAAE,CADC;AAElBC,IAAAA,YAAY,EAAE,EAFI;AAGlBC,IAAAA,WAAW,EAAE;AAHK,GARW;AAa/B/B,EAAAA,OAAO,EAAE;AACPV,IAAAA,IAAI,EAAE;AADC,GAbsB;AAgB/BoB,EAAAA,aAAa,EAAE;AACbsB,IAAAA,iBAAiB,EAAE,EADN;AAEbC,IAAAA,UAAU,EAAE,CAFC;AAGbC,IAAAA,aAAa,EAAE,CAHF;AAIb3C,IAAAA,eAAe,EAAE,MAJJ;AAKb4C,IAAAA,WAAW,EAAE,CALA;AAMbR,IAAAA,WAAW,EAAE;AANA;AAhBgB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { SectionList, StyleSheet, View } from \"react-native\";\r\nimport FadeIn from \"react-native-fade-in-image\";\r\nimport { ScrollView, RectButton } from \"react-native-gesture-handler\";\r\nimport { getSpeakerTalk } from \"./utils\";\r\nimport CachedImage from \"./components/CachedImage\";\r\nimport { BoldText, SemiBoldText, RegularText } from \"./components/StyledText\";\r\nimport LoadingPlaceholder from \"./components/LoadingPlaceholder\";\r\n\r\nclass SpeakerRow extends React.Component {\r\n  render() {\r\n    const { item: speaker } = this.props;\r\n\r\n    return (\r\n      <RectButton\r\n        onPress={this._handlePress}\r\n        activeOpacity={0.05}\r\n        style={{ flex: 1, backgroundColor: \"#fff\" }}\r\n      >\r\n        <View style={styles.row}>\r\n          <View style={styles.rowAvatarContainer}>\r\n            <FadeIn>\r\n              <CachedImage\r\n                source={{ uri: speaker.avatarUrl }}\r\n                style={{ width: 50, height: 50, borderRadius: 25 }}\r\n              />\r\n            </FadeIn>\r\n          </View>\r\n          <View style={styles.rowData}>\r\n            <BoldText>{speaker.name}</BoldText>\r\n            {speaker.twitter ? (\r\n              <SemiBoldText>@{speaker.twitter}</SemiBoldText>\r\n            ) : null}\r\n            {speaker.talks && speaker.talks.length > 0 ? (\r\n              <RegularText>{getSpeakerTalk(speaker).title}</RegularText>\r\n            ) : null}\r\n          </View>\r\n        </View>\r\n      </RectButton>\r\n    );\r\n  }\r\n\r\n  _handlePress = () => {\r\n    this.props.onPress(this.props.item);\r\n  };\r\n}\r\n\r\nexport default class Speakers extends React.Component {\r\n  static navigationOptions = {\r\n    title: \"Speakers\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <LoadingPlaceholder>\r\n        <SectionList\r\n          renderScrollComponent={(props) => <ScrollView {...props} />}\r\n          stickySectionHeadersEnabled={true}\r\n          renderItem={this._renderItem}\r\n          renderSectionHeader={this._renderSectionHeader}\r\n          sections={[\r\n            { data: this.props.screenProps.event.speakers, title: \"Speakers\" },\r\n          ]}\r\n          keyExtractor={(item, index) => index.toString()}\r\n        />\r\n      </LoadingPlaceholder>\r\n    );\r\n  }\r\n\r\n  _renderSectionHeader = ({ section }) => {\r\n    return (\r\n      <View style={styles.sectionHeader}>\r\n        <RegularText>{section.title}</RegularText>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  _renderItem = ({ item }) => {\r\n    return <SpeakerRow item={item} onPress={this._handlePressRow} />;\r\n  };\r\n\r\n  _handlePressRow = (speaker) => {\r\n    this.props.navigation.navigate(\"Details\", { speaker });\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flex: 1,\r\n    padding: 10,\r\n    borderBottomWidth: StyleSheet.hairlineWidth,\r\n    borderColor: \"#eee\",\r\n    flexDirection: \"row\",\r\n  },\r\n  rowAvatarContainer: {\r\n    paddingVertical: 5,\r\n    paddingRight: 10,\r\n    paddingLeft: 0,\r\n  },\r\n  rowData: {\r\n    flex: 1,\r\n  },\r\n  sectionHeader: {\r\n    paddingHorizontal: 10,\r\n    paddingTop: 7,\r\n    paddingBottom: 5,\r\n    backgroundColor: \"#eee\",\r\n    borderWidth: 1,\r\n    borderColor: \"#eee\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}