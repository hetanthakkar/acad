{"ast":null,"code":"function _iterableToArray(iter) {\n  if ((typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/node_modules/expo/node_modules/@babel/runtime/helpers/iterableToArray.js"],"names":["_iterableToArray","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","module","exports"],"mappings":"AAAA,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AAC9B,MAAI,gCAAAC,MAAM,CAACC,QAAP,oBAAmBC,MAAM,CAACH,IAAD,CAAzB,IAAmCG,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,IAA/B,MAAyC,oBAAhF,EAAsG,OAAOO,KAAK,CAACC,IAAN,CAAWR,IAAX,CAAP;AACvG;;AAEDS,MAAM,CAACC,OAAP,GAAiBX,gBAAjB","sourcesContent":["function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;"]},"metadata":{},"sourceType":"script"}