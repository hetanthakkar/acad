{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\cam.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from \"react\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { RNCamera } from \"react-native-camera\";\n\nvar App = function (_PureComponent) {\n  _inherits(App, _PureComponent);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.takePicture = function _callee() {\n      var options, data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this.camera) {\n                _context.next = 6;\n                break;\n              }\n\n              options = {\n                quality: 0.5,\n                base64: true\n              };\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_this.camera.takePictureAsync(options));\n\n            case 4:\n              data = _context.sent;\n              console.log(data.uri);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, React.createElement(RNCamera, {\n        ref: function ref(_ref2) {\n          _this2.camera = _ref2;\n        },\n        style: styles.preview,\n        type: RNCamera.Constants.Type.back,\n        flashMode: RNCamera.Constants.FlashMode.on,\n        androidCameraPermissionOptions: {\n          title: \"Permission to use camera\",\n          message: \"We need your permission to use your camera\",\n          buttonPositive: \"Ok\",\n          buttonNegative: \"Cancel\"\n        },\n        androidRecordAudioPermissionOptions: {\n          title: \"Permission to use audio recording\",\n          message: \"We need your permission to use your audio\",\n          buttonPositive: \"Ok\",\n          buttonNegative: \"Cancel\"\n        },\n        onGoogleVisionBarcodesDetected: function onGoogleVisionBarcodesDetected(_ref) {\n          var barcodes = _ref.barcodes;\n          console.log(barcodes);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 0,\n          flexDirection: \"row\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 14\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \" SNAP\")));\n    }\n  }]);\n\n  return App;\n}(PureComponent);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"black\"\n  },\n  preview: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    alignItems: \"center\"\n  },\n  capture: {\n    flex: 0,\n    backgroundColor: \"#fff\",\n    borderRadius: 5,\n    padding: 15,\n    paddingHorizontal: 20,\n    alignSelf: \"center\",\n    margin: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/cam.js"],"names":["React","PureComponent","RNCamera","App","takePicture","camera","options","quality","base64","takePictureAsync","data","console","log","uri","ref","styles","preview","Constants","Type","back","FlashMode","on","title","message","buttonPositive","buttonNegative","barcodes","flex","flexDirection","justifyContent","fontSize","StyleSheet","create","container","backgroundColor","alignItems","capture","borderRadius","padding","paddingHorizontal","alignSelf","margin"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport {\r\n  AppRegistry,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport { RNCamera } from \"react-native-camera\";\r\n\r\nexport default class App extends PureComponent {\r\n  render() {\r\n    return (\r\n      <View>\r\n        <RNCamera\r\n          ref={(ref) => {\r\n            this.camera = ref;\r\n          }}\r\n          style={styles.preview}\r\n          type={RNCamera.Constants.Type.back}\r\n          flashMode={RNCamera.Constants.FlashMode.on}\r\n          androidCameraPermissionOptions={{\r\n            title: \"Permission to use camera\",\r\n            message: \"We need your permission to use your camera\",\r\n            buttonPositive: \"Ok\",\r\n            buttonNegative: \"Cancel\",\r\n          }}\r\n          androidRecordAudioPermissionOptions={{\r\n            title: \"Permission to use audio recording\",\r\n            message: \"We need your permission to use your audio\",\r\n            buttonPositive: \"Ok\",\r\n            buttonNegative: \"Cancel\",\r\n          }}\r\n          onGoogleVisionBarcodesDetected={({ barcodes }) => {\r\n            console.log(barcodes);\r\n          }}\r\n        />\r\n        <View\r\n          style={{ flex: 0, flexDirection: \"row\", justifyContent: \"center\" }}\r\n        >\r\n          <Text style={{ fontSize: 14 }}> SNAP</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  takePicture = async () => {\r\n    if (this.camera) {\r\n      const options = { quality: 0.5, base64: true };\r\n      const data = await this.camera.takePictureAsync(options);\r\n      console.log(data.uri);\r\n    }\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  preview: {\r\n    flex: 1,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n  capture: {\r\n    flex: 0,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 5,\r\n    padding: 15,\r\n    paddingHorizontal: 20,\r\n    alignSelf: \"center\",\r\n    margin: 20,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}