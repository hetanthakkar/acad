{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\components\\\\CloseButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { BorderlessButton } from 'react-native-gesture-handler';\n\nvar CloseButton = function (_React$PureComponent) {\n  _inherits(CloseButton, _React$PureComponent);\n\n  var _super = _createSuper(CloseButton);\n\n  function CloseButton() {\n    var _this;\n\n    _classCallCheck(this, CloseButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CloseButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onPress = _this$props.onPress,\n          pressColorAndroid = _this$props.pressColorAndroid;\n      return React.createElement(BorderlessButton, {\n        accessibilityComponentType: \"button\",\n        accessibilityLabel: \"Close details\",\n        accessibilityTraits: \"button\",\n        testID: \"header-back\",\n        delayPressIn: 0,\n        onPress: onPress,\n        pressColor: pressColorAndroid,\n        style: styles.container,\n        borderless: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, React.createElement(Ionicons, {\n        name: Platform.OS === 'ios' ? 'ios-close' : 'md-close',\n        size: Platform.OS === 'ios' ? 40 : 30,\n        color: \"#fff\",\n        style: styles.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return CloseButton;\n}(React.PureComponent);\n\nCloseButton.defaultProps = {\n  pressColorAndroid: 'rgba(0, 0, 0, .32)',\n  tintColor: Platform.select({\n    ios: '#037aff'\n  })\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent'\n  },\n  icon: {\n    margin: 16,\n    marginTop: 0\n  }\n});\nexport default CloseButton;","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/components/CloseButton.js"],"names":["React","Ionicons","BorderlessButton","CloseButton","state","props","onPress","pressColorAndroid","styles","container","Platform","OS","icon","PureComponent","defaultProps","tintColor","select","ios","StyleSheet","create","alignItems","flexDirection","backgroundColor","margin","marginTop"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,SAAQC,gBAAR,QAA+B,8BAA/B;;IAEMC,W;;;;;;;;;;;;;;;UAQJC,K,GAAQ,E;;;;;;6BAEC;AAAA,wBAC8B,KAAKC,KADnC;AAAA,UACAC,OADA,eACAA,OADA;AAAA,UACSC,iBADT,eACSA,iBADT;AAGP,aACE,oBAAC,gBAAD;AACE,QAAA,0BAA0B,EAAC,QAD7B;AAEE,QAAA,kBAAkB,EAAC,eAFrB;AAGE,QAAA,mBAAmB,EAAC,QAHtB;AAIE,QAAA,MAAM,EAAC,aAJT;AAKE,QAAA,YAAY,EAAE,CALhB;AAME,QAAA,OAAO,EAAED,OANX;AAOE,QAAA,UAAU,EAAEC,iBAPd;AAQE,QAAA,KAAK,EAAEC,MAAM,CAACC,SARhB;AASE,QAAA,UAAU,MATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,WAAxB,GAAsC,UAD9C;AAEE,QAAA,IAAI,EAAED,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B,EAFrC;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,KAAK,EAAEH,MAAM,CAACI,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVF,CADF;AAqBD;;;;EAlCuBZ,KAAK,CAACa,a;;AAA1BV,W,CACGW,Y,GAAe;AACpBP,EAAAA,iBAAiB,EAAE,oBADC;AAEpBQ,EAAAA,SAAS,EAAEL,QAAQ,CAACM,MAAT,CAAgB;AACzBC,IAAAA,GAAG,EAAE;AADoB,GAAhB;AAFS,C;AAoCxB,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,eAAe,EAAE;AAHR,GADoB;AAM/BV,EAAAA,IAAI,EAAE;AACJW,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,SAAS,EAAE;AAFP;AANyB,CAAlB,CAAf;AAYA,eAAerB,WAAf","sourcesContent":["import React from 'react';\r\nimport {View, Platform, StyleSheet} from 'react-native';\r\n\r\nimport {Ionicons} from '@expo/vector-icons';\r\nimport {BorderlessButton} from 'react-native-gesture-handler';\r\n\r\nclass CloseButton extends React.PureComponent {\r\n  static defaultProps = {\r\n    pressColorAndroid: 'rgba(0, 0, 0, .32)',\r\n    tintColor: Platform.select({\r\n      ios: '#037aff',\r\n    }),\r\n  };\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    const {onPress, pressColorAndroid} = this.props;\r\n\r\n    return (\r\n      <BorderlessButton\r\n        accessibilityComponentType=\"button\"\r\n        accessibilityLabel=\"Close details\"\r\n        accessibilityTraits=\"button\"\r\n        testID=\"header-back\"\r\n        delayPressIn={0}\r\n        onPress={onPress}\r\n        pressColor={pressColorAndroid}\r\n        style={styles.container}\r\n        borderless>\r\n        <View style={styles.container}>\r\n          <Ionicons\r\n            name={Platform.OS === 'ios' ? 'ios-close' : 'md-close'}\r\n            size={Platform.OS === 'ios' ? 40 : 30}\r\n            color=\"#fff\"\r\n            style={styles.icon}\r\n          />\r\n        </View>\r\n      </BorderlessButton>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    backgroundColor: 'transparent',\r\n  },\r\n  icon: {\r\n    margin: 16,\r\n    marginTop: 0,\r\n  },\r\n});\r\n\r\nexport default CloseButton;\r\n"]},"metadata":{},"sourceType":"module"}