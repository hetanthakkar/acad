{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\components\\\\ContactCard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withNavigation } from 'react-navigation';\nimport GravatarImage from \"../components/GravatarImage\";\nimport { sendEmail, openTwitter, getContactTwitter } from \"../utils\";\nimport { Colors, FontSizes } from \"../constants\";\nimport { Button, CardActions, CardContent, Title, Paragraph, Card } from 'react-native-paper';\nimport CachedImage from \"../components/CachedImage\";\n\nvar ContactCard = withNavigation(_class = (_temp = function (_React$Component) {\n  _inherits(ContactCard, _React$Component);\n\n  var _super = _createSuper(ContactCard);\n\n  function ContactCard() {\n    var _this;\n\n    _classCallCheck(this, ContactCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._handlePressTwitterButton = function () {\n      var twitter = getContactTwitter(_this.props.contact);\n      openTwitter(twitter);\n    };\n\n    _this._handlePressEmailButton = function () {\n      var contact = _this.props.contact;\n      var emailTo = contact.email;\n      var tickets = _this.props.tickets;\n      var fromName = {\n        firstName: '',\n        lastName: ''\n      };\n\n      if (tickets && tickets[0] && tickets[0].firstName) {\n        fromName = tickets[0];\n      }\n\n      sendEmail(emailTo, fromName);\n    };\n\n    _this.getContactBio = function () {\n      var contact = _this.props.contact;\n      var bio = '';\n\n      if (contact) {\n        contact.answers.map(function (answer) {\n          if (answer.question && answer.question.id === 56) {\n            bio = answer.value;\n          }\n        });\n      }\n\n      return bio;\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          contact = _this$props.contact,\n          onPress = _this$props.onPress;\n      var email = contact.email;\n      var bio = this.getContactBio();\n      var twitter = getContactTwitter(contact);\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, React.createElement(GravatarImage, {\n        style: styles.avatarImage,\n        email: contact.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, contact.firstName + ' ' + contact.lastName), bio === '' ? null : React.createElement(Paragraph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 36\n        }\n      }, bio)), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, twitter !== '' ? React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, React.createElement(CachedImage, {\n        source: require(\"../assets/twitter.png\"),\n        style: {\n          tintColor: '#00AAE4',\n          height: 40,\n          width: 40,\n          resizeMode: 'cover'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }\n      }), React.createElement(Button, {\n        compact: true,\n        onPress: this._handlePressTwitterButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, \"@\", twitter))) : null, React.createElement(Button, {\n        onPress: this._handlePressEmailButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      }, \"EMAIL\")))));\n    }\n  }]);\n\n  return ContactCard;\n}(React.Component), _temp)) || _class;\n\nexport { ContactCard as default };\nvar styles = StyleSheet.create({\n  avatarImage: {\n    width: 64,\n    height: 64,\n    borderRadius: 32,\n    marginLeft: 8,\n    marginTop: 8\n  },\n  headerRow: {\n    flexDirection: 'row'\n  },\n  headerRowAvatarContainer: {\n    paddingRight: 10\n  },\n  headerRowInfoContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    paddingBottom: 5\n  },\n  speakerName: {\n    fontSize: FontSizes.bodyTitle\n  },\n  organizationName: {\n    color: Colors.faint,\n    fontSize: FontSizes.bodyLarge\n  },\n  ticketInfoRow: {\n    paddingTop: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  },\n  ticketTitle: {\n    fontSize: FontSizes.bodyTitle\n  },\n  ticketLocation: {\n    fontSize: FontSizes.bodyLarge,\n    color: Colors.faint,\n    marginTop: 10\n  },\n  nextYear: {\n    textAlign: 'center',\n    fontSize: FontSizes.title,\n    marginVertical: 10\n  },\n  button: _objectSpread({\n    padding: 15\n  }, Platform.select({\n    ios: {\n      borderRadius: 5,\n      backgroundColor: '#fff',\n      shadowColor: '#000',\n      shadowOpacity: 0.1,\n      shadowRadius: 4,\n      shadowOffset: {\n        width: 2,\n        height: 2\n      }\n    },\n    android: {\n      backgroundColor: '#fff',\n      elevation: 2\n    }\n  }))\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/components/ContactCard.js"],"names":["React","withNavigation","GravatarImage","sendEmail","openTwitter","getContactTwitter","Colors","FontSizes","Button","CardActions","CardContent","Title","Paragraph","Card","CachedImage","ContactCard","_handlePressTwitterButton","twitter","props","contact","_handlePressEmailButton","emailTo","email","tickets","fromName","firstName","lastName","getContactBio","bio","answers","map","answer","question","id","value","onPress","flex","flexDirection","styles","avatarImage","alignItems","require","tintColor","height","width","resizeMode","Component","StyleSheet","create","borderRadius","marginLeft","marginTop","headerRow","headerRowAvatarContainer","paddingRight","headerRowInfoContainer","justifyContent","paddingBottom","speakerName","fontSize","bodyTitle","organizationName","color","faint","bodyLarge","ticketInfoRow","paddingTop","ticketTitle","ticketLocation","nextYear","textAlign","title","marginVertical","button","padding","Platform","select","ios","backgroundColor","shadowColor","shadowOpacity","shadowRadius","shadowOffset","android","elevation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Text, Platform, StyleSheet, View} from 'react-native';\r\nimport {withNavigation} from 'react-navigation';\r\nimport GravatarImage from '../components/GravatarImage';\r\nimport {sendEmail, openTwitter, getContactTwitter} from '../utils';\r\nimport {Colors, FontSizes} from '../constants';\r\nimport {\r\n  Button,\r\n  CardActions,\r\n  CardContent,\r\n  Title,\r\n  Paragraph,\r\n  Card,\r\n} from 'react-native-paper';\r\nimport CachedImage from '../components/CachedImage';\r\n\r\n@withNavigation\r\nexport default class ContactCard extends React.Component {\r\n  render() {\r\n    let {contact, onPress} = this.props;\r\n    const {email} = contact;\r\n    const bio = this.getContactBio();\r\n    const twitter = getContactTwitter(contact);\r\n    return (\r\n      <Card>\r\n        <View style={{flex: 1, flexDirection: 'row'}}>\r\n          <GravatarImage style={styles.avatarImage} email={contact.email} />\r\n          <View style={{flex: 1}}>\r\n            <CardContent>\r\n              <Title>{contact.firstName + ' ' + contact.lastName}</Title>\r\n              {bio === '' ? null : <Paragraph>{bio}</Paragraph>}\r\n            </CardContent>\r\n            <CardActions>\r\n              {twitter !== '' ? (\r\n                <View\r\n                  style={{\r\n                    flexDirection: 'row',\r\n                    alignItems: 'center',\r\n                  }}>\r\n                  <CachedImage\r\n                    source={require('../assets/twitter.png')}\r\n                    style={{\r\n                      tintColor: '#00AAE4',\r\n                      height: 40,\r\n                      width: 40,\r\n                      resizeMode: 'cover',\r\n                    }}\r\n                  />\r\n                  <Button compact onPress={this._handlePressTwitterButton}>\r\n                    <Text>@{twitter}</Text>\r\n                  </Button>\r\n                </View>\r\n              ) : null}\r\n              <Button onPress={this._handlePressEmailButton}>EMAIL</Button>\r\n            </CardActions>\r\n          </View>\r\n        </View>\r\n      </Card>\r\n    );\r\n  }\r\n  _handlePressTwitterButton = () => {\r\n    const twitter = getContactTwitter(this.props.contact);\r\n    openTwitter(twitter);\r\n  };\r\n\r\n  _handlePressEmailButton = () => {\r\n    const contact = this.props.contact;\r\n    const emailTo = contact.email;\r\n    const {tickets} = this.props;\r\n    let fromName = {firstName: '', lastName: ''};\r\n    if (tickets && tickets[0] && tickets[0].firstName) {\r\n      fromName = tickets[0];\r\n    }\r\n    sendEmail(emailTo, fromName);\r\n  };\r\n  getContactBio = () => {\r\n    let contact = this.props.contact;\r\n    let bio = '';\r\n    if (contact) {\r\n      contact.answers.map(answer => {\r\n        if (answer.question && answer.question.id === 56) {\r\n          bio = answer.value;\r\n        }\r\n      });\r\n    }\r\n    return bio;\r\n  };\r\n}\r\nconst styles = StyleSheet.create({\r\n  avatarImage: {\r\n    width: 64,\r\n    height: 64,\r\n    borderRadius: 32,\r\n    marginLeft: 8,\r\n    marginTop: 8,\r\n  },\r\n  headerRow: {\r\n    flexDirection: 'row',\r\n  },\r\n  headerRowAvatarContainer: {\r\n    paddingRight: 10,\r\n  },\r\n  headerRowInfoContainer: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    paddingBottom: 5,\r\n  },\r\n  speakerName: {\r\n    fontSize: FontSizes.bodyTitle,\r\n  },\r\n  organizationName: {\r\n    color: Colors.faint,\r\n    fontSize: FontSizes.bodyLarge,\r\n  },\r\n  ticketInfoRow: {\r\n    paddingTop: 10,\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flex: 1,\r\n  },\r\n  ticketTitle: {\r\n    fontSize: FontSizes.bodyTitle,\r\n  },\r\n  ticketLocation: {\r\n    fontSize: FontSizes.bodyLarge,\r\n    color: Colors.faint,\r\n    marginTop: 10,\r\n  },\r\n  nextYear: {\r\n    textAlign: 'center',\r\n    fontSize: FontSizes.title,\r\n    marginVertical: 10,\r\n  },\r\n  button: {\r\n    padding: 15,\r\n    ...Platform.select({\r\n      ios: {\r\n        borderRadius: 5,\r\n        backgroundColor: '#fff',\r\n        shadowColor: '#000',\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 4,\r\n        shadowOffset: {width: 2, height: 2},\r\n      },\r\n      android: {\r\n        backgroundColor: '#fff',\r\n        elevation: 2,\r\n      },\r\n    }),\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}