{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\homePage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Colors, Layout } from \"./constants\";\nimport Constants from \"expo-constants\";\n\nvar HomePage = function (_Component) {\n  _inherits(HomePage, _Component);\n\n  var _super = _createSuper(HomePage);\n\n  function HomePage() {\n    _classCallCheck(this, HomePage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HomePage, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.headerContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }\n      }, \" textInComponent \"), React.createElement(View, {\n        style: styles.headerRowSpeaker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }\n      }, speakers ? speakers.map(function (speaker) {\n        return React.createElement(View, {\n          style: styles.headerColumnSpeaker,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableOpacity, {\n          key: speaker.id,\n          onPress: function onPress() {\n            return connsole.log(\"lsjng\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 19\n          }\n        }, React.createElement(CachedImage, {\n          source: {\n            uri: \"https://static.toiimg.com/photo/msid-71935935/71935935.jpg\"\n          },\n          style: styles.avatarMultiple,\n          key: speaker.id + talk.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }\n        })), speaker.name.split(\" \").map(function (name, index) {\n          return React.createElement(View, {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }\n          }, React.createElement(TouchableOpacity, {\n            key: speaker.id,\n            onPress: function onPress() {\n              return _this._handlePressSpeaker(speaker);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 23\n            }\n          }, React.createElement(SemiBoldText, {\n            style: styles.headerText,\n            key: \"speakers\" + speaker.id + name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }\n          }, name)));\n        }));\n      }) : null), \") : (\", React.createElement(CachedImage, {\n        source: {\n          uri: speaker.avatarUrl\n        },\n        style: styles.avatar,\n        key: speaker.avatarUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }), \")}\");\n    }\n  }]);\n\n  return HomePage;\n}(Component);\n\nexport { HomePage as default };\nvar styles = StyleSheet.create({\n  headerContainer: {\n    backgroundColor: Colors.blue,\n    paddingTop: Constants.statusBarHeight + Layout.notchHeight + 160,\n    paddingBottom: 20,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/homePage.js"],"names":["React","Component","Colors","Layout","Constants","HomePage","styles","headerContainer","headerRowSpeaker","speakers","map","speaker","headerColumnSpeaker","id","connsole","log","uri","avatarMultiple","talk","title","name","split","index","_handlePressSpeaker","headerText","avatarUrl","avatar","StyleSheet","create","backgroundColor","blue","paddingTop","statusBarHeight","notchHeight","paddingBottom","paddingHorizontal","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;IACqBC,Q;;;;;;;;;;;;;6BACV;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,QAAQ,GACLA,QAAQ,CAACC,GAAT,CAAa,UAACC,OAAD;AAAA,eACX,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEL,MAAM,CAACM,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,gBAAD;AACE,UAAA,GAAG,EAAED,OAAO,CAACE,EADf;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAMC,QAAQ,CAACC,GAAT,CAAa,OAAb,CAAN;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE,oBAAC,WAAD;AACE,UAAA,MAAM,EAAE;AACNC,YAAAA,GAAG,EACD;AAFI,WADV;AAKE,UAAA,KAAK,EAAEV,MAAM,CAACW,cALhB;AAME,UAAA,GAAG,EAAEN,OAAO,CAACE,EAAR,GAAaK,IAAI,CAACC,KANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CADF,EAcGR,OAAO,CAACS,IAAR,CAAaC,KAAb,CAAmB,GAAnB,EAAwBX,GAAxB,CAA4B,UAACU,IAAD,EAAOE,KAAP;AAAA,iBAC3B,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,gBAAD;AACE,YAAA,GAAG,EAAEX,OAAO,CAACE,EADf;AAEE,YAAA,OAAO,EAAE;AAAA,qBAAM,KAAI,CAACU,mBAAL,CAAyBZ,OAAzB,CAAN;AAAA,aAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIE,oBAAC,YAAD;AACE,YAAA,KAAK,EAAEL,MAAM,CAACkB,UADhB;AAEE,YAAA,GAAG,EAAE,aAAab,OAAO,CAACE,EAArB,GAA0BO,IAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIGA,IAJH,CAJF,CADF,CAD2B;AAAA,SAA5B,CAdH,CADW;AAAA,OAAb,CADK,GAiCL,IAlCN,CAFF,WAuCE,oBAAC,WAAD;AACE,QAAA,MAAM,EAAE;AAAEJ,UAAAA,GAAG,EAAEL,OAAO,CAACc;AAAf,SADV;AAEE,QAAA,KAAK,EAAEnB,MAAM,CAACoB,MAFhB;AAGE,QAAA,GAAG,EAAEf,OAAO,CAACc,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvCF,OADF;AAgDD;;;;EAlDmCxB,S;;SAAjBI,Q;AAoDrB,IAAMC,MAAM,GAAGqB,UAAU,CAACC,MAAX,CAAkB;AAC/BrB,EAAAA,eAAe,EAAE;AACfsB,IAAAA,eAAe,EAAE3B,MAAM,CAAC4B,IADT;AAEfC,IAAAA,UAAU,EAAE3B,SAAS,CAAC4B,eAAV,GAA4B7B,MAAM,CAAC8B,WAAnC,GAAiD,GAF9C;AAGfC,IAAAA,aAAa,EAAE,EAHA;AAIfC,IAAAA,iBAAiB,EAAE,EAJJ;AAKfC,IAAAA,UAAU,EAAE,QALG;AAMfC,IAAAA,cAAc,EAAE;AAND;AADc,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Text, View, StyleSheet } from \"react-native\";\r\nimport { Colors, Layout } from \"./constants\";\r\nimport Constants from \"expo-constants\";\r\nexport default class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <View style={styles.headerContainer}>\r\n        <Text> textInComponent </Text>\r\n        <View style={styles.headerRowSpeaker}>\r\n          {speakers\r\n            ? speakers.map((speaker) => (\r\n                <View style={styles.headerColumnSpeaker}>\r\n                  <TouchableOpacity\r\n                    key={speaker.id}\r\n                    onPress={() => connsole.log(\"lsjng\")}\r\n                  >\r\n                    <CachedImage\r\n                      source={{\r\n                        uri:\r\n                          \"https://static.toiimg.com/photo/msid-71935935/71935935.jpg\",\r\n                      }}\r\n                      style={styles.avatarMultiple}\r\n                      key={speaker.id + talk.title}\r\n                    />\r\n                  </TouchableOpacity>\r\n                  {speaker.name.split(\" \").map((name, index) => (\r\n                    <View key={index}>\r\n                      <TouchableOpacity\r\n                        key={speaker.id}\r\n                        onPress={() => this._handlePressSpeaker(speaker)}\r\n                      >\r\n                        <SemiBoldText\r\n                          style={styles.headerText}\r\n                          key={\"speakers\" + speaker.id + name}\r\n                        >\r\n                          {name}\r\n                        </SemiBoldText>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  ))}\r\n                </View>\r\n              ))\r\n            : null}\r\n        </View>\r\n        ) : (\r\n        <CachedImage\r\n          source={{ uri: speaker.avatarUrl }}\r\n          style={styles.avatar}\r\n          key={speaker.avatarUrl}\r\n        />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  headerContainer: {\r\n    backgroundColor: Colors.blue,\r\n    paddingTop: Constants.statusBarHeight + Layout.notchHeight + 160,\r\n    paddingBottom: 20,\r\n    paddingHorizontal: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}