{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\node_modules\\\\react-native-maps\\\\lib\\\\components\\\\MapUrlTile.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport View from \"react-native-web/dist/exports/View\";\nimport decorateMapComponent, { USES_DEFAULT_IMPLEMENTATION, SUPPORTED } from \"./decorateMapComponent\";\nvar viewPropTypes = ViewPropTypes || View.propTypes;\n\nvar propTypes = _objectSpread({}, viewPropTypes, {\n  urlTemplate: PropTypes.string.isRequired,\n  zIndex: PropTypes.number,\n  maximumZ: PropTypes.number,\n  minimumZ: PropTypes.number,\n  shouldReplaceMapContent: PropTypes.bool,\n  tileSize: PropTypes.number,\n  flipY: PropTypes.bool\n});\n\nvar MapUrlTile = function (_React$Component) {\n  _inherits(MapUrlTile, _React$Component);\n\n  function MapUrlTile() {\n    _classCallCheck(this, MapUrlTile);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MapUrlTile).apply(this, arguments));\n  }\n\n  _createClass(MapUrlTile, [{\n    key: \"render\",\n    value: function render() {\n      var AIRMapUrlTile = this.getAirComponent();\n      return React.createElement(AIRMapUrlTile, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      }));\n    }\n  }]);\n\n  return MapUrlTile;\n}(React.Component);\n\nMapUrlTile.propTypes = propTypes;\nexport default decorateMapComponent(MapUrlTile, {\n  componentType: 'UrlTile',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/node_modules/react-native-maps/lib/components/MapUrlTile.js"],"names":["PropTypes","React","decorateMapComponent","USES_DEFAULT_IMPLEMENTATION","SUPPORTED","viewPropTypes","ViewPropTypes","View","propTypes","urlTemplate","string","isRequired","zIndex","number","maximumZ","minimumZ","shouldReplaceMapContent","bool","tileSize","flipY","MapUrlTile","AIRMapUrlTile","getAirComponent","props","Component","componentType","providers","google","ios","android"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,OAAOC,oBAAP,IACEC,2BADF,EAEEC,SAFF;AAMA,IAAMC,aAAa,GAAGC,aAAa,IAAIC,IAAI,CAACC,SAA5C;;AAEA,IAAMA,SAAS,qBACVH,aADU;AAObI,EAAAA,WAAW,EAAET,SAAS,CAACU,MAAV,CAAiBC,UAPjB;AAgBbC,EAAAA,MAAM,EAAEZ,SAAS,CAACa,MAhBL;AAqBbC,EAAAA,QAAQ,EAAEd,SAAS,CAACa,MArBP;AA2BbE,EAAAA,QAAQ,EAAEf,SAAS,CAACa,MA3BP;AAkCbG,EAAAA,uBAAuB,EAAEhB,SAAS,CAACiB,IAlCtB;AAyCbC,EAAAA,QAAQ,EAAElB,SAAS,CAACa,MAzCP;AAiDbM,EAAAA,KAAK,EAAEnB,SAAS,CAACiB;AAjDJ,EAAf;;IAoDMG,U;;;;;;;;;;;6BACK;AACP,UAAMC,aAAa,GAAG,KAAKC,eAAL,EAAtB;AACA,aAAO,oBAAC,aAAD,eAAmB,KAAKC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAJsBtB,KAAK,CAACuB,S;;AAO/BJ,UAAU,CAACZ,SAAX,GAAuBA,SAAvB;AAEA,eAAeN,oBAAoB,CAACkB,UAAD,EAAa;AAC9CK,EAAAA,aAAa,EAAE,SAD+B;AAE9CC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAExB,SADC;AAENyB,MAAAA,OAAO,EAAE1B;AAFH;AADC;AAFmC,CAAb,CAAnC","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { ViewPropTypes, View } from 'react-native';\r\n\r\nimport decorateMapComponent, {\r\n  USES_DEFAULT_IMPLEMENTATION,\r\n  SUPPORTED,\r\n} from './decorateMapComponent';\r\n\r\n// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)\r\nconst viewPropTypes = ViewPropTypes || View.propTypes;\r\n\r\nconst propTypes = {\r\n  ...viewPropTypes,\r\n\r\n  /**\r\n   * The url template of the tile server. The patterns {x} {y} {z} will be replaced at runtime\r\n   * For example, http://c.tile.openstreetmap.org/{z}/{x}/{y}.png\r\n   */\r\n  urlTemplate: PropTypes.string.isRequired,\r\n\r\n  /**\r\n   * The order in which this tile overlay is drawn with respect to other overlays. An overlay\r\n   * with a larger z-index is drawn over overlays with smaller z-indices. The order of overlays\r\n   * with the same z-index is arbitrary. The default zIndex is -1.\r\n   *\r\n   * @platform android\r\n   */\r\n  zIndex: PropTypes.number,\r\n  /**\r\n   * The maximum zoom level for this tile overlay.\r\n   *\r\n   */\r\n  maximumZ: PropTypes.number,\r\n\r\n  /**\r\n   * The minimum zoom level for this tile overlay.\r\n   *\r\n   */\r\n  minimumZ: PropTypes.number,\r\n\r\n  /**\r\n   * Corresponds to MKTileOverlay canReplaceMapContent.\r\n   *\r\n   * @platform ios\r\n   */\r\n  shouldReplaceMapContent: PropTypes.bool,\r\n\r\n  /**\r\n   * (Optional) Tile size for iOS only, default size is 256 * 256.\r\n   *\r\n   * @platform ios\r\n   */\r\n  tileSize: PropTypes.number,\r\n\r\n  /**\r\n   *\r\n   * Allow tiles using the TMS coordinate system (origin bottom left)\r\n   * to be used, and displayed at their correct coordinates\r\n   *\r\n   */\r\n  flipY: PropTypes.bool,\r\n};\r\n\r\nclass MapUrlTile extends React.Component {\r\n  render() {\r\n    const AIRMapUrlTile = this.getAirComponent();\r\n    return <AIRMapUrlTile {...this.props} />;\r\n  }\r\n}\r\n\r\nMapUrlTile.propTypes = propTypes;\r\n\r\nexport default decorateMapComponent(MapUrlTile, {\r\n  componentType: 'UrlTile',\r\n  providers: {\r\n    google: {\r\n      ios: SUPPORTED,\r\n      android: USES_DEFAULT_IMPLEMENTATION,\r\n    },\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}