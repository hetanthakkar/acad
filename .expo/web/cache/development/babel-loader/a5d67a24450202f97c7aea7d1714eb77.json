{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\node_modules\\\\react-native-maps\\\\lib\\\\web\\\\Leaflet\\\\Callout.js\";\nimport * as React from 'react';\nimport { DivOverlay, Popup } from 'react-leaflet';\nimport { transformProps } from \"./utils/transformProps\";\n\nfunction localTransformProps(_ref) {\n  var style = _ref.style,\n      props = _objectWithoutProperties(_ref, [\"style\"]);\n\n  return _objectSpread({\n    style: style\n  }, transformProps(props));\n}\n\nvar ExpoCallout = function (_React$Component) {\n  _inherits(ExpoCallout, _React$Component);\n\n  function ExpoCallout() {\n    _classCallCheck(this, ExpoCallout);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ExpoCallout).apply(this, arguments));\n  }\n\n  _createClass(ExpoCallout, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      this.ref.setStyleIfChanged(this.props, localTransformProps(props));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var props = localTransformProps(this.props);\n      return React.createElement(Popup, _extends({\n        ref: function ref(_ref2) {\n          return _this.ref = _ref2;\n        }\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        }\n      }));\n    }\n  }]);\n\n  return ExpoCallout;\n}(React.Component);\n\nexport { ExpoCallout as default };","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/node_modules/react-native-maps/lib/web/Leaflet/Callout.js"],"names":["React","DivOverlay","Popup","transformProps","localTransformProps","style","props","ExpoCallout","ref","setStyleIfChanged","Component"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,eAAlC;AAEA,SAASC,cAAT;;AAEA,SAASC,mBAAT,OAAkD;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAATC,KAAS;;AAChD;AACED,IAAAA,KAAK,EAALA;AADF,KAEKF,cAAc,CAACG,KAAD,CAFnB;AAID;;IAEoBC,W;;;;;;;;;;;mCACJD,K,EAAO;AACpB,WAAKE,GAAL,CAASC,iBAAT,CAA2B,KAAKH,KAAhC,EAAuCF,mBAAmB,CAACE,KAAD,CAA1D;AACD;;;6BAEQ;AAAA;;AACP,UAAMA,KAAK,GAAGF,mBAAmB,CAAC,KAAKE,KAAN,CAAjC;AACA,aAAO,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAE,aAAAE,KAAG;AAAA,iBAAK,KAAI,CAACA,GAAL,GAAWA,KAAhB;AAAA;AAAf,SAAyCF,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EARsCN,KAAK,CAACU,S;;SAA1BH,W","sourcesContent":["import * as React from 'react';\r\nimport { DivOverlay, Popup } from 'react-leaflet';\r\n\r\nimport { transformProps } from './utils/transformProps';\r\n\r\nfunction localTransformProps({ style, ...props }) {\r\n  return {\r\n    style,\r\n    ...transformProps(props),\r\n  };\r\n}\r\n\r\nexport default class ExpoCallout extends React.Component {\r\n  setNativeProps(props) {\r\n    this.ref.setStyleIfChanged(this.props, localTransformProps(props));\r\n  }\r\n\r\n  render() {\r\n    const props = localTransformProps(this.props);\r\n    return <Popup ref={ref => (this.ref = ref)} {...props} />;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}