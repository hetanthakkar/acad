{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\chat.js\";\nimport NavigationDrawerStructure from \"./main2\";\nimport * as React from \"react\";\nimport Chat from \"./chat1\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Constants } from \"expo\";\nvar width = Dimensions.get(\"window\");\nimport Main from \"./main1\";\nimport { createAppContainer, DrawerItems, SafeAreaView, TouchableOpacity } from \"react-navigation\";\nimport { createDrawerNavigator } from \"react-navigation-drawer\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { createStackNavigator } from \"react-navigation-stack\";\n\nvar Home = function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    _classCallCheck(this, Home);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Home).apply(this, arguments));\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return console.log(\"skdjfn\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      }));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nHome.navigationOptions = {\n  title: \"Home\",\n  drawerIcon: function drawerIcon(_ref4) {\n    var focused = _ref4.focused;\n    return React.createElement(Ionicons, {\n      name: \"md-home\",\n      size: 24,\n      color: focused ? \"blue\" : \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      }\n    });\n  }\n};\nvar FirstActivity_StackNavigator = createStackNavigator({\n  First: {\n    screen: Main,\n    navigationOptions: function navigationOptions(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        headerLeft: function headerLeft() {\n          return React.createElement(NavigationDrawerStructure, {\n            navigationProps: navigation,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            }\n          });\n        },\n        headerStyle: {\n          backgroundColor: \"black\"\n        },\n        headerTintColor: \"#fff\"\n      };\n    }\n  }\n});\nvar Screen2_StackNavigator = createStackNavigator({\n  Second: {\n    screen: Main,\n    navigationOptions: function navigationOptions(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        headerLeft: function headerLeft() {\n          return React.createElement(NavigationDrawerStructure, {\n            navigationProps: navigation,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            }\n          });\n        },\n        headerStyle: {\n          backgroundColor: \"#FF9800\"\n        },\n        headerTintColor: \"#fff\"\n      };\n    }\n  }\n});\nvar Screen3_StackNavigator = createStackNavigator({\n  Third: {\n    screen: Main,\n    navigationOptions: function navigationOptions(_ref3) {\n      var navigation = _ref3.navigation;\n      return {\n        headerLeft: function headerLeft() {\n          return React.createElement(NavigationDrawerStructure, {\n            navigationProps: navigation,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            }\n          });\n        },\n        headerStyle: {\n          backgroundColor: \"#FF9800\"\n        },\n        headerTintColor: \"#fff\"\n      };\n    }\n  }\n});\nvar navigator = createDrawerNavigator({\n  Home: Chat,\n  Settings: Chat\n}, {\n  drawerType: \"permanent\",\n  drawerOpenByDefault: true,\n  drawerBackgroundColor: \"orange\"\n}, {\n  drawerBackgroundColor: \"rgba(255,255,255,.9)\",\n  contentOptions: {\n    activeTintColor: \"#fff\",\n    activeBackgroundColor: \"#6b52ae\"\n  }\n});\nexport default createAppContainer(navigator);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"#ecf0f1\",\n    padding: 8,\n    flexDirection: \"row\"\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  image: {\n    flex: 1,\n    height: 300\n  }\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/chat.js"],"names":["NavigationDrawerStructure","React","Chat","Constants","width","Dimensions","get","Main","createAppContainer","DrawerItems","SafeAreaView","TouchableOpacity","createDrawerNavigator","Ionicons","createStackNavigator","Home","styles","container","console","log","Component","navigationOptions","title","drawerIcon","focused","FirstActivity_StackNavigator","First","screen","navigation","headerLeft","headerStyle","backgroundColor","headerTintColor","Screen2_StackNavigator","Second","Screen3_StackNavigator","Third","navigator","Settings","drawerType","drawerOpenByDefault","drawerBackgroundColor","contentOptions","activeTintColor","activeBackgroundColor","StyleSheet","create","flex","justifyContent","padding","flexDirection","paragraph","margin","fontSize","fontWeight","textAlign","image","height"],"mappings":"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","sourcesContent":["// Docs: https://reactnavigation.org/docs/en/drawer-navigator.html\r\n// Ionicons: http://ionicons.com\r\n// Brent Vatne: https://twitter.com/notbrent\r\n// Eric Vicenti: https://twitter.com/EricVicenti\r\n// Video Tutorial: https://www.youtube.com/watch?v=ZzhOjO-1dCs\r\nimport NavigationDrawerStructure from \"./main2\";\r\nimport * as React from \"react\";\r\nimport Chat from \"./chat1\";\r\nimport {\r\n  Text,\r\n  View,\r\n  Image,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Dimensions,\r\n  TouchableWithoutFeedback,\r\n} from \"react-native\";\r\nimport { Constants } from \"expo\";\r\nconst width = Dimensions.get(\"window\");\r\nimport Main from \"./main1\";\r\nimport {\r\n  createAppContainer,\r\n  DrawerItems,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n} from \"react-navigation\";\r\nimport { createDrawerNavigator } from \"react-navigation-drawer\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { createStackNavigator } from \"react-navigation-stack\";\r\nclass Home extends React.Component {\r\n  static navigationOptions = {\r\n    title: \"Home\",\r\n    drawerIcon: ({ focused }) => (\r\n      <Ionicons name=\"md-home\" size={24} color={focused ? \"blue\" : \"black\"} />\r\n    ),\r\n  };\r\n  componentDidMount() {\r\n    // this.props.navigation.toggleDrawer();\r\n  }\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <TouchableWithoutFeedback\r\n          onPress={() => console.log(\"skdjfn\")}\r\n        ></TouchableWithoutFeedback>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst FirstActivity_StackNavigator = createStackNavigator({\r\n  //All the screen from the First Option will be indexed here\r\n  First: {\r\n    screen: Main,\r\n    navigationOptions: ({ navigation }) => ({\r\n      //title: \"Demo Screen 1\",\r\n      headerLeft: () => (\r\n        <NavigationDrawerStructure navigationProps={navigation} />\r\n      ),\r\n      headerStyle: {\r\n        backgroundColor: \"black\",\r\n      },\r\n      headerTintColor: \"#fff\",\r\n    }),\r\n  },\r\n});\r\n\r\n//Stack Navigator for the Second Option of Navigation Drawer\r\nconst Screen2_StackNavigator = createStackNavigator({\r\n  //All the screen from the Second Option will be indexed here\r\n  Second: {\r\n    screen: Main,\r\n    navigationOptions: ({ navigation }) => ({\r\n      // title: \"Demo Screen 2\",\r\n      headerLeft: () => (\r\n        <NavigationDrawerStructure navigationProps={navigation} />\r\n      ),\r\n      headerStyle: {\r\n        backgroundColor: \"#FF9800\",\r\n      },\r\n      headerTintColor: \"#fff\",\r\n    }),\r\n  },\r\n});\r\n\r\n//Stack Navigator for the Third Option of Navigation Drawer\r\nconst Screen3_StackNavigator = createStackNavigator({\r\n  //All the screen from the Third Option will be indexed here\r\n  Third: {\r\n    screen: Main,\r\n    navigationOptions: ({ navigation }) => ({\r\n      // title: \"Demo Screen 3\",\r\n      headerLeft: () => (\r\n        <NavigationDrawerStructure navigationProps={navigation} />\r\n      ),\r\n      headerStyle: {\r\n        backgroundColor: \"#FF9800\",\r\n      },\r\n      headerTintColor: \"#fff\",\r\n    }),\r\n  },\r\n});\r\n\r\nconst navigator = createDrawerNavigator(\r\n  // {\r\n  //   //Drawer Optons and indexing\r\n  //   // NavScreen1: {\r\n  //   //   screen: FirstActivity_StackNavigator,\r\n  //   //   navigationOptions: {\r\n  //   //     // drawerLabel: \"Demo Screen 1\",\r\n  //   //   },\r\n  //   // },\r\n  //   // NavScreen2: {\r\n  //   //   screen: Screen2_StackNavigator,\r\n  //   //   navigationOptions: {\r\n  //   //     // drawerLabel: \"Demo Screen 2\",\r\n  //   //   },\r\n  //   // },\r\n  //   // NavScreen3: {\r\n  //   //   screen: Screen3_StackNavigator,\r\n  //   //   navigationOptions: {\r\n  //   //     // drawerLabel: \"Demo Screen 3\",\r\n  //   //   },\r\n  //   // },\r\n  // },\r\n  {\r\n    Home: Chat,\r\n    Settings: Chat,\r\n  },\r\n  {\r\n    drawerType: \"permanent\",\r\n    // drawerWidth: 200,\r\n    drawerOpenByDefault: true,\r\n    drawerBackgroundColor: \"orange\",\r\n    // contentComponent: CustomDrawerContentComponent\r\n  },\r\n  {\r\n    drawerBackgroundColor: \"rgba(255,255,255,.9)\",\r\n    contentOptions: {\r\n      activeTintColor: \"#fff\",\r\n      activeBackgroundColor: \"#6b52ae\",\r\n    },\r\n  }\r\n);\r\n\r\nexport default createAppContainer(navigator);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#ecf0f1\",\r\n    padding: 8,\r\n    flexDirection: \"row\",\r\n  },\r\n  paragraph: {\r\n    margin: 24,\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    height: 300,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}