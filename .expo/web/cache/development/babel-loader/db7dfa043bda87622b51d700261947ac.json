{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\addskill.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nvar disp = [];\n\nvar AddSkill = function (_Component) {\n  _inherits(AddSkill, _Component);\n\n  var _super = _createSuper(AddSkill);\n\n  function AddSkill() {\n    var _this;\n\n    _classCallCheck(this, AddSkill);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      count: 0\n    };\n\n    _this.renderComponents = function () {\n      if (disp.length !== 0) disp = [];\n\n      for (var i = 0; i < _this.state.count; i++) {\n        console.log(_this.state.count, i);\n        disp.push(i);\n      }\n    };\n\n    _this.renderify = function () {\n      return disp.map(function (element) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 7\n          }\n        }, React.createElement(Text, {\n          style: {\n            marginTop: 80\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }\n        }, \"Hey There\", element), React.createElement(TouchableOpacity, {\n          key: 10,\n          onPress: function onPress(item) {\n            console.log(\"element is\", element);\n            disp.splice(disp.indexOf(element), 1);\n\n            _this.setState({\n              count: _this.state.count - 1\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }\n        }, \"Press Me \", element)));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddSkill, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, this.state.count), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.setState({\n            count: _this2.state.count + 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, \"Add More AddSkill\")), this.renderComponents(), this.renderify());\n    }\n  }]);\n\n  return AddSkill;\n}(Component);\n\nexport { AddSkill as default };","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/addskill.js"],"names":["React","Component","disp","AddSkill","state","count","renderComponents","length","i","console","log","push","renderify","map","element","marginTop","item","splice","indexOf","setState"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,IAAIC,IAAI,GAAG,EAAX;;IACqBC,Q;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAGRC,gB,GAAmB,YAAM;AACvB,UAAIJ,IAAI,CAACK,MAAL,KAAgB,CAApB,EAAuBL,IAAI,GAAG,EAAP;;AACvB,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAKJ,KAAL,CAAWC,KAA/B,EAAsCG,CAAC,EAAvC,EAA2C;AACzCC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAKN,KAAL,CAAWC,KAAvB,EAA8BG,CAA9B;AACAN,QAAAA,IAAI,CAACS,IAAL,CAAUH,CAAV;AACD;AACF,K;;UACDI,S,GAAY,YAAM;AAChB,aAAOV,IAAI,CAACW,GAAL,CAAS,UAACC,OAAD;AAAA,eACd,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAmCE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA0CD,OAA1C,CAnCF,EAoCE,oBAAC,gBAAD;AACE,UAAA,GAAG,EAAE,EADP;AAEE,UAAA,OAAO,EAAE,iBAACE,IAAD,EAAU;AACjBP,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BI,OAA1B;AACAZ,YAAAA,IAAI,CAACe,MAAL,CAAYf,IAAI,CAACgB,OAAL,CAAaJ,OAAb,CAAZ,EAAmC,CAAnC;;AACA,kBAAKK,QAAL,CAAc;AAAEd,cAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,aAAd;AACD,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgBS,OAAhB,CARF,CApCF,CADc;AAAA,OAAT,CAAP;AAiDD,K;;;;;;;6BACQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKV,KAAL,CAAWC,KAAlB,CADF,EAEE,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACc,QAAL,CAAc;AAAEd,YAAAA,KAAK,EAAE,MAAI,CAACD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,WAAd,CAAN;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,CAFF,EAOG,KAAKC,gBAAL,EAPH,EAQG,KAAKM,SAAL,EARH,CADF;AAYD;;;;EA3EmCX,S;;SAAjBE,Q","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Text, View, TouchableOpacity, Picker, TextInput } from \"react-native\";\r\nvar disp = [];\r\nexport default class AddSkill extends Component {\r\n  state = {\r\n    count: 0,\r\n  };\r\n  renderComponents = () => {\r\n    if (disp.length !== 0) disp = [];\r\n    for (let i = 0; i < this.state.count; i++) {\r\n      console.log(this.state.count, i);\r\n      disp.push(i);\r\n    }\r\n  };\r\n  renderify = () => {\r\n    return disp.map((element) => (\r\n      <View>\r\n        {/* <Picker\r\n          style={{\r\n            height: 50,\r\n            width: this.state.width,\r\n            marginVertical: 20,\r\n            alignSelf: \"center\",\r\n            color: \"black\",\r\n            borderBottomWidth: 1.5,\r\n            borderColor: \"#D4E6F1\",\r\n            borderBottomColor: \"black\",\r\n            backgroundColor: \"#D4E6F1\",\r\n            paddingLeft: 220,\r\n          }}\r\n          selectedValue={this.state.state}\r\n          onValueChange={this.handleValueChange}\r\n          mode=\"dialog\"\r\n        >\r\n          <Picker.Item label=\"Enter State\" value=\"\" />\r\n          <Picker.Item label=\"Delhi\" value=\"Delhi\" />\r\n          <Picker.Item label=\"Chhattisgarh\" value=\"Chhattisgarh\" />\r\n          <Picker.Item label=\"Goa\" value=\"Goa\" />\r\n          <Picker.Item label=\"Gujarat\" value=\"Gujarat\" />\r\n          <Picker.Item label=\"Haryana\" value=\"Haryana\" />\r\n          <Picker.Item label=\"Jharkhand\" value=\"Jharkhand\" />\r\n          <Picker.Item label=\"Karnataka\" value=\"Karnataka\" />\r\n          <Picker.Item label=\"Kerala\" value=\"Kerala\" />\r\n          <Picker.Item label=\"Madhya Pradesh\" value=\"Madhya Pradesh\" />\r\n          <Picker.Item label=\"Maharashtra\" value=\"Maharashtra\" />\r\n          <Picker.Item label=\"Punjab\" value=\"Punjab\" />\r\n          <Picker.Item label=\"Rajasthan\" value=\"Rajasthan\" />\r\n          <Picker.Item label=\"Tamil Nadu\" value=\"Tamil Nadu\" />\r\n          <Picker.Item label=\"Uttar Pradesh\" value=\"Uttar Pradesh\" />\r\n        </Picker> */}\r\n\r\n        <Text style={{ marginTop: 80 }}>Hey There{element}</Text>\r\n        <TouchableOpacity\r\n          key={10}\r\n          onPress={(item) => {\r\n            console.log(\"element is\", element);\r\n            disp.splice(disp.indexOf(element), 1);\r\n            this.setState({ count: this.state.count - 1 });\r\n          }}\r\n        >\r\n          <Text>Press Me {element}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    ));\r\n  };\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Text>{this.state.count}</Text>\r\n        <TouchableOpacity\r\n          onPress={() => this.setState({ count: this.state.count + 1 })}\r\n        >\r\n          <Text>Add More AddSkill</Text>\r\n        </TouchableOpacity>\r\n        {this.renderComponents()}\r\n        {this.renderify()}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}