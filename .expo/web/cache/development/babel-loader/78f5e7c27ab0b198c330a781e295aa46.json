{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\codemaxx\\\\Desktop\\\\iBlood\\\\App.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Font from \"expo-font\";\nimport { Block, Text } from \"./components\";\nimport * as theme from \"./theme\";\nimport * as mocks from \"./mocks\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fontsLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadFonts\",\n    value: function loadFonts() {\n      return Font.loadAsync({\n        \"Montserrat-Regular\": require(\"./assets/fonts/Montserrat-Regular.ttf\"),\n        \"Montserrat-Bold\": require(\"./assets/fonts/Montserrat-Bold.ttf\"),\n        \"Montserrat-SemiBold\": require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\n        \"Montserrat-Medium\": require(\"./assets/fonts/Montserrat-Medium.ttf\"),\n        \"Montserrat-Light\": require(\"./assets/fonts/Montserrat-Light.ttf\")\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.loadFonts());\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"renderRequest\",\n    value: function renderRequest(request) {\n      return React.createElement(Block, {\n        row: true,\n        card: true,\n        shadow: true,\n        color: \"white\",\n        style: styles.request,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, React.createElement(Block, {\n        flex: 0.25,\n        card: true,\n        column: true,\n        color: \"secondary\",\n        style: styles.requestStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, React.createElement(Block, {\n        flex: 0.25,\n        middle: true,\n        center: true,\n        color: theme.colors.primary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        small: true,\n        white: true,\n        style: {\n          textTransform: \"uppercase\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, request.priority)), React.createElement(Block, {\n        flex: 0.7,\n        center: true,\n        middle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        h2: true,\n        white: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, request.bloodType))), React.createElement(Block, {\n        flex: 0.75,\n        column: true,\n        middle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        h3: true,\n        style: {\n          paddingVertical: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, request.name), React.createElement(Text, {\n        caption: true,\n        semibold: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, request.age, \" \\u2022 \", request.gender, \" \\u2022 \", request.distance, \"km \\u2022\", \" \", request.time, \"hrs\")));\n    }\n  }, {\n    key: \"renderRequests\",\n    value: function renderRequests() {\n      var _this2 = this;\n\n      var requests = this.props.requests;\n      return React.createElement(Block, {\n        flex: 0.8,\n        column: true,\n        color: \"gray2\",\n        style: styles.requests,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, React.createElement(Block, {\n        flex: false,\n        row: true,\n        space: \"between\",\n        style: styles.requestsHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        light: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, \"Recent Updates\"), React.createElement(TouchableOpacity, {\n        activeOpacity: 0.8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        semibold: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, \"View All\"))), React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, requests.map(function (request) {\n        return React.createElement(TouchableOpacity, {\n          activeOpacity: 0.8,\n          key: \"request-\" + request.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }\n        }, _this2.renderRequest(request));\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.fontsLoaded) {\n        return React.createElement(Block, {\n          center: true,\n          middle: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }\n        }, React.createElement(Image, {\n          style: {\n            width: 140,\n            height: 140\n          },\n          source: require(\"./assets/icon.png\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(SafeAreaView, {\n        style: styles.safe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }\n      }, this.renderRequests());\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nApp.defaultProps = {\n  user: mocks.user,\n  requests: mocks.requests,\n  chart: mocks.chart\n};\nexport default App;\nvar styles = StyleSheet.create({\n  safe: {\n    flex: 1,\n    backgroundColor: theme.colors.primary\n  },\n  requests: {\n    marginTop: -55,\n    paddingTop: 55 + 20,\n    paddingHorizontal: 15,\n    zIndex: -1\n  },\n  requestsHeader: {\n    paddingHorizontal: 20,\n    paddingBottom: 15\n  },\n  request: {\n    padding: 20,\n    marginBottom: 15\n  },\n  requestStatus: {\n    marginRight: 20,\n    overflow: \"hidden\",\n    height: 90\n  }\n});","map":{"version":3,"sources":["C:/Users/codemaxx/Desktop/iBlood/App.js"],"names":["React","Font","Block","Text","theme","mocks","App","state","fontsLoaded","loadAsync","require","loadFonts","setState","request","styles","requestStatus","colors","primary","textTransform","priority","bloodType","paddingVertical","name","age","gender","distance","time","requests","props","requestsHeader","map","id","renderRequest","width","height","safe","renderRequests","Component","defaultProps","user","chart","StyleSheet","create","flex","backgroundColor","marginTop","paddingTop","paddingHorizontal","zIndex","paddingBottom","padding","marginBottom","marginRight","overflow"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Image,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport * as Font from \"expo-font\";\r\n\r\nimport { Block, Text } from \"./components\";\r\nimport * as theme from \"./theme\";\r\nimport * as mocks from \"./mocks\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fontsLoaded: false,\r\n  };\r\n\r\n  loadFonts() {\r\n    return Font.loadAsync({\r\n      \"Montserrat-Regular\": require(\"./assets/fonts/Montserrat-Regular.ttf\"),\r\n      \"Montserrat-Bold\": require(\"./assets/fonts/Montserrat-Bold.ttf\"),\r\n      \"Montserrat-SemiBold\": require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\r\n      \"Montserrat-Medium\": require(\"./assets/fonts/Montserrat-Medium.ttf\"),\r\n      \"Montserrat-Light\": require(\"./assets/fonts/Montserrat-Light.ttf\"),\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.loadFonts();\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  renderRequest(request) {\r\n    return (\r\n      <Block row card shadow color=\"white\" style={styles.request}>\r\n        <Block\r\n          flex={0.25}\r\n          card\r\n          column\r\n          color=\"secondary\"\r\n          style={styles.requestStatus}\r\n        >\r\n          <Block flex={0.25} middle center color={theme.colors.primary}>\r\n            <Text small white style={{ textTransform: \"uppercase\" }}>\r\n              {request.priority}\r\n            </Text>\r\n          </Block>\r\n          <Block flex={0.7} center middle>\r\n            <Text h2 white>\r\n              {request.bloodType}\r\n            </Text>\r\n          </Block>\r\n        </Block>\r\n        <Block flex={0.75} column middle>\r\n          <Text h3 style={{ paddingVertical: 8 }}>\r\n            {request.name}\r\n          </Text>\r\n          <Text caption semibold>\r\n            {request.age} • {request.gender} • {request.distance}km •{\" \"}\r\n            {request.time}hrs\r\n          </Text>\r\n        </Block>\r\n      </Block>\r\n    );\r\n  }\r\n\r\n  renderRequests() {\r\n    const { requests } = this.props;\r\n\r\n    return (\r\n      <Block flex={0.8} column color=\"gray2\" style={styles.requests}>\r\n        <Block flex={false} row space=\"between\" style={styles.requestsHeader}>\r\n          <Text light>Recent Updates</Text>\r\n          <TouchableOpacity activeOpacity={0.8}>\r\n            <Text semibold>View All</Text>\r\n          </TouchableOpacity>\r\n        </Block>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          {requests.map((request) => (\r\n            <TouchableOpacity activeOpacity={0.8} key={`request-${request.id}`}>\r\n              {this.renderRequest(request)}\r\n            </TouchableOpacity>\r\n          ))}\r\n        </ScrollView>\r\n      </Block>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.fontsLoaded) {\r\n      return (\r\n        <Block center middle>\r\n          <Image\r\n            style={{ width: 140, height: 140 }}\r\n            source={require(\"./assets/icon.png\")}\r\n          />\r\n        </Block>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <SafeAreaView style={styles.safe}>{this.renderRequests()}</SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nApp.defaultProps = {\r\n  user: mocks.user,\r\n  requests: mocks.requests,\r\n  chart: mocks.chart,\r\n};\r\n\r\nexport default App;\r\n\r\nconst styles = StyleSheet.create({\r\n  safe: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.primary,\r\n  },\r\n  requests: {\r\n    marginTop: -55,\r\n    paddingTop: 55 + 20,\r\n    paddingHorizontal: 15,\r\n    zIndex: -1,\r\n  },\r\n  requestsHeader: {\r\n    paddingHorizontal: 20,\r\n    paddingBottom: 15,\r\n  },\r\n  request: {\r\n    padding: 20,\r\n    marginBottom: 15,\r\n  },\r\n  requestStatus: {\r\n    marginRight: 20,\r\n    overflow: \"hidden\",\r\n    height: 90,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}